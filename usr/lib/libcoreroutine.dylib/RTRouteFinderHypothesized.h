/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:16 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/RTRouteFinderProtocol.h>

@protocol OS_dispatch_queue;
@class NSObject, RTMapAccess, NSArray, NSString;

@interface RTRouteFinderHypothesized : NSObject <RTRouteFinderProtocol> {

	NSObject*<OS_dispatch_queue> _queue;
	/*^block*/id _handler;
	RTMapAccess* _mapAccess;
	NSArray* _routeBeforeHypothesis;
	NSArray* _routeFromHypothesis;
	NSArray* _routeAfterHypothesis;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;              //@synthesize queue=_queue - In the implementation block
@property (nonatomic,copy) id handler;                                        //@synthesize handler=_handler - In the implementation block
@property (nonatomic,retain) RTMapAccess * mapAccess;                         //@synthesize mapAccess=_mapAccess - In the implementation block
@property (nonatomic,retain) NSArray * routeBeforeHypothesis;                 //@synthesize routeBeforeHypothesis=_routeBeforeHypothesis - In the implementation block
@property (nonatomic,retain) NSArray * routeFromHypothesis;                   //@synthesize routeFromHypothesis=_routeFromHypothesis - In the implementation block
@property (nonatomic,retain) NSArray * routeAfterHypothesis;                  //@synthesize routeAfterHypothesis=_routeAfterHypothesis - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(RTMapAccess *)mapAccess;
-(id)initWithQueue:(id)arg1 mapAccess:(id)arg2 ;
-(void)findRouteForWaypoints:(id)arg1 routeHandler:(/*^block*/id)arg2 ;
-(void)setMapAccess:(RTMapAccess *)arg1 ;
-(void)_fallbackToDefaultRouteFinderForWaypoints:(id)arg1 routeHandler:(/*^block*/id)arg2 ;
-(double)_verifyHypothesisRoute:(id)arg1 locations:(id)arg2 outStartLocationIndex:(long long*)arg3 outEndLocationIndex:(long long*)arg4 ;
-(void)setRouteBeforeHypothesis:(NSArray *)arg1 ;
-(void)setRouteAfterHypothesis:(NSArray *)arg1 ;
-(void)setRouteFromHypothesis:(NSArray *)arg1 ;
-(NSArray *)routeBeforeHypothesis;
-(NSArray *)routeFromHypothesis;
-(NSArray *)routeAfterHypothesis;
-(void)_findSubRouteForLocations:(id)arg1 originRoad:(id)arg2 destinationRoad:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)_findRoadsOnHypothesisRoute:(id)arg1 startSegmentIndex:(unsigned)arg2 endSegmentIndex:(unsigned)arg3 handler:(/*^block*/id)arg4 ;
-(void)_findRouteForWaypoints:(id)arg1 hypothesisRoutes:(id)arg2 routeHandler:(/*^block*/id)arg3 ;
-(void)findRouteForWaypoints:(id)arg1 hypothesisRoutes:(id)arg2 routeHandler:(/*^block*/id)arg3 ;
-(id)handler;
-(void)setHandler:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

