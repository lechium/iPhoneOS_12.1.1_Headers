/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:15 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, RTInvocationDispatcher, RTAuthorizationManager, RTLocationManager, RTLearnedLocationManager, RTVisitManager, RTMicroLocation, NSUUID;

@interface RTLocationTagger : NSObject {

	BOOL _ready;
	BOOL _realtimeLocationTaggingAllowed;
	BOOL _historicLocationTaggingAllowed;
	NSObject*<OS_dispatch_queue> _queue;
	RTInvocationDispatcher* _dispatcher;
	RTAuthorizationManager* _authorizationManager;
	RTLocationManager* _locationManager;
	RTLearnedLocationManager* _learnedLocationManager;
	RTVisitManager* _visitManager;
	double _maximumEventLocationTaggingTimeInterval;
	RTMicroLocation* _currentMicroLocation;
	NSUUID* _currentLocationOfInterestIdentifier;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                             //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) BOOL ready;                                                     //@synthesize ready=_ready - In the implementation block
@property (nonatomic,retain) RTInvocationDispatcher * dispatcher;                            //@synthesize dispatcher=_dispatcher - In the implementation block
@property (nonatomic,retain) RTAuthorizationManager * authorizationManager;                  //@synthesize authorizationManager=_authorizationManager - In the implementation block
@property (nonatomic,retain) RTLocationManager * locationManager;                            //@synthesize locationManager=_locationManager - In the implementation block
@property (nonatomic,retain) RTLearnedLocationManager * learnedLocationManager;              //@synthesize learnedLocationManager=_learnedLocationManager - In the implementation block
@property (nonatomic,retain) RTVisitManager * visitManager;                                  //@synthesize visitManager=_visitManager - In the implementation block
@property (assign,nonatomic) BOOL realtimeLocationTaggingAllowed;                            //@synthesize realtimeLocationTaggingAllowed=_realtimeLocationTaggingAllowed - In the implementation block
@property (assign,nonatomic) BOOL historicLocationTaggingAllowed;                            //@synthesize historicLocationTaggingAllowed=_historicLocationTaggingAllowed - In the implementation block
@property (assign,nonatomic) double maximumEventLocationTaggingTimeInterval;                 //@synthesize maximumEventLocationTaggingTimeInterval=_maximumEventLocationTaggingTimeInterval - In the implementation block
@property (nonatomic,retain) RTMicroLocation * currentMicroLocation;                         //@synthesize currentMicroLocation=_currentMicroLocation - In the implementation block
@property (nonatomic,retain) NSUUID * currentLocationOfInterestIdentifier;                   //@synthesize currentLocationOfInterestIdentifier=_currentLocationOfInterestIdentifier - In the implementation block
-(void)_unregisterForNotifications;
-(void)shutdown;
-(RTAuthorizationManager *)authorizationManager;
-(RTLocationManager *)locationManager;
-(void)setLocationManager:(RTLocationManager *)arg1 ;
-(void)_registerForNotifications;
-(id)initWithAuthorizationManager:(id)arg1 locationManager:(id)arg2 learnedLocationManager:(id)arg3 visitManager:(id)arg4 ;
-(void)onMicroLocationUpdate:(id)arg1 ;
-(RTVisitManager *)visitManager;
-(void)onLowConfidenceVisitNotification:(id)arg1 ;
-(void)onMagicalMomentsLocationUsageUpdate:(id)arg1 ;
-(void)onRoutineEnabledUpdate:(id)arg1 ;
-(void)setRealtimeLocationTaggingAllowed:(BOOL)arg1 ;
-(BOOL)realtimeLocationTaggingAllowed;
-(void)setHistoricLocationTaggingAllowed:(BOOL)arg1 ;
-(RTLearnedLocationManager *)learnedLocationManager;
-(void)_fetchLowConfidenceVisitIncident:(/*^block*/id)arg1 ;
-(void)setReady:(BOOL)arg1 ;
-(RTInvocationDispatcher *)dispatcher;
-(void)onVisitManagerAvailable:(id)arg1 ;
-(void)_handleLowConfidenceVisitIncident:(id)arg1 ;
-(void)_armLocationTagger;
-(void)setCurrentMicroLocation:(RTMicroLocation *)arg1 ;
-(RTMicroLocation *)currentMicroLocation;
-(void)_disarmLocationTagger;
-(BOOL)ready;
-(BOOL)_validateObject:(id)arg1 ;
-(void)_performTagWithObject:(id)arg1 ;
-(void)tagObjectWithLocation:(id)arg1 handler:(/*^block*/id)arg2 ;
-(BOOL)tagObjectWithLocation:(id)arg1 error:(id*)arg2 ;
-(void)setDispatcher:(RTInvocationDispatcher *)arg1 ;
-(void)setAuthorizationManager:(RTAuthorizationManager *)arg1 ;
-(void)setLearnedLocationManager:(RTLearnedLocationManager *)arg1 ;
-(void)setVisitManager:(RTVisitManager *)arg1 ;
-(BOOL)historicLocationTaggingAllowed;
-(double)maximumEventLocationTaggingTimeInterval;
-(void)setMaximumEventLocationTaggingTimeInterval:(double)arg1 ;
-(NSUUID *)currentLocationOfInterestIdentifier;
-(void)setCurrentLocationOfInterestIdentifier:(NSUUID *)arg1 ;
-(void)realtimeLocationTaggingAllowed:(/*^block*/id)arg1 ;
-(void)historicalLocationTaggingAllowed:(/*^block*/id)arg1 ;
-(void)tagObject:(id)arg1 withLocationVisitEvents:(id)arg2 ;
-(void)tagObject:(id)arg1 withMicroLocationEvents:(id)arg2 minimumProbability:(double)arg3 ;
-(id)init;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

