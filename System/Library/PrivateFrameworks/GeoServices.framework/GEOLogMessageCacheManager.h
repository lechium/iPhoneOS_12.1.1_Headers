/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:43:39 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, GEOLogMsgCacheDBInfo, NSMutableArray, NSDate;

@interface GEOLogMessageCacheManager : NSObject {

	NSString* _logMessageCacheFilePath;
	GEOLogMsgCacheDBInfo* _logMsgCacheDBInfo;
	long long _numberOfLogMessagesInCache;
	NSString* _policyIdentifier;
	NSString* _adaptorId;
	int _supportedLogMessageType;
	BOOL _fromLogFrameworkAdaptor;
	long long _logMessageCacheIterator;
	long long _logMessageCacheEndIterator;
	NSMutableArray* _retrivedLogMessageCacheIds;
	long long _maxNumberOfLogMessagesAllowedInCache;
	long long _logMessagesOverflowPurgeSize;
	unsigned long long _encryptionType;
	BOOL _realtimeAdaptor;
	long long _cacheCountFlushThreshold;
	NSDate* _oldestLogMessageInCache;

}

@property (assign,nonatomic) NSDate * oldestLogMessageInCache; 
@property (assign,nonatomic) unsigned long long encryptionType;              //@synthesize encryptionType=_encryptionType - In the implementation block
+(id)logMsgCacheDatabaseObjectForPolicyIdentity:(id)arg1 ;
-(void)_createTables;
-(id)initWithLogMessageCacheFilePath:(id)arg1 policyIdentifier:(id)arg2 maxNumberOfLogMessagesAllowedInCache:(long long)arg3 logMessagesOverflowPurgeSize:(long long)arg4 encryptionType:(unsigned long long)arg5 realtimeAdaptor:(BOOL)arg6 cacheCountFlushThreshold:(long long)arg7 adaptorId:(id)arg8 supportedLogMessageType:(int)arg9 fromLogFrameworkAdaptor:(BOOL)arg10 ;
-(void)closeLogMessageCache;
-(BOOL)isLogMessageCacheEmpty;
-(void)insertLogMessageIntoCache:(id)arg1 ;
-(BOOL)shouldFlushLogMessageCache;
-(void)resetLogMessageCacheIterator;
-(id)retrieveNextBatchOfLogMessagesWithLimitCount:(long long)arg1 limitSize:(long long)arg2 ;
-(void)updateCurrentlyRetrievedLogMessagesRetryCount;
-(void)purgeCurrentlyRetrievedLogMessagesFromCache;
-(void)purgeExpiredLogMessagesFromCache:(double)arg1 ;
-(void)openCreateLogMessageCache;
-(void)purgeAllLogMessagesFromCache;
-(void)_setupWithLogMsgCacheFilePath:(id)arg1 policyIdentifier:(id)arg2 maxNumberOfLogMessagesAllowedInCache:(long long)arg3 logMessagesOverflowPurgeSize:(long long)arg4 encryptionType:(unsigned long long)arg5 realtimeAdaptor:(BOOL)arg6 cacheCountFlushThreshold:(long long)arg7 adaptorId:(id)arg8 supportedLogMessageType:(int)arg9 fromLogFrameworkAdaptor:(BOOL)arg10 ;
-(void)_migrateLogMessageCacheTableFromOldDatabase:(id)arg1 ;
-(void)openLogMessageCache;
-(void)_openLogMessageCacheDBFile;
-(void)_openCreateLogMessageCacheDBFile;
-(NSDate *)oldestLogMessageInCache;
-(void)setOldestLogMessageInCache:(NSDate *)arg1 ;
-(void)beginLogMessageCacheTransaction;
-(id)_updatedSQLQueryFromQuery:(id)arg1 ;
-(void)_cleanupPartiallyCreatedLogMessageCacheDBFile;
-(id)retrieveFirstBatchOfLogMessagesWithLimitCount:(long long)arg1 limitSize:(long long)arg2 ;
-(id)_retrieveBatchOfLogMessagesLimitCount:(long long)arg1 limitSize:(long long)arg2 ;
-(void)commitLogMessageCacheTransaction;
-(BOOL)_logMessageCacheFileExists;
-(void)_deleteExpiredLogMessageCacheDBFile:(double)arg1 ;
-(int)_deleteAllExpiredLogMessages:(double)arg1 ;
-(void)_cleanupLogMessageCacheDatabase;
-(BOOL)_executeSQL:(id)arg1 ;
-(long long)_getNumberOfLogMessagesInCache;
-(BOOL)_usingInMemoryLogMessageCacheFile;
-(BOOL)_encryptionEnabled;
-(void)_beginLogMessageCacheTransaction;
-(void)_commitLogMessageCacheTransaction;
-(void)rollbackLogMessageCacheTransaction;
-(void)_rollbackLogMessageCacheTransaction;
-(int)_sqlite3_open_protection_flag;
-(void)_migrateDatabaseIfNeeded;
-(void)_setLogMessageCacheDBJournalMode;
-(void)_updateLogMessageCacheDBUserVersion;
-(long long)_queryLogMessageCacheDBUserVersion;
-(void)_addRetryCountColumnToTable;
-(int)_deleteFixedNumberOfOlderLogMessages:(long long)arg1 ;
-(id)_groupIDOfNextPendingLogMessage;
-(long long)_retrieveEndLogMessageCacheIterator;
-(void)_startLogMessageCacheTransactionTimer;
-(void)_stopLogMessageCacheTransactionTimer;
-(id)initWithLogMessageCacheDBInfo:(id)arg1 logMessageCacheFilePath:(id)arg2 policyIdentifier:(id)arg3 maxNumberOfLogMessagesAllowedInCache:(long long)arg4 logMessagesOverflowPurgeSize:(long long)arg5 encryptionType:(unsigned long long)arg6 realtimeAdaptor:(BOOL)arg7 cacheCountFlushThreshold:(long long)arg8 adaptorId:(id)arg9 supportedLogMessageType:(int)arg10 fromLogFrameworkAdaptor:(BOOL)arg11 ;
-(unsigned long long)encryptionType;
-(void)setEncryptionType:(unsigned long long)arg1 ;
-(void)dealloc;
@end

