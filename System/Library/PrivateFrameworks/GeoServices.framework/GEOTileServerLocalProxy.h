/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:43:26 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <GeoServices/GEOTileServerProxy.h>
#import <libobjc.A.dylib/GEOProactiveTileDownloaderDelegate.h>
#import <libobjc.A.dylib/GEOResourceManifestTileGroupObserver.h>

@protocol OS_dispatch_queue;
@class GEOTileDB, NSString, NSMapTable, NSMutableArray, NSLock, NSObject, GEOProactiveTileDownloader;

@interface GEOTileServerLocalProxy : GEOTileServerProxy <GEOProactiveTileDownloaderDelegate, GEOResourceManifestTileGroupObserver> {

	GEOTileDB* _tileCache;
	NSString* _cacheLocation;
	NSMapTable* _providers;
	NSMutableArray* _inProgress;
	NSLock* _inProgressLock;
	NSObject*<OS_dispatch_queue> _workQueue;
	GEOProactiveTileDownloader* _proactiveTileDownloader;
	BOOL _updatingManifestForProactiveTileDownload;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)enableCDSObserversIfNecessary;
-(void)tileRequester:(id)arg1 receivedError:(id)arg2 ;
-(void)tileRequesterFinished:(id)arg1 ;
-(void)reprioritizeKey:(const GEOTileKey*)arg1 newPriority:(unsigned)arg2 ;
-(void)tileRequester:(id)arg1 receivedData:(id)arg2 tileEdition:(unsigned)arg3 tileSet:(unsigned)arg4 etag:(id)arg5 forKey:(GEOTileKey)arg6 userInfo:(id)arg7 ;
-(void)reportCorruptTile:(const GEOTileKey*)arg1 ;
-(id)initWithCacheLocation:(id)arg1 manifestConfiguration:(id)arg2 locale:(id)arg3 delegateQueue:(id)arg4 delegate:(id)arg5 ;
-(void)cancel:(const GEOTileKey*)arg1 ;
-(void)generateRequestedFromTileLoaderBeginSignpost:(unsigned long long)arg1 ;
-(void)generateRequestedFromTileLoaderEndSignpost:(unsigned long long)arg1 ;
-(void)beginPreloadSessionOfSize:(unsigned long long)arg1 exclusive:(BOOL)arg2 ;
-(void)endPreloadSession;
-(void)shrinkDiskCacheToSize:(unsigned long long)arg1 ;
-(void)calculateFreeableSize;
-(void)registerProvider:(Class)arg1 ;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)resourceManifestManager:(id)arg1 didChangeActiveTileGroup:(id)arg2 fromOldTileGroup:(id)arg3 ;
-(void)loadTiles:(id)arg1 priorities:(const unsigned*)arg2 hasAdditionalInfos:(const BOOL*)arg3 additionalInfos:(const SCD_Struct_GE24*)arg4 signpostIDs:(const unsigned long long*)arg5 reason:(unsigned char)arg6 options:(unsigned long long)arg7 client:(id)arg8 ;
-(void)flushPendingWrites;
-(BOOL)skipNetworkForKeysWhenPreloading:(id)arg1 ;
-(void)_registerBuiltInProviders;
-(void)_forceDataSaverPreload:(id)arg1 ;
-(void)_initiateDataSaverPreloadIfPossible;
-(void)_updateExpiringTilesets;
-(id)userInfoForRequesterUserInfo:(id)arg1 tileEdition:(unsigned)arg2 tileSet:(unsigned)arg3 eTag:(id)arg4 bundleIdentifier:(id)arg5 reason:(unsigned char)arg6 ;
-(void)proactiveTileDownloaderDidFinish:(id)arg1 ;
-(void)dealloc;
-(void)open;
-(void)close;
@end

