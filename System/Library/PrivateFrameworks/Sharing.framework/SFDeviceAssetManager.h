/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:23 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <Sharing/Sharing-Structs.h>
@class NSObject, MAAsset, CUReachabilityMonitor, NSDictionary, NSURL, NSMutableDictionary, NSString;

@interface SFDeviceAssetManager : NSObject {

	NSObject*<OS_dispatch_queue> _workQueue;
	BOOL _activateCalled;
	BOOL _invalidateCalled;
	BOOL _invalidateDone;
	MAAsset* _deviceAssetManagement;
	CUReachabilityMonitor* _reachabilityMonitor;
	NSDictionary* _productTypesMappingTable;
	NSDictionary* _cachedProductMappingsTable;
	NSDictionary* _mpnMappingTable;
	NSDictionary* _cachedMpnMappingTable;
	NSURL* _cacheDirectory;
	NSMutableDictionary* _cachedQueryPaths;
	BOOL _useProcessLocalCache;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	NSString* _networkStatus;

}

@property (nonatomic,readonly) NSString * networkStatus;                              //@synthesize networkStatus=_networkStatus - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;              //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (assign,nonatomic) BOOL useProcessLocalCache;                               //@synthesize useProcessLocalCache=_useProcessLocalCache - In the implementation block
-(void)onqueue_activate;
-(void)onqueue_invalidate;
-(BOOL)useProcessLocalCache;
-(void)logNetworkStatus;
-(void)onqueue_updateMetaDataWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onqueue_updateManagementAssetIfNecessary;
-(id)onqueue_managementAsset;
-(void)addKeyValuePair:(id)arg1 with:(id)arg2 toQuery:(id)arg3 ;
-(void)onqueue_getAssetBundleForDeviceQuery:(id)arg1 timeout:(double)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(id)locallyCachedQueryResults;
-(void)clearQueryResultFromLocalCache:(id)arg1 ;
-(void)onqueue_validateProductTypeInQuery:(id)arg1 ;
-(void)onqueue_validateMPNInQuery:(id)arg1 ;
-(void)onqueue_getCachedAssetBundleForTask:(id)arg1 ;
-(void)addQueryResultToLocalCache:(id)arg1 url:(id)arg2 isFallback:(BOOL)arg3 ;
-(BOOL)canUseMobileAssetSPI;
-(void)onqueue_findAssetBundleForDeviceQuery:(id)arg1 installedOnly:(BOOL)arg2 fallback:(BOOL)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(void)onqueue_manuallyFindFallbackAssetBundleMatchingQuery:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)onqueue_purgeAssetsMatchingQuery:(id)arg1 ;
-(id)queryTypeForInstalledOnly:(BOOL)arg1 fallback:(BOOL)arg2 ;
-(void)onqueue_findAssetBundleForAssetQuery:(id)arg1 ucat:(LogCategory*)arg2 queryType:(id)arg3 fallback:(BOOL)arg4 retryAttempt:(BOOL)arg5 withCompletionHandler:(/*^block*/id)arg6 ;
-(void)onqueue_downloadAsset:(id)arg1 ucat:(LogCategory*)arg2 queryLogString:(id)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(id)onqueue_mappedProductTypeForProductType:(id)arg1 ;
-(id)hardcodedMappedProducts;
-(id)locallyCachedProductMappings;
-(id)onqueue_assetMappedProductTypeForProductType:(id)arg1 ;
-(id)locallyCachedMPNsForProductType:(id)arg1 ;
-(id)onqueue_assetMappedMPNForMPN:(id)arg1 forProductType:(id)arg2 ;
-(void)storeProductMappingsInLocalCache:(id)arg1 ;
-(id)mpnMappingFileNameForProductType:(id)arg1 ;
-(void)storeMPNsInLocalCache:(id)arg1 forProductType:(id)arg2 ;
-(id)localCacheWithFileName:(id)arg1 ;
-(void)storeEntries:(id)arg1 inLocalCacheWithFileName:(id)arg2 ;
-(void)getAssetBundleForDeviceQuery:(id)arg1 timeout:(double)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)purgeAssetsMatchingQuery:(id)arg1 ;
-(void)mappedProductTypeForProductType:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)storeQueryResultsInLocalCache:(id)arg1 ;
-(void)setUseProcessLocalCache:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)cacheDirectory;
-(NSString *)networkStatus;
-(id)init;
-(void)invalidate;
-(void)activate;
@end

