/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:24 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct __SFBrowser* SFBrowserRef;

typedef struct opaque_pthread_mutex_t {
	long long __sig;
	char __opaque[56];
} opaque_pthread_mutex_t;

typedef struct __SFOperation* SFOperationRef;

typedef struct __SFNode* SFNodeRef;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct CGContext* CGContextRef;

typedef struct {
	unsigned val[8];
} SCD_Struct_SF8;

typedef struct {
	unsigned char field1;
	unsigned char field2;
	unsigned char field3;
	unsigned char field4;
	unsigned char field5;
	unsigned char field6;
} SCD_Struct_SF9;

typedef struct __CFUserNotification* CFUserNotificationRef;

typedef struct channel* channelRef;

typedef struct channel_ring_desc* channel_ring_descRef;

typedef struct BTSessionImpl* BTSessionImplRef;

typedef struct BTDeviceImpl* BTDeviceImplRef;

typedef struct BTPairingAgentImpl* BTPairingAgentImplRef;

typedef struct PairingSubstate {
	int contacts;
	int homeKit;
	int visual;
	int pairVerify;
	int pin;
} PairingSubstate;

typedef struct OpaqueIOPSPowerSourceID* OpaqueIOPSPowerSourceIDRef;

typedef struct __SecCertificate* SecCertificateRef;

typedef struct __SecIdentity* SecIdentityRef;

typedef struct __WiFiManagerClient* WiFiManagerClientRef;

typedef struct PairingSessionPrivate* PairingSessionPrivateRef;

typedef struct SSLContext* SSLContextRef;

typedef struct CryptoAEADPrivate* CryptoAEADPrivateRef;

typedef struct __SecTrust* SecTrustRef;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct __WiFiDeviceClient* WiFiDeviceClientRef;

