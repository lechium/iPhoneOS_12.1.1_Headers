/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:48:14 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppSupportUI/AppSupportUI-Structs.h>
#import <libobjc.A.dylib/_NUIGridArrangementContainer.h>

@protocol NUIArrangementContainer, NUIGridArrangementDataSource;
@class NSString;

@interface NUIGridArrangement : NSObject <_NUIGridArrangementContainer> {

	NUIGridArrangement* _arrangement;
	id<NUIArrangementContainer> _container;
	id<NUIGridArrangementDataSource> _dataSource;
	double _scale;
	struct {
		unsigned delegateWidth : 1;
		unsigned delegateHeight : 1;
		unsigned containerDirection : 1;
	}  _flags;
	CGRect _bounds;

}

@property (nonatomic,__weak,readonly) id<NUIArrangementContainer> container; 
@property (nonatomic,__weak,readonly) id<NUIGridArrangementDataSource> dataSource; 
@property (assign,getter=isBaselineRelativeArrangement,nonatomic) BOOL baselineRelativeArrangement; 
@property (assign,nonatomic) long long horizontalDistribution; 
@property (assign,nonatomic) long long verticalDistribution; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)populateGridArrangementCells:(vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >*)arg1 ;
-(void)populateGridArrangementDimension:(vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >*)arg1 withCells:(const vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >*)arg2 axis:(long long)arg3 ;
-(long long)verticalDistribution;
-(void)setVerticalDistribution:(long long)arg1 ;
-(void)_cacheDisplayScaleIfNeeded;
-(CGRect)unionFrameForItemsInColumns:(NSRange)arg1 rows:(NSRange)arg2 inBounds:(CGRect)arg3 ;
-(void)setHorizontalDistribution:(long long)arg1 ;
-(long long)horizontalDistribution;
-(void)positionItemsInColumns:(NSRange)arg1 rows:(NSRange)arg2 inBounds:(CGRect)arg3 block:(/*^block*/id)arg4 ;
-(CGRect)frameForColumns:(NSRange)arg1 rows:(NSRange)arg2 inBounds:(CGRect)arg3 ;
-(id)initWithContainer:(id)arg1 dataSource:(id)arg2 ;
-(CGSize)layoutSizeFittingSize:(CGSize)arg1 ;
-(void)positionItemsInBounds:(CGRect)arg1 block:(/*^block*/id)arg2 ;
-(CGSize)contentLayoutSizeFittingSize:(CGSize)arg1 forArrangedSubview:(id)arg2 ;
-(CGRect)layoutFrameForArrangedSubview:(id)arg1 withProposedContentFrame:(CGRect)arg2 ;
-(void)dealloc;
-(void)reloadData;
-(id<NUIArrangementContainer>)container;
-(id<NUIGridArrangementDataSource>)dataSource;
-(void)setBaselineRelativeArrangement:(BOOL)arg1 ;
-(BOOL)isBaselineRelativeArrangement;
@end

