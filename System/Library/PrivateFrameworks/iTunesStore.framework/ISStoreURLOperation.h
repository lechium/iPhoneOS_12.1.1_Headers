/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:44:55 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iTunesStore/ISURLOperation.h>
#import <libobjc.A.dylib/ISBiometricSessionDelegate.h>

@protocol ISBiometricSessionDelegate;
@class NSNumber, SSVFairPlaySAPSession, SSBiometricAuthenticationContext, SSBag, SSURLBagContext, NSString;

@interface ISStoreURLOperation : ISURLOperation <ISBiometricSessionDelegate> {

	long long _activeMachineDataStyle;
	NSNumber* _authenticatedDSID;
	BOOL _canSendGUIDParameter;
	BOOL _ignorePreexistingSecureToken;
	BOOL _isURLBagRequest;
	long long _machineDataStyle;
	BOOL _needsAuthentication;
	BOOL _needsURLBag;
	SSVFairPlaySAPSession* _sapSession;
	BOOL _shouldAppendAuthKitHeaders;
	BOOL _shouldAppendStorefrontToURL;
	BOOL _shouldSendXTokenHeader;
	BOOL _urlKnownToBeTrusted;
	BOOL _useUserSpecificURLBag;
	BOOL _needsTermsAndConditionsAcceptance;
	BOOL _shouldCancelBiometricTokenUpdate;
	BOOL _shouldSuppressUserInfo;
	BOOL _shouldSendAKClientInfoHeaders;
	BOOL _shouldSendDSIDHeader;
	SSBiometricAuthenticationContext* _biometricAuthenticationContext;
	id<ISBiometricSessionDelegate> _biometricSessionDelegate;
	SSBag* _bag;

}

@property (retain) NSNumber * authenticatedDSID;                                                   //@synthesize authenticatedDSID=_authenticatedDSID - In the implementation block
@property (assign,nonatomic) BOOL ignorePreexistingSecureToken; 
@property (__weak) id<ISStoreURLOperationDelegate> delegate; 
@property (__weak) id<ISBiometricSessionDelegate> biometricSessionDelegate;                        //@synthesize biometricSessionDelegate=_biometricSessionDelegate - In the implementation block
@property (retain) SSBiometricAuthenticationContext * biometricAuthenticationContext;              //@synthesize biometricAuthenticationContext=_biometricAuthenticationContext - In the implementation block
@property (assign) BOOL canSendGUIDParameter; 
@property (assign) long long machineDataStyle;                                                     //@synthesize machineDataStyle=_machineDataStyle - In the implementation block
@property (assign) BOOL needsURLBag;                                                               //@synthesize needsURLBag=_needsURLBag - In the implementation block
@property (assign) BOOL needsAuthentication;                                                       //@synthesize needsAuthentication=_needsAuthentication - In the implementation block
@property (assign) BOOL needsTermsAndConditionsAcceptance;                                         //@synthesize needsTermsAndConditionsAcceptance=_needsTermsAndConditionsAcceptance - In the implementation block
@property (assign) BOOL performsMachineDataActions; 
@property (retain) SSVFairPlaySAPSession * SAPSession; 
@property (assign,nonatomic) BOOL shouldAppendAuthKitHeaders;                                      //@synthesize shouldAppendAuthKitHeaders=_shouldAppendAuthKitHeaders - In the implementation block
@property (assign,nonatomic) BOOL shouldAppendStorefrontToURL;                                     //@synthesize shouldAppendStorefrontToURL=_shouldAppendStorefrontToURL - In the implementation block
@property (assign) BOOL shouldCancelBiometricTokenUpdate;                                          //@synthesize shouldCancelBiometricTokenUpdate=_shouldCancelBiometricTokenUpdate - In the implementation block
@property (assign) BOOL shouldSuppressUserInfo;                                                    //@synthesize shouldSuppressUserInfo=_shouldSuppressUserInfo - In the implementation block
@property (assign) BOOL shouldSendAKClientInfoHeaders;                                             //@synthesize shouldSendAKClientInfoHeaders=_shouldSendAKClientInfoHeaders - In the implementation block
@property (assign) BOOL shouldSendDSIDHeader;                                                      //@synthesize shouldSendDSIDHeader=_shouldSendDSIDHeader - In the implementation block
@property (assign) BOOL shouldSendXTokenHeader; 
@property (assign) BOOL useUserSpecificURLBag;                                                     //@synthesize useUserSpecificURLBag=_useUserSpecificURLBag - In the implementation block
@property (assign) BOOL urlKnownToBeTrusted;                                                       //@synthesize urlKnownToBeTrusted=_urlKnownToBeTrusted - In the implementation block
@property (nonatomic,retain) SSBag * bag;                                                          //@synthesize bag=_bag - In the implementation block
@property (readonly) SSURLBagContext * URLBagContext; 
@property (assign,getter=isURLBagRequest,nonatomic) BOOL URLBagRequest;                            //@synthesize isURLBagRequest=_isURLBagRequest - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)_addiTunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 accountIdentifier:(id)arg3 appendAuthKitHeaders:(BOOL)arg4 appendStorefrontToURL:(BOOL)arg5 clientBundleIdentifier:(id)arg6 ;
+(void)_handleResponseHeaders:(id)arg1 response:(id)arg2 request:(id)arg3 account:(id)arg4 performsMachineDataActions:(BOOL)arg5 shouldRetry:(BOOL*)arg6 ;
+(void)_addiTunesStoreHeadersToRequest:(id)arg1 withSSBag:(id)arg2 account:(id)arg3 appendAuthKitHeaders:(BOOL)arg4 appendStorefrontToURL:(BOOL)arg5 clientBundleIdentifier:(id)arg6 ;
+(void)_addiTunesStoreHeadersToRequest:(id)arg1 withSSBag:(id)arg2 accountIdentifier:(id)arg3 appendAuthKitHeaders:(BOOL)arg4 appendStorefrontToURL:(BOOL)arg5 clientBundleIdentifier:(id)arg6 ;
+(void)_addiTunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 account:(id)arg3 appendAuthKitHeaders:(BOOL)arg4 appendStorefrontToURL:(BOOL)arg5 clientBundleIdentifier:(id)arg6 ;
+(id)_ssBag_copyHeaderPatternsFromBag:(id)arg1 ;
+(id)_ssBag_copyExtraHeadersForURL:(id)arg1 bag:(id)arg2 ;
+(void)_addiTunesStoreHeadersToRequest:(id)arg1 withAccount:(id)arg2 appendAuthKitHeaders:(BOOL)arg3 appendStorefrontToURL:(BOOL)arg4 clientBundleIdentifier:(id)arg5 extraHeaders:(id)arg6 storefrontSuffix:(id)arg7 ;
+(void)_addAccountDSID:(id)arg1 toRequest:(id)arg2 ;
+(void)_addPrimaryiCloudDSIDToRequest:(id)arg1 ;
+(id)_storeFrontIdentifierForAccount:(id)arg1 ;
+(void)_appendStorefront:(id)arg1 toRequestURL:(id)arg2 ;
+(id)_restrictionsHeaderValue;
+(id)_authKitSession;
+(BOOL)_operationWaitsForPurchases:(id)arg1 ;
+(void)_performMachineDataRequest:(id)arg1 requestProperties:(id)arg2 completion:(/*^block*/id)arg3 ;
+(id)propertyListOperationWithURLBagKey:(id)arg1 ;
+(id)pingOperationWithUrl:(id)arg1 ;
+(void)addITunesStoreHeadersToRequest:(id)arg1 withAccountIdentifier:(id)arg2 ;
+(void)handleITunesStoreResponseHeaders:(id)arg1 request:(id)arg2 withAccountIdentifier:(id)arg3 shouldRetry:(BOOL*)arg4 ;
+(id)itemPingOperationWithIdentifier:(unsigned long long)arg1 urlBagKey:(id)arg2 ;
-(BOOL)shouldSuppressUserInfo;
-(long long)machineDataStyle;
-(BOOL)isURLBagRequest;
-(SSVFairPlaySAPSession *)SAPSession;
-(id)_account;
-(id)_copyAuthenticationContext;
-(BOOL)_processResponseData:(id)arg1 error:(id*)arg2 ;
-(BOOL)handleRedirectFromDataProvider:(id)arg1 error:(id*)arg2 ;
-(void)_willSendRequest:(id)arg1 ;
-(BOOL)shouldFollowRedirectWithRequest:(id)arg1 returningError:(id*)arg2 ;
-(void)setBiometricAuthenticationContext:(SSBiometricAuthenticationContext *)arg1 ;
-(id<ISBiometricSessionDelegate>)biometricSessionDelegate;
-(void)setBiometricSessionDelegate:(id<ISBiometricSessionDelegate>)arg1 ;
-(void)setShouldAppendAuthKitHeaders:(BOOL)arg1 ;
-(void)setURLBagRequest:(BOOL)arg1 ;
-(BOOL)useUserSpecificURLBag;
-(BOOL)_canSendTokenToURL:(id)arg1 ;
-(id)_urlBagForContext:(id)arg1 ;
-(BOOL)canSendGUIDParameter;
-(BOOL)_ssBag_shouldSendGUIDForURL:(id)arg1 withBag:(id)arg2 ;
-(BOOL)shouldAppendAuthKitHeaders;
-(BOOL)shouldAppendStorefrontToURL;
-(BOOL)shouldSendXTokenHeader;
-(id)_loadURLBagInterpreterWithRequest:(id)arg1 requestProperties:(id)arg2 ;
-(BOOL)ignorePreexistingSecureToken;
-(id)_copyAuthenticationContextForAttemptNumber:(long long)arg1 ;
-(BOOL)_authenticateWithContext:(id)arg1 error:(id*)arg2 ;
-(BOOL)needsTermsAndConditionsAcceptance;
-(void)_runURLOperation;
-(BOOL)_performMachineDataRequest:(id)arg1 ;
-(BOOL)_shouldRetryForTouchIDChallengeWithError:(id)arg1 ;
-(void)_continueTouchIDSession;
-(void)sender:(id)arg1 didFallbackToPassword:(BOOL)arg2 ;
-(BOOL)_isErrorTokenError:(id)arg1 ;
-(void)setIgnorePreexistingSecureToken:(BOOL)arg1 ;
-(BOOL)shouldSendAKClientInfoHeaders;
-(id)_ssBag_copyGUIDPatternsFromBag:(id)arg1 ;
-(id)_ssBag_copyGUIDSchemesFromBag:(id)arg1 ;
-(BOOL)needsURLBag;
-(id)_resolvedURLInBagContext:(id)arg1 bagTrusted:(BOOL*)arg2 ;
-(void)_addStandardQueryParametersForURL:(id)arg1 ;
-(BOOL)shouldCancelBiometricTokenUpdate;
-(BOOL)performsMachineDataActions;
-(void)setCanSendGUIDParameter:(BOOL)arg1 ;
-(void)setPerformsMachineDataActions:(BOOL)arg1 ;
-(void)setShouldSendXTokenHeader:(BOOL)arg1 ;
-(void)_setStoreFrontIdentifier:(id)arg1 isTransient:(BOOL)arg2 ;
-(void)setNeedsTermsAndConditionsAcceptance:(BOOL)arg1 ;
-(void)setShouldAppendStorefrontToURL:(BOOL)arg1 ;
-(void)setShouldCancelBiometricTokenUpdate:(BOOL)arg1 ;
-(void)setUseUserSpecificURLBag:(BOOL)arg1 ;
-(void)setShouldSendAKClientInfoHeaders:(BOOL)arg1 ;
-(BOOL)shouldSendDSIDHeader;
-(void)setShouldSendDSIDHeader:(BOOL)arg1 ;
-(void)setNeedsURLBag:(BOOL)arg1 ;
-(BOOL)needsAuthentication;
-(SSBiometricAuthenticationContext *)biometricAuthenticationContext;
-(id)authenticatedAccountDSID;
-(void)setNeedsAuthentication:(BOOL)arg1 ;
-(void)setUrlKnownToBeTrusted:(BOOL)arg1 ;
-(id)newRequestWithURL:(id)arg1 ;
-(NSNumber *)authenticatedDSID;
-(void)setAuthenticatedDSID:(NSNumber *)arg1 ;
-(void)handleResponse:(id)arg1 ;
-(void)setShouldSuppressUserInfo:(BOOL)arg1 ;
-(SSURLBagContext *)URLBagContext;
-(void)setMachineDataStyle:(long long)arg1 ;
-(void)setSAPSession:(SSVFairPlaySAPSession *)arg1 ;
-(SSBag *)bag;
-(void)setBag:(SSBag *)arg1 ;
-(BOOL)urlKnownToBeTrusted;
-(id)init;
-(void)run;
@end

