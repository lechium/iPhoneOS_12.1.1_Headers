/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:30 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/BookDataStore.framework/BookDataStore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/BCCloudDataPrivacyDelegate.h>

@protocol OS_dispatch_queue;
@class CKDatabase, CKContainer, NSString, NSURL, NSArray, NSMutableSet, NSObject, BDSCoalescingCallBlock, CKRecordID, CKServerChangeToken, NSData, NSMutableDictionary;

@interface BCCloudKitDatabaseController : NSObject <BCCloudDataPrivacyDelegate> {

	BOOL _hasSubscription;
	BOOL _attachedToContainer;
	BOOL _serverFetchPostponed;
	BOOL _fetchRecordZoneChangesSuccess;
	CKDatabase* _database;
	CKContainer* _container;
	NSString* _subscriptionID;
	NSURL* _archiveURL;
	NSArray* _desiredRecordZoneIDs;
	NSMutableSet* _changedRecordZoneIDs;
	NSObject*<OS_dispatch_queue> _accessQueue;
	BDSCoalescingCallBlock* _coalescedArchive;
	NSString* _containerIdentifier;
	CKRecordID* _userRecordID;
	CKServerChangeToken* _serverChangeToken;
	NSData* _recordIDSalt;
	NSMutableDictionary* _recordZones;
	NSMutableDictionary* _observers;
	NSMutableDictionary* _tokenStores;
	BDSCoalescingCallBlock* _coalescedZoneFetch;
	double _backOffInterval;

}

@property (nonatomic,retain) CKDatabase * database;                                    //@synthesize database=_database - In the implementation block
@property (nonatomic,retain) CKContainer * container;                                  //@synthesize container=_container - In the implementation block
@property (nonatomic,copy) NSURL * archiveURL;                                         //@synthesize archiveURL=_archiveURL - In the implementation block
@property (nonatomic,copy) NSArray * desiredRecordZoneIDs;                             //@synthesize desiredRecordZoneIDs=_desiredRecordZoneIDs - In the implementation block
@property (nonatomic,retain) NSMutableSet * changedRecordZoneIDs;                      //@synthesize changedRecordZoneIDs=_changedRecordZoneIDs - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> accessQueue;                 //@synthesize accessQueue=_accessQueue - In the implementation block
@property (nonatomic,retain) BDSCoalescingCallBlock * coalescedArchive;                //@synthesize coalescedArchive=_coalescedArchive - In the implementation block
@property (nonatomic,copy) NSString * subscriptionID;                                  //@synthesize subscriptionID=_subscriptionID - In the implementation block
@property (nonatomic,copy) NSString * containerIdentifier;                             //@synthesize containerIdentifier=_containerIdentifier - In the implementation block
@property (nonatomic,retain) CKRecordID * userRecordID;                                //@synthesize userRecordID=_userRecordID - In the implementation block
@property (nonatomic,retain) CKServerChangeToken * serverChangeToken;                  //@synthesize serverChangeToken=_serverChangeToken - In the implementation block
@property (nonatomic,retain) NSData * recordIDSalt;                                    //@synthesize recordIDSalt=_recordIDSalt - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * recordZones;                        //@synthesize recordZones=_recordZones - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * observers;                          //@synthesize observers=_observers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tokenStores;                        //@synthesize tokenStores=_tokenStores - In the implementation block
@property (nonatomic,retain) BDSCoalescingCallBlock * coalescedZoneFetch;              //@synthesize coalescedZoneFetch=_coalescedZoneFetch - In the implementation block
@property (assign,nonatomic) BOOL attachedToContainer;                                 //@synthesize attachedToContainer=_attachedToContainer - In the implementation block
@property (assign,nonatomic) double backOffInterval;                                   //@synthesize backOffInterval=_backOffInterval - In the implementation block
@property (assign,nonatomic) BOOL serverFetchPostponed;                                //@synthesize serverFetchPostponed=_serverFetchPostponed - In the implementation block
@property (assign,nonatomic) BOOL fetchRecordZoneChangesSuccess;                       //@synthesize fetchRecordZoneChangesSuccess=_fetchRecordZoneChangesSuccess - In the implementation block
@property (assign,nonatomic) BOOL hasSubscription;                                     //@synthesize hasSubscription=_hasSubscription - In the implementation block
+(id)decodeRecordFromSystemFields:(id)arg1 ;
+(id)encodeRecordSystemFields:(id)arg1 ;
-(NSMutableSet *)changedRecordZoneIDs;
-(void)setRecordZones:(NSMutableDictionary *)arg1 ;
-(void)setContainerIdentifier:(NSString *)arg1 ;
-(void)setAccessQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)accessQueue;
-(void)setArchiveURL:(NSURL *)arg1 ;
-(void)setSubscriptionID:(NSString *)arg1 ;
-(void)fetchChangesWithCompletion:(/*^block*/id)arg1 ;
-(CKDatabase *)database;
-(NSString *)containerIdentifier;
-(NSURL *)archiveURL;
-(void)setDatabase:(CKDatabase *)arg1 ;
-(CKServerChangeToken *)serverChangeToken;
-(CKRecordID *)userRecordID;
-(BOOL)hasSubscription;
-(void)setUserRecordID:(CKRecordID *)arg1 ;
-(NSMutableDictionary *)recordZones;
-(void)setHasSubscription:(BOOL)arg1 ;
-(void)setServerChangeToken:(CKServerChangeToken *)arg1 ;
-(NSString *)subscriptionID;
-(BOOL)establishedSalt;
-(void)addObserver:(id)arg1 recordType:(id)arg2 ;
-(void)removeObserver:(id)arg1 recordType:(id)arg2 ;
-(id)recordNameFromRecordType:(id)arg1 identifier:(id)arg2 ;
-(void)p_unarchive;
-(id)p_archiveToData;
-(BOOL)attachedToContainer;
-(BOOL)fetchRecordZoneChangesSuccess;
-(void)setAttachedToContainer:(BOOL)arg1 ;
-(void)p_informObserversOfAttachmentChange;
-(void)p_fetchZoneChanges:(/*^block*/id)arg1 ;
-(BDSCoalescingCallBlock *)coalescedZoneFetch;
-(void)p_fetchDatabaseChanges:(/*^block*/id)arg1 ;
-(void)p_unsubscribeToContainer:(id)arg1 ;
-(void)p_scheduleArchiveWithCompletion:(/*^block*/id)arg1 ;
-(void)p_subscribeWithCompletion:(/*^block*/id)arg1 ;
-(NSArray *)desiredRecordZoneIDs;
-(void)p_createRecordIDSaltWithCompletion:(/*^block*/id)arg1 ;
-(void)zonesUnreadableDueToMissingD2DEncryptionIdentity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)zonesTemporarilyUnreadableDueToMissingD2DEncryptionIdentity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)p_createRecordZones:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)detachWithCompletion:(/*^block*/id)arg1 ;
-(NSData *)recordIDSalt;
-(id)saltedAndHashedIDFromLocalID:(id)arg1 ;
-(void)setRecordIDSalt:(NSData *)arg1 ;
-(BOOL)serverFetchPostponed;
-(NSMutableDictionary *)tokenStores;
-(void)p_fetchRecordZoneChangesForRecordZoneIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)p_fetchRecordZoneChanges:(id)arg1 optionsByRecordZoneID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setBackOffInterval:(double)arg1 ;
-(double)backOffInterval;
-(void)p_informObserversOfRecordsChanged:(id)arg1 forRecordType:(id)arg2 ;
-(void)p_informObserversOfRecordsChanged:(id)arg1 ;
-(void)p_informObserversOfCompletedFetchOfZone:(id)arg1 ;
-(void)setServerFetchPostponed:(BOOL)arg1 ;
-(void)p_updateRetryParametersFromFetchZoneChangesOperationError:(id)arg1 ;
-(void)setFetchRecordZoneChangesSuccess:(BOOL)arg1 ;
-(BDSCoalescingCallBlock *)coalescedArchive;
-(id)p_unarchiveFromData:(id)arg1 ;
-(void)attachToZones:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_deleteRecordZonesWithIDs:(id)arg1 qualityOfService:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithSubscriptionID:(id)arg1 archiveURL:(id)arg2 ;
-(void)fetchRecordForRecordID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)willAttachToContainer:(id)arg1 serviceMode:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)connectUserTo:(id)arg1 container:(id)arg2 updateSubscription:(BOOL)arg3 completion:(/*^block*/id)arg4 subscriptionCompletion:(/*^block*/id)arg5 ;
-(void)getAttached:(/*^block*/id)arg1 ;
-(void)recordZoneWithName:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)registerServerChangeTokenStore:(id)arg1 forZoneID:(id)arg2 ;
-(void)unregisterServerChangeTokenStore:(id)arg1 ;
-(void)setDesiredRecordZoneIDs:(NSArray *)arg1 ;
-(void)setChangedRecordZoneIDs:(NSMutableSet *)arg1 ;
-(void)setCoalescedArchive:(BDSCoalescingCallBlock *)arg1 ;
-(void)setTokenStores:(NSMutableDictionary *)arg1 ;
-(void)setCoalescedZoneFetch:(BDSCoalescingCallBlock *)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(CKContainer *)container;
-(void)setContainer:(CKContainer *)arg1 ;
-(void)setObservers:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)observers;
-(void)detach;
@end

