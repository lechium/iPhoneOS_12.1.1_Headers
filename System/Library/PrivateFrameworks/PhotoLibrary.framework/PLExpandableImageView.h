/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:22 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PhotoLibrary/PLExpandableView.h>

@class PLImageView, PLManagedAsset, NSString, PLVideoView;

@interface PLExpandableImageView : PLExpandableView {

	PLImageView* _imageView;
	int _imageID;
	CGSize _originalSize;
	double _originalWidth;
	double _originalAngle;
	CGPoint _anchorPoint;
	double _imageRotationAngle;
	double _pinchWidth;
	double _pinchAngle;
	double _pinchScale;
	CGRect _initialExpandingFrame;
	CGRect _originalBounds;
	float _currentAngle;
	CGSize _centerOffset;
	PLManagedAsset* _photo;
	struct {
		unsigned isRotating : 1;
		unsigned didTrack : 1;
		unsigned updateFrame : 1;
		unsigned didLayout : 1;
		unsigned alwaysDoLayout : 1;
		unsigned didComputeCenterOffset : 1;
		unsigned imageIsFullScreen : 1;
	}  _exImageFlags;

}

@property (nonatomic,copy) NSString * name; 
@property (nonatomic,readonly) CGSize imageSize; 
@property (nonatomic,retain) PLVideoView * videoView; 
@property (nonatomic,readonly) BOOL showsPlaceholder; 
@property (assign,getter=isBorderAndAccessoriesVisible,nonatomic) BOOL borderAndAccessoriesVisible; 
@property (nonatomic,retain) PLManagedAsset * photo;                                                             //@synthesize photo=_photo - In the implementation block
+(double)imageBorderWidth;
-(PLManagedAsset *)photo;
-(void)setPhoto:(PLManagedAsset *)arg1 ;
-(PLVideoView *)videoView;
-(void)setVideoView:(PLVideoView *)arg1 ;
-(void)stateDidChangeFrom:(int)arg1 ;
-(void)beginTrackingPinch:(id)arg1 ;
-(float)continueTrackingPinch:(id)arg1 ;
-(float)completeTrackingPinch:(id)arg1 toState:(int)arg2 duration:(double)arg3 ;
-(float)_expansionFraction;
-(void)setBorderAndAccessoriesVisible:(BOOL)arg1 ;
-(id)initWithFrame:(CGRect)arg1 frameStyle:(int)arg2 withBorder:(BOOL)arg3 ;
-(id)initWithFrame:(CGRect)arg1 frameStyle:(int)arg2 ;
-(void)_setOriginalSize:(CGSize)arg1 ;
-(float)_borderAlphaForExpansionFraction:(float)arg1 ;
-(void)_updatePinchWidthAndScaleWithLeftPoint:(CGPoint)arg1 rightPoint:(CGPoint)arg2 ;
-(void)_updateBorderAndAccessoriesAlpha;
-(void)setSize:(CGSize)arg1 angle:(float)arg2 ;
-(CGSize)_newSizeFromSize:(CGSize)arg1 ;
-(float)_expandedScale;
-(CGRect)_snappedExpandedFrame;
-(void)_bounceToPlace:(id)arg1 finished:(id)arg2 context:(void*)arg3 ;
-(void)_bounceBack:(id)arg1 finished:(id)arg2 context:(void*)arg3 ;
-(void)setTransformAndCenterForFrame:(CGRect)arg1 ;
-(BOOL)isBorderAndAccessoriesVisible;
-(void)setImage:(id)arg1 isFullscreen:(BOOL)arg2 ;
-(void)setFullSizeImageJPEGData:(id)arg1 size:(CGSize)arg2 orientation:(long long)arg3 ;
-(BOOL)showsPlaceholder;
-(void)setShowsPlaceholder:(BOOL)arg1 ;
-(void)setTextBadgeString:(id)arg1 ;
-(void)renderSnapshotInContext:(CGContextRef)arg1 ;
-(CGRect)frameOfImage;
-(double)imageRotationAngle;
-(float)_currentScale;
-(BOOL)isBeingManipulated;
-(void)setFrame:(CGRect)arg1 ;
-(void)dealloc;
-(NSString *)name;
-(void)setName:(NSString *)arg1 ;
-(void)setImage:(id)arg1 ;
-(id)image;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setCenter:(CGPoint)arg1 ;
-(id)imageView;
-(id)_contentView;
-(BOOL)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setShadowEnabled:(BOOL)arg1 ;
-(BOOL)isShadowEnabled;
-(CGSize)imageSize;
-(void)setTransitionProgress:(double)arg1 ;
-(double)transitionProgress;
-(void)finishTransition;
@end

