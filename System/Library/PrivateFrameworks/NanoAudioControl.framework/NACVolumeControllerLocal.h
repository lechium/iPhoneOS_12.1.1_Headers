/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:21 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/NanoAudioControl.framework/NanoAudioControl
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/MPVolumeControllerDelegate.h>
#import <libobjc.A.dylib/MPAVRoutingControllerDelegate.h>
#import <libobjc.A.dylib/NACVolumeController.h>

@protocol OS_dispatch_queue, NACVolumeControllerDelegate;
@class MPVolumeController, MPAVRoutingController, NSString, NSCountedSet, NACEventThrottler, NSObject;

@interface NACVolumeControllerLocal : NSObject <MPVolumeControllerDelegate, MPAVRoutingControllerDelegate, NACVolumeController> {

	MPVolumeController* _volumeController;
	MPAVRoutingController* _routingController;
	NSString* _audioCategory;
	NSCountedSet* _volumeSetHistory;
	NACEventThrottler* _volumeThrottler;
	NACEventThrottler* _hapticThrottler;
	BOOL _validCachedMutedValue;
	BOOL _muted;
	BOOL _shouldIgnoreHaptics;
	BOOL _monitoringHaptics;
	long long _cachedHapticState;
	NSObject*<OS_dispatch_queue> _serialQueue;
	BOOL _systemMuted;
	id<NACVolumeControllerDelegate> _delegate;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<NACVolumeControllerDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (getter=isVolumeControlAvailable,nonatomic,readonly) BOOL volumeControlAvailable; 
@property (getter=isVolumeWarningEnabled,nonatomic,readonly) BOOL volumeWarningEnabled; 
@property (getter=isMuted,nonatomic,readonly) BOOL muted; 
@property (nonatomic,readonly) float volumeValue; 
@property (nonatomic,readonly) float EUVolumeLimit; 
@property (assign,getter=isSystemMuted,nonatomic) BOOL systemMuted;                                      //@synthesize systemMuted=_systemMuted - In the implementation block
@property (assign,nonatomic) long long hapticState; 
@property (assign,nonatomic) float hapticIntensity; 
@property (assign,getter=isProminentHapticEnabled,nonatomic) BOOL prominentHapticEnabled; 
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(float)volumeValue;
-(void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2 ;
-(void)volumeController:(id)arg1 mutedStateDidChange:(BOOL)arg2 ;
-(void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2 ;
-(BOOL)isVolumeControlAvailable;
-(float)EUVolumeLimit;
-(void)setVolumeValue:(float)arg1 ;
-(id)initWithAudioCategory:(id)arg1 ;
-(BOOL)isMuted;
-(void)setMuted:(BOOL)arg1 ;
-(void)setHapticIntensity:(float)arg1 ;
-(void)setProminentHapticEnabled:(BOOL)arg1 ;
-(void)setHapticState:(long long)arg1 ;
-(void)setSystemMuted:(BOOL)arg1 ;
-(void)playProminentHapticPreview;
-(void)beginObservingHapticState;
-(BOOL)isVolumeWarningEnabled;
-(id)_volumeController;
-(void)_setVolumeValue:(id)arg1 ;
-(void)_setHapticIntensity:(id)arg1 ;
-(void)endObservingVolume;
-(void)beginObservingVolume;
-(void)beginObservingHaptics;
-(void)endObservingHaptics;
-(BOOL)isSystemMuted;
-(long long)hapticState;
-(float)hapticIntensity;
-(BOOL)isProminentHapticEnabled;
-(void)_ignoreHapticObservation;
-(void)setVolumeValue:(float)arg1 muted:(BOOL)arg2 overrideEULimit:(BOOL)arg3 ;
-(void)_updateMutedStateFromVolumeController:(id)arg1 ;
-(void)_updateVolumeState;
-(void)updateCachedHapticState;
-(void)endObservingHapticState;
-(void)playPreview;
-(id)init;
-(void)setDelegate:(id<NACVolumeControllerDelegate>)arg1 ;
-(id<NACVolumeControllerDelegate>)delegate;
@end

