/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:14 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/MapsSupport.framework/MapsSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/NSOperation.h>
#import <libobjc.A.dylib/MSPCloudRepeatableTaskToken.h>

@protocol MSPCloudAccess;
@class MSPCloudRepeatableTask, NSDate, NSOperationQueue;

@interface _MSPCloudAttemptTaskOperation : NSOperation <MSPCloudRepeatableTaskToken> {

	id<MSPCloudAccess> _access;
	MSPCloudRepeatableTask* _task;
	NSDate* _minimumAttemptDate;
	/*^block*/id _completion;
	NSOperationQueue* _cloudOperationsQueue;
	BOOL _attempting;
	BOOL _executing;
	BOOL _finished;
	BOOL _success;
	NSDate* _startedAt;
	NSDate* _finishedAt;
	BOOL _didFetchNewData;
	unsigned long long _attemptCount;

}

@property (nonatomic,readonly) id<MSPCloudAccess> access;                    //@synthesize access=_access - In the implementation block
@property (nonatomic,readonly) MSPCloudRepeatableTask * task;                //@synthesize task=_task - In the implementation block
@property (nonatomic,readonly) unsigned long long attemptCount;              //@synthesize attemptCount=_attemptCount - In the implementation block
@property (nonatomic,readonly) BOOL didFetchNewData;                         //@synthesize didFetchNewData=_didFetchNewData - In the implementation block
-(BOOL)isAsynchronous;
-(unsigned long long)attemptCount;
-(id<MSPCloudAccess>)access;
-(void)_setExecuting:(BOOL)arg1 finished:(BOOL)arg2 ;
-(id)initWithTask:(id)arg1 access:(id)arg2 attemptCount:(unsigned long long)arg3 minimumAttemptDate:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_beginAttempting;
-(void)_endWithError:(id)arg1 canReattempt:(BOOL)arg2 maxAttempts:(unsigned long long)arg3 minimumReattemptDate:(id)arg4 ;
-(void)_noteDidFetchNewData;
-(BOOL)didFetchNewData;
-(id)description;
-(void)cancel;
-(void)start;
-(BOOL)isFinished;
-(MSPCloudRepeatableTask *)task;
-(BOOL)isExecuting;
@end

