/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:44:43 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CameraKit/CameraKit-Structs.h>
#import <libobjc.A.dylib/CMKNebulaDaemonTimelapseProtocol.h>

@protocol OS_dispatch_queue, CMKTimelapseMovieWriterProtocol;
@class NSMutableArray, NSObject, CMKTimelapseState, NSString;

@interface CMKTimelapseBackendController : NSObject <CMKNebulaDaemonTimelapseProtocol> {

	BOOL __writingMovie;
	BOOL __capturing;
	NSMutableArray* __sessionContexts;
	NSObject*<OS_dispatch_queue> __workQueue;
	id<CMKTimelapseMovieWriterProtocol> __movieWriter;
	CMKTimelapseState* __currentState;

}

@property (nonatomic,readonly) NSMutableArray * _sessionContexts;                                     //@synthesize _sessionContexts=__sessionContexts - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> _workQueue;                               //@synthesize _workQueue=__workQueue - In the implementation block
@property (nonatomic,readonly) BOOL _writingMovie;                                                    //@synthesize _writingMovie=__writingMovie - In the implementation block
@property (nonatomic,readonly) id<CMKTimelapseMovieWriterProtocol> _movieWriter;                      //@synthesize _movieWriter=__movieWriter - In the implementation block
@property (setter=_setCurrentState:,nonatomic,retain) CMKTimelapseState * _currentState;              //@synthesize _currentState=__currentState - In the implementation block
@property (assign,setter=_setCapturing:,getter=_isCapturing,nonatomic) BOOL _capturing;               //@synthesize _capturing=__capturing - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)_permanentlyFailTimelapseUUID:(id)arg1 ;
-(void)_movieWrittenToFilePath:(id)arg1 duration:(double)arg2 state:(id)arg3 ;
-(void)_reserveDummyFileForTimelapseUUID:(id)arg1 firstImageFilePath:(id)arg2 ;
-(void)_notifyAssetsdOfIncomingMovieAtPath:(id)arg1 duration:(double)arg2 state:(id)arg3 ;
-(CMKTimelapseState *)_currentState;
-(void)_setCurrentState:(id)arg1 ;
-(void)updatePendingWorkFromDiskForceEndLastSession:(BOOL)arg1 ;
-(void)startTimelapseWithUUID:(id)arg1 ;
-(void)resumeTimelapseWithUUID:(id)arg1 ;
-(void)updateTimelapseWithUUID:(id)arg1 ;
-(void)finishCaptureForTimelapseWithUUID:(id)arg1 ;
-(void)stopTimelapseWithUUID:(id)arg1 ;
-(void)_dispatchToMainQueueWithBlock:(/*^block*/id)arg1 ;
-(void)handleClientConnection:(id)arg1 ;
-(void)handleClientDisconnection;
-(NSObject*<OS_dispatch_queue>)_workQueue;
-(id<CMKTimelapseMovieWriterProtocol>)_movieWriter;
-(void)_setCapturing:(BOOL)arg1 ;
-(id)_getOrCreateSessionContextForTimelapseUUID:(id)arg1 ;
-(void)_updateSessionContext:(id)arg1 withState:(id)arg2 ;
-(void)_performPendingWork;
-(void)_dispatchToWorkQueueWithBlock:(/*^block*/id)arg1 ;
-(void)_updatePendingWorkFromDiskForceEndLastSession:(BOOL)arg1 ;
-(void)_dispatchToWorkQueueAfterDelay:(double)arg1 withBlock:(/*^block*/id)arg2 ;
-(BOOL)_isCameraRunning;
-(BOOL)_deleteItemAtPath:(id)arg1 ;
-(BOOL)_scheduleDelayedMovieWriteIfNeededForTimelapseUUID:(id)arg1 ;
-(void)_writeMovieForSessionContext:(id)arg1 ;
-(void)_createPlaceholderAssetForState:(id)arg1 ;
-(CGAffineTransform)_frameTransformForState:(id)arg1 ;
-(NSMutableArray *)_sessionContexts;
-(BOOL)_writingMovie;
-(BOOL)_isCapturing;
-(id)init;
@end

