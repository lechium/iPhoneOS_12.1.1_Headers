/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:44 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NewsCore/FCOperation.h>

@protocol FCContentContext;
@class NSArray, NSDictionary, FCEdgeCacheHint, FCHeldRecords, NSMutableSet, NSMutableArray;

@interface FCRecordChainFetchOperation : FCOperation {

	BOOL _shouldReturnErrorWhenSomeRecordsMissing;
	BOOL _shouldBypassRecordSourcePersistence;
	id<FCContentContext> _context;
	NSArray* _topLevelRecordIDs;
	NSDictionary* _linkKeysByRecordType;
	NSDictionary* _cachePoliciesByRecordType;
	/*^block*/id _dynamicCachePolicyBlock;
	FCEdgeCacheHint* _edgeCacheHint;
	NSArray* _additionalRecordSources;
	/*^block*/id _cachedRecordsLookupBlock;
	/*^block*/id _recordChainCompletionHandler;
	NSArray* _recordSources;
	NSDictionary* _recordSourcesByRecordType;
	NSDictionary* _pbRecordTypesByRecordType;
	FCHeldRecords* _cachedRecords;
	NSMutableSet* _actualTopLevelRecordIDs;
	NSMutableSet* _skippedTopLevelRecordIDs;
	NSDictionary* _resultHeldRecordsByType;
	NSMutableArray* _mutableNetworkEvents;

}

@property (nonatomic,retain) NSArray * recordSources;                                   //@synthesize recordSources=_recordSources - In the implementation block
@property (nonatomic,retain) NSDictionary * recordSourcesByRecordType;                  //@synthesize recordSourcesByRecordType=_recordSourcesByRecordType - In the implementation block
@property (nonatomic,retain) NSDictionary * pbRecordTypesByRecordType;                  //@synthesize pbRecordTypesByRecordType=_pbRecordTypesByRecordType - In the implementation block
@property (nonatomic,retain) FCHeldRecords * cachedRecords;                             //@synthesize cachedRecords=_cachedRecords - In the implementation block
@property (nonatomic,retain) NSMutableSet * actualTopLevelRecordIDs;                    //@synthesize actualTopLevelRecordIDs=_actualTopLevelRecordIDs - In the implementation block
@property (nonatomic,retain) NSMutableSet * skippedTopLevelRecordIDs;                   //@synthesize skippedTopLevelRecordIDs=_skippedTopLevelRecordIDs - In the implementation block
@property (nonatomic,retain) NSDictionary * resultHeldRecordsByType;                    //@synthesize resultHeldRecordsByType=_resultHeldRecordsByType - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableNetworkEvents;                     //@synthesize mutableNetworkEvents=_mutableNetworkEvents - In the implementation block
@property (nonatomic,retain) id<FCContentContext> context;                              //@synthesize context=_context - In the implementation block
@property (nonatomic,copy) NSArray * topLevelRecordIDs;                                 //@synthesize topLevelRecordIDs=_topLevelRecordIDs - In the implementation block
@property (nonatomic,copy) NSDictionary * linkKeysByRecordType;                         //@synthesize linkKeysByRecordType=_linkKeysByRecordType - In the implementation block
@property (nonatomic,copy) NSDictionary * cachePoliciesByRecordType;                    //@synthesize cachePoliciesByRecordType=_cachePoliciesByRecordType - In the implementation block
@property (nonatomic,copy) id dynamicCachePolicyBlock;                                  //@synthesize dynamicCachePolicyBlock=_dynamicCachePolicyBlock - In the implementation block
@property (assign,nonatomic) BOOL shouldReturnErrorWhenSomeRecordsMissing;              //@synthesize shouldReturnErrorWhenSomeRecordsMissing=_shouldReturnErrorWhenSomeRecordsMissing - In the implementation block
@property (nonatomic,copy) FCEdgeCacheHint * edgeCacheHint;                             //@synthesize edgeCacheHint=_edgeCacheHint - In the implementation block
@property (nonatomic,retain) NSArray * additionalRecordSources;                         //@synthesize additionalRecordSources=_additionalRecordSources - In the implementation block
@property (nonatomic,copy,readonly) NSArray * networkEvents; 
@property (assign,nonatomic) BOOL shouldBypassRecordSourcePersistence;                  //@synthesize shouldBypassRecordSourcePersistence=_shouldBypassRecordSourcePersistence - In the implementation block
@property (nonatomic,copy) id cachedRecordsLookupBlock;                                 //@synthesize cachedRecordsLookupBlock=_cachedRecordsLookupBlock - In the implementation block
@property (nonatomic,copy) id recordChainCompletionHandler;                             //@synthesize recordChainCompletionHandler=_recordChainCompletionHandler - In the implementation block
-(BOOL)validateOperation;
-(void)performOperation;
-(void)operationWillFinishWithError:(id)arg1 ;
-(void)setAdditionalRecordSources:(NSArray *)arg1 ;
-(void)setTopLevelRecordIDs:(NSArray *)arg1 ;
-(void)setLinkKeysByRecordType:(NSDictionary *)arg1 ;
-(void)setEdgeCacheHint:(FCEdgeCacheHint *)arg1 ;
-(void)setDynamicCachePolicyBlock:(id)arg1 ;
-(void)setShouldReturnErrorWhenSomeRecordsMissing:(BOOL)arg1 ;
-(void)setRecordChainCompletionHandler:(id)arg1 ;
-(NSArray *)networkEvents;
-(void)prepareOperation;
-(NSDictionary *)linkKeysByRecordType;
-(NSArray *)recordSources;
-(NSArray *)additionalRecordSources;
-(void)setRecordSources:(NSArray *)arg1 ;
-(void)setRecordSourcesByRecordType:(NSDictionary *)arg1 ;
-(void)setPbRecordTypesByRecordType:(NSDictionary *)arg1 ;
-(NSArray *)topLevelRecordIDs;
-(void)_collectCachedRecordsFromRecordIDs:(id)arg1 ;
-(void)_collectActualTopLevelRecordIDsFromRecordIDs:(id)arg1 ;
-(void)_issueCloudRequestIfNeeded;
-(NSMutableArray *)mutableNetworkEvents;
-(id)recordChainCompletionHandler;
-(NSDictionary *)resultHeldRecordsByType;
-(FCHeldRecords *)cachedRecords;
-(void)setCachedRecords:(FCHeldRecords *)arg1 ;
-(BOOL)shouldBypassRecordSourcePersistence;
-(id)cachedRecordsLookupBlock;
-(int)_pbRecordTypeForRecordType:(id)arg1 ;
-(id)_recordSourceForRecordType:(id)arg1 ;
-(void)_walkRecordChainStartingWithRecordIDs:(id)arg1 recordsLookupBlock:(/*^block*/id)arg2 visitorBlock:(/*^block*/id)arg3 ;
-(id)_recordTypeForRecordID:(id)arg1 ;
-(id)dynamicCachePolicyBlock;
-(NSDictionary *)cachePoliciesByRecordType;
-(NSMutableSet *)actualTopLevelRecordIDs;
-(NSMutableSet *)skippedTopLevelRecordIDs;
-(void)_finalizeResultFromCachedRecords;
-(BOOL)shouldReturnErrorWhenSomeRecordsMissing;
-(id)_errorForMissingRecordNames:(id)arg1 ;
-(FCEdgeCacheHint *)edgeCacheHint;
-(void)_filterOrphansFromCachedRecords;
-(id)_recordIDsMissingFromCachedRecords;
-(id)_partialErrorForMissingRecordName:(id)arg1 ;
-(void)setResultHeldRecordsByType:(NSDictionary *)arg1 ;
-(NSDictionary *)pbRecordTypesByRecordType;
-(NSDictionary *)recordSourcesByRecordType;
-(int)_pbRecordTypeForRecordID:(id)arg1 ;
-(void)setCachePoliciesByRecordType:(NSDictionary *)arg1 ;
-(void)setShouldBypassRecordSourcePersistence:(BOOL)arg1 ;
-(void)setCachedRecordsLookupBlock:(id)arg1 ;
-(void)setActualTopLevelRecordIDs:(NSMutableSet *)arg1 ;
-(void)setSkippedTopLevelRecordIDs:(NSMutableSet *)arg1 ;
-(void)setMutableNetworkEvents:(NSMutableArray *)arg1 ;
-(id)init;
-(void)setContext:(id<FCContentContext>)arg1 ;
-(id<FCContentContext>)context;
@end

