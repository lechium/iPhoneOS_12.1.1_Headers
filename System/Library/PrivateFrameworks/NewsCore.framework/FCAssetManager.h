/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:47 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCAssetHandleDelegate.h>
#import <libobjc.A.dylib/FCCacheCoordinatorDelegate.h>
#import <libobjc.A.dylib/FCCacheFlushing.h>

@protocol OS_dispatch_queue;
@class NSURL, NSString, FCKeyValueStore, FCAssetStore, FCCacheCoordinator, NSMapTable, NSObject, FCNetworkBehaviorMonitor;

@interface FCAssetManager : NSObject <FCAssetHandleDelegate, FCCacheCoordinatorDelegate, FCCacheFlushing> {

	BOOL _flushUnusedAssets;
	BOOL _shouldUseSecureConnectionForCKAssetDownloads;
	NSURL* _directoryURLForCachedAssets;
	NSString* _name;
	NSString* _parentDirectory;
	FCKeyValueStore* _keyValueStore;
	FCAssetStore* _assetStore;
	FCCacheCoordinator* _cacheCoordinator;
	NSMapTable* _assetHandles;
	NSObject*<OS_dispatch_queue> _assetHandlesQueue;
	FCNetworkBehaviorMonitor* _networkBehaviorMonitor;
	NSObject*<OS_dispatch_queue> _initQueue;

}

@property (nonatomic,copy) NSString * name;                                                  //@synthesize name=_name - In the implementation block
@property (nonatomic,copy) NSString * parentDirectory;                                       //@synthesize parentDirectory=_parentDirectory - In the implementation block
@property (nonatomic,retain) FCKeyValueStore * keyValueStore;                                //@synthesize keyValueStore=_keyValueStore - In the implementation block
@property (nonatomic,retain) FCAssetStore * assetStore;                                      //@synthesize assetStore=_assetStore - In the implementation block
@property (nonatomic,retain) FCCacheCoordinator * cacheCoordinator;                          //@synthesize cacheCoordinator=_cacheCoordinator - In the implementation block
@property (nonatomic,retain) NSMapTable * assetHandles;                                      //@synthesize assetHandles=_assetHandles - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> assetHandlesQueue;                 //@synthesize assetHandlesQueue=_assetHandlesQueue - In the implementation block
@property (nonatomic,retain) FCNetworkBehaviorMonitor * networkBehaviorMonitor;              //@synthesize networkBehaviorMonitor=_networkBehaviorMonitor - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> initQueue;                         //@synthesize initQueue=_initQueue - In the implementation block
@property (assign,nonatomic) BOOL flushUnusedAssets;                                         //@synthesize flushUnusedAssets=_flushUnusedAssets - In the implementation block
@property (assign,nonatomic) BOOL shouldUseSecureConnectionForCKAssetDownloads;              //@synthesize shouldUseSecureConnectionForCKAssetDownloads=_shouldUseSecureConnectionForCKAssetDownloads - In the implementation block
@property (nonatomic,readonly) NSURL * directoryURLForCachedAssets;                          //@synthesize directoryURLForCachedAssets=_directoryURLForCachedAssets - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)assetHandleForCKAssetURLString:(id)arg1 lifetimeHint:(long long)arg2 ;
-(id)assetHandleForURL:(id)arg1 lifetimeHint:(long long)arg2 ;
-(FCCacheCoordinator *)cacheCoordinator;
-(unsigned long long)cacheCoordinatorCurrentSizeWithReadLock:(id)arg1 ;
-(void)cacheCoordinator:(id)arg1 flushKeysWithWriteLock:(id)arg2 ;
-(void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)initQueue;
-(void)setInitQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)assetHandleForRecordID:(id)arg1 field:(long long)arg2 lifetimeHint:(long long)arg3 contentDatabase:(id)arg4 ;
-(id)operationToFetchFileForAssetHandle:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)assetHandleForCKAssetURLString:(id)arg1 prefetchedData:(id)arg2 unzipIfNeeded:(BOOL)arg3 lifetimeHint:(long long)arg4 ;
-(FCNetworkBehaviorMonitor *)networkBehaviorMonitor;
-(FCAssetStore *)assetStore;
-(void)setAssetStore:(FCAssetStore *)arg1 ;
-(void)setNetworkBehaviorMonitor:(FCNetworkBehaviorMonitor *)arg1 ;
-(void)_prepareForUseIfNeeded;
-(id)_assetKeyForRemoteURL:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)assetHandlesQueue;
-(NSMapTable *)assetHandles;
-(BOOL)shouldUseSecureConnectionForCKAssetDownloads;
-(id)_assetHandleForCKAssetURLComponents:(id)arg1 lifetimeHint:(long long)arg2 ;
-(BOOL)_dataIsGzipped:(id)arg1 ;
-(FCKeyValueStore *)keyValueStore;
-(id)_transformerForAssetAtPath:(id)arg1 fromNetworkEvent:(id)arg2 ;
-(BOOL)flushUnusedAssets;
-(void)_initStores;
-(id)initWithName:(id)arg1 directory:(id)arg2 networkBehaviorMonitor:(id)arg3 ;
-(id)assetHandleForCKAssetURL:(id)arg1 lifetimeHint:(long long)arg2 ;
-(id)assetHandleForURL:(id)arg1 prefetchedFileURL:(id)arg2 lifetimeHint:(long long)arg3 ;
-(void)setFlushUnusedAssets:(BOOL)arg1 ;
-(void)setShouldUseSecureConnectionForCKAssetDownloads:(BOOL)arg1 ;
-(NSURL *)directoryURLForCachedAssets;
-(NSString *)parentDirectory;
-(void)setParentDirectory:(NSString *)arg1 ;
-(void)setKeyValueStore:(FCKeyValueStore *)arg1 ;
-(void)setCacheCoordinator:(FCCacheCoordinator *)arg1 ;
-(void)setAssetHandles:(NSMapTable *)arg1 ;
-(void)setAssetHandlesQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)init;
-(NSString *)name;
-(void)setName:(NSString *)arg1 ;
@end

