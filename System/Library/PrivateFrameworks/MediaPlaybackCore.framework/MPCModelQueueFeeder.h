/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:05 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlaybackCore/MediaPlaybackCore-Structs.h>
#import <MediaPlayer/MPQueueFeeder.h>
#import <libobjc.A.dylib/MPRTCReportingItemSessionContaining.h>
#import <libobjc.A.dylib/MPShuffleControllerDataSource.h>
#import <libobjc.A.dylib/MPCQueueBehaviorManaging.h>

@protocol OS_dispatch_queue;
@class NSString, NSDictionary, NSObject, NSHashTable, NSOperationQueue, MPPlaceholderAVItem, MPPlaybackPlaceholderMediaItem, MPModelRequest, MPModelResponse, MPShuffleController, MPIdentifierSet, MPCPlaybackRequestEnvironment, ICUserIdentity;

@interface MPCModelQueueFeeder : MPQueueFeeder <MPRTCReportingItemSessionContaining, MPShuffleControllerDataSource, MPCQueueBehaviorManaging> {

	NSObject*<OS_dispatch_queue> _accessQueue;
	NSHashTable* _activeModelGenericAVItems;
	NSDictionary* _assetStoreFronts;
	unsigned long long _backgroundTaskIdentifier;
	unsigned long long _backgroundTasks;
	long long _currentRevisionID;
	NSDictionary* _endTimeModifications;
	/*^block*/id _finalTracklistLoadingCompletionHandler;
	BOOL _hasFoundStartItem;
	BOOL _hasLoadedFinalResponse;
	BOOL _hasShuffledInitialResult;
	long long _preferredStartIndexFromPlaybackContext;
	NSObject*<OS_dispatch_queue> _itemListChangeDetectionQueue;
	NSOperationQueue* _operationQueue;
	MPPlaceholderAVItem* _placeholderAVItem;
	MPPlaybackPlaceholderMediaItem* _placeholderMediaItem;
	MPModelRequest* _request;
	BOOL _requireFinalTracklist;
	MPModelResponse* _response;
	NSString* _rtcReportingPlayQueueSourceIdentifier;
	MPShuffleController* _shuffleController;
	NSString* _siriAssetInfo;
	BOOL _isSiriInitiated;
	MPIdentifierSet* _startItemIdentifiers;
	MPCPlaybackRequestEnvironment* _playbackRequestEnvironment;
	ICUserIdentity* _proactiveCacheIdentity;
	map<unsigned long, MPIdentifierSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, MPIdentifierSet *> > >* _retrievedIndexToIdentifiers;
	NSDictionary* _startTimeModifications;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * rtcReportingPlayQueueSourceIdentifier; 
@property (nonatomic,copy,readonly) NSDictionary * rtcReportingSessionAdditionalUserInfo; 
@property (nonatomic,readonly) BOOL allowsUserVisibleUpcomingItems; 
@property (nonatomic,readonly) BOOL canSeek; 
@property (nonatomic,readonly) BOOL canSkipToPreviousItem; 
@property (nonatomic,readonly) long long playbackMode; 
@property (nonatomic,readonly) BOOL userCanChangeShuffleAndRepeatType; 
+(BOOL)supportsStateRestoration;
+(id)requiredPropertiesForStaticMediaClips;
+(BOOL)supportsSecureCoding;
-(id)identifierAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)indexOfItemWithIdentifier:(id)arg1 ;
-(id)copyRawItemAtIndex:(unsigned long long)arg1 ;
-(id)playbackInfoForIdentifier:(id)arg1 ;
-(void)reloadWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)modelPlayEvent;
-(Class)itemClass;
-(BOOL)hasValidItemAtIndex:(unsigned long long)arg1 ;
-(id)mediaItemAtIndex:(unsigned long long)arg1 ;
-(void)restoreState:(/*^block*/id)arg1 ;
-(BOOL)shouldReuseQueueFeederForPlaybackContext:(id)arg1 ;
-(void)shuffleItemsWithAnchor:(unsigned long long*)arg1 ;
-(void)reloadWithPlaybackContext:(id)arg1 requireFinalTracklist:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(long long)itemTypeForIndex:(unsigned long long)arg1 ;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(BOOL)isPlaceholderItemForQueueIdentifier:(id)arg1 ;
-(void)applyVolumeNormalizationForItem:(id)arg1 ;
-(long long)realRepeatType;
-(long long)realShuffleType;
-(id)audioSessionModeForItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1 ;
-(unsigned long long)indexOfMediaItem:(id)arg1 ;
-(id)mediaItemForIdentifier:(id)arg1 ;
-(void)_beginBackgroundTaskAssertion;
-(void)_endBackgroundTaskAssertion;
-(id)shuffleController:(id)arg1 identifierForItemAtIndex:(unsigned long long)arg2 ;
-(unsigned long long)shuffleController:(id)arg1 countOfItemIdentifier:(id)arg2 withMaximumCount:(unsigned long long)arg3 ;
-(unsigned long long)itemCountForShuffleController:(id)arg1 ;
-(NSString *)rtcReportingPlayQueueSourceIdentifier;
-(void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1 ;
-(BOOL)supportsAddToQueue;
-(void)_reloadForInitialRequest;
-(BOOL)_hasPlaceholderItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)_songShuffledIndexForIndex:(unsigned long long)arg1 ;
-(id)_modelObjectAtIndex:(unsigned long long)arg1 ;
-(id)_genericObjectForModelObject:(id)arg1 ;
-(id)_equivalencySourceAdamIDForIdentifierSet:(id)arg1 ;
-(id)_identifierSetAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)_indexOfItemWithIdentifier:(id)arg1 shouldIgnoreShuffle:(BOOL)arg2 ;
-(void)_updateProactiveCaching;
-(void)_reloadModelRequestForInvalidation;
-(id)_resultsForShuffleController;
-(void)_responseDidInvalidateNotification:(id)arg1 ;
-(long long)_currentPreferredStartIndexWithFinalResponse:(BOOL)arg1 ;
-(BOOL)_handleFinalResponseWithPreferredStartIndex:(unsigned long long)arg1 ;
-(void)_reloadModelRequestWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)_newModelRequest;
-(void)_unregisterNotificationsForResponse:(id)arg1 ;
-(void)_registerNotificationsForResponse:(id)arg1 ;
-(void)_playbackUserDefaultsMusicRepeatTypeDidChangeNotification:(id)arg1 ;
-(void)_playbackUserDefaultsMusicShuffleTypeDidChangeNotification:(id)arg1 ;
-(BOOL)_shouldRecordReturnedItemIDs;
-(id)init;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)itemCount;
-(id)query;
@end

