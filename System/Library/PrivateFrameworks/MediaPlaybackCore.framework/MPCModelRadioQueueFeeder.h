/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:06 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlayer/MPQueueFeeder.h>
#import <libobjc.A.dylib/MPRTCReportingItemSessionContaining.h>

@protocol MPAVItemQueueIdentifier;
@class MPAVItem, MPCModelRadioPersonalizationResponse, NSOperationQueue, ICUserIdentityStore, SSVPlayActivityController, MPCModelRadioPlaybackQueue, MPCPlaybackRequestEnvironment, ICUserIdentity, NSString, ICStoreRequestContext, NSDictionary;

@interface MPCModelRadioQueueFeeder : MPQueueFeeder <MPRTCReportingItemSessionContaining> {

	unsigned long long _backgroundTaskIdentifier;
	unsigned long long _backgroundTasks;
	MPAVItem* _currentItem;
	BOOL _hasLoadedAdditionalItemsForCurrentItem;
	id<MPAVItemQueueIdentifier> _lastCleanPlayedIdentifier;
	id<MPAVItemQueueIdentifier> _lastPlayedIdentifier;
	MPCModelRadioPersonalizationResponse* _lastResponse;
	long long _loadingOperationDepth;
	NSOperationQueue* _loadingOperationQueue;
	BOOL _mayHaveRestrictedContent;
	ICUserIdentityStore* _observedIdentityStore;
	SSVPlayActivityController* _playActivityController;
	MPCModelRadioPlaybackQueue* _playbackQueue;
	MPCPlaybackRequestEnvironment* _playbackRequestEnvironment;
	ICUserIdentity* _proactiveCacheIdentity;
	long long _queueGeneration;
	NSString* _siriAssetInfo;
	ICStoreRequestContext* _storeRequestContext;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * rtcReportingPlayQueueSourceIdentifier; 
@property (nonatomic,copy,readonly) NSDictionary * rtcReportingSessionAdditionalUserInfo; 
-(id)identifierAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)indexOfItemWithIdentifier:(id)arg1 ;
-(id)copyRawItemAtIndex:(unsigned long long)arg1 ;
-(id)modelPlayEvent;
-(BOOL)canSkipToPreviousItemForItem:(id)arg1 ;
-(Class)itemClass;
-(BOOL)hasValidItemAtIndex:(unsigned long long)arg1 ;
-(BOOL)canSkipItem:(id)arg1 ;
-(BOOL)allowsUserVisibleUpcomingItems;
-(BOOL)userCanChangeShuffleAndRepeatType;
-(void)reloadWithPlaybackContext:(id)arg1 requireFinalTracklist:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)allowsQueueResetWhenReachingEnd;
-(BOOL)canReorder;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(BOOL)isPlaceholderItemForQueueIdentifier:(id)arg1 ;
-(long long)realRepeatType;
-(long long)realShuffleType;
-(id)audioSessionModeForItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1 ;
-(void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2 ;
-(void)_beginBackgroundTaskAssertion;
-(void)_endBackgroundTaskAssertion;
-(NSString *)rtcReportingPlayQueueSourceIdentifier;
-(NSDictionary *)rtcReportingSessionAdditionalUserInfo;
-(void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1 ;
-(BOOL)preventsHardQueueModificationsForItem:(id)arg1 ;
-(BOOL)isRadioQueueFeeder;
-(void)_updateProactiveCaching;
-(void)_responseDidInvalidateNotification:(id)arg1 ;
-(void)_loadAdditionalItemsIfNeeded;
-(void)_endObservingIdentityStoreForSignOut;
-(id)_startPlaybackRequestWithPlaybackContext:(id)arg1 ;
-(void)_loadTracksWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_detectSignOutForIdentityStore:(id)arg1 ;
-(void)_responseDidInvalidate;
-(void)_detectSignOutForIdentityStoreChangeNotification:(id)arg1 ;
-(void)_failAfterRequest:(id)arg1 withError:(id)arg2 ;
-(void)_handlePersonalizationResponse:(id)arg1 personalizationError:(id)arg2 fromRequest:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_observePersonalizationResponse:(id)arg1 ;
-(void)_savePlaybackHistoryWithCurrentIndex:(long long)arg1 ;
-(void)_beginObservingIdentityStoreForSignOut;
-(id)_defaultGetTracksRequestWithContext:(id)arg1 radioStation:(id)arg2 ;
-(void)_handleGetTracksResponse:(id)arg1 getTracksError:(id)arg2 fromRequest:(id)arg3 completion:(/*^block*/id)arg4 ;
-(long long)_indexOfAVItem:(id)arg1 ;
-(void)_removeRestrictedTracks;
-(void)_repersonalizeCurrentTracks;
-(id)init;
-(void)dealloc;
-(unsigned long long)itemCount;
@end

