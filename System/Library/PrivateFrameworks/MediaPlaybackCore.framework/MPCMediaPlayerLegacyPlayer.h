/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:04 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlaybackCore/MediaPlaybackCore-Structs.h>
#import <MediaPlaybackCore/MPCPlayer.h>
#import <libobjc.A.dylib/MPNowPlayingPlaybackQueueDataSource.h>
#import <libobjc.A.dylib/MPRemoteCommandDelegate_Private.h>

@protocol OS_dispatch_queue;
@class NSMapTable, MPCMediaPlayerLegacyItemContainer, MPCMediaPlayerLegacyItem, NSObject, MPLibraryAddStatusObserver, MPAVItem, MPCPlaybackIntent, MPCMediaPlayerLegacyAVController, MPCMediaPlayerLegacyNowPlayingObserver, MPCMediaPlayerLegacyReportingController, MPAVController, NSString;

@interface MPCMediaPlayerLegacyPlayer : MPCPlayer <MPNowPlayingPlaybackQueueDataSource, MPRemoteCommandDelegate_Private> {

	NSMapTable* _avItemToPlayerItemWeakMap;
	MPCMediaPlayerLegacyItemContainer* _currentContainer;
	MPCMediaPlayerLegacyItem* _currentItem;
	BOOL _hasScheduledPlaybackStatePreservation;
	BOOL _isRestoringPlaybackState;
	BOOL _hasReceivedAddPlaybackIntent;
	BOOL _mediaRemoteSync;
	NSObject*<OS_dispatch_queue> _stateRestorationSerialQueue;
	MPLibraryAddStatusObserver* _libraryAddStatusObserver;
	BOOL _allowsNewPlaybackErrorItem;
	MPAVItem* _firstPlaybackErrorItem;
	BOOL _iAmTheiPod;
	MPCPlaybackIntent* _fallbackPlaybackIntent;
	MPCMediaPlayerLegacyAVController* _player;
	MPCMediaPlayerLegacyNowPlayingObserver* _playerObserver;
	MPCMediaPlayerLegacyReportingController* _reportingController;

}

@property (nonatomic,retain) MPCMediaPlayerLegacyAVController * player;                                  //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) MPCMediaPlayerLegacyNowPlayingObserver * playerObserver;                    //@synthesize playerObserver=_playerObserver - In the implementation block
@property (nonatomic,retain) MPCMediaPlayerLegacyReportingController * reportingController;              //@synthesize reportingController=_reportingController - In the implementation block
@property (nonatomic,readonly) MPAVController * avController; 
@property (assign,nonatomic) BOOL iAmTheiPod;                                                            //@synthesize iAmTheiPod=_iAmTheiPod - In the implementation block
@property (nonatomic,readonly) unsigned long long hardQueueItemCount; 
@property (assign,nonatomic) BOOL pictureInPictureSupported; 
@property (nonatomic,retain) MPCPlaybackIntent * fallbackPlaybackIntent;                                 //@synthesize fallbackPlaybackIntent=_fallbackPlaybackIntent - In the implementation block
@property (getter=isMediaRemoteSyncing,nonatomic,readonly) BOOL mediaRemoteSync; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(Class)queueRequestOperationClass;
-(id)contentItemIdentifierForOffset:(long long)arg1 ;
-(id)videoLayer;
-(void)_playbackStateChangedNotification:(id)arg1 ;
-(void)_availableRoutesDidChangeNotification:(id)arg1 ;
-(MPAVController *)avController;
-(id)nowPlayingInfoCenter:(id)arg1 artworkCatalogForContentItem:(id)arg2 ;
-(id)nowPlayingInfoCenter:(id)arg1 contentItemForID:(id)arg2 ;
-(id)nowPlayingInfoCenter:(id)arg1 contentItemIDForOffset:(long long)arg2 ;
-(id)contentItemForOffset:(long long)arg1 ;
-(id)nowPlayingInfoCenter:(id)arg1 artworkForContentItem:(id)arg2 size:(CGSize)arg3 completion:(/*^block*/id)arg4 ;
-(void)startMediaRemoteSync;
-(void)stopMediaRemoteSync;
-(BOOL)remoteCommand:(id)arg1 isSupportedForContentItemIdentifier:(id)arg2 ;
-(BOOL)remoteCommand:(id)arg1 isEnabledForContentItemIdentifier:(id)arg2 ;
-(void)_contentsDidChangeNotification:(id)arg1 ;
-(void)startPictureInPicture;
-(void)setPictureInPictureSupported:(BOOL)arg1 ;
-(MPCMediaPlayerLegacyAVController *)player;
-(void)setPlayer:(MPCMediaPlayerLegacyAVController *)arg1 ;
-(void)recordLyricsViewEvent:(id)arg1 ;
-(MPCMediaPlayerLegacyReportingController *)reportingController;
-(MPCPlaybackIntent *)fallbackPlaybackIntent;
-(void)stopSyncingNowPlayingInfo;
-(void)startSyncingNowPlayingInfo;
-(void)updateSupportedCommandsForCommandCenter:(id)arg1 muxer:(id)arg2 action:(SEL)arg3 ;
-(void)performCommandEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_playerDidPauseForPlaybackPreventionNotification:(id)arg1 ;
-(void)_currentItemChangedNotification:(id)arg1 ;
-(void)_repeatShuffleTypeChangedNotification:(id)arg1 ;
-(void)_playerPlaybackErrorNotification:(id)arg1 ;
-(void)_soundCheckEnabledChangedNotification:(id)arg1 ;
-(void)setIAmTheiPod:(BOOL)arg1 ;
-(void)_reloadPlayerWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_adjustedPlaybackContextForContext:(id)arg1 ;
-(void)_handleInsertIntoQueueCommandEvent:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_handleCreateRadioStationCommandEvent:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_handleSetQueueCommandEvent:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_notifySupportedCommandsChanged;
-(void)preservePlaybackStateImmediately;
-(void)_refreshIAmTheiPod;
-(BOOL)_shouldVendContentItemForOffset:(long long)arg1 ;
-(void)_getPlaybackContextForPlaybackQueue:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_updateSupportedCommandsForCommandCenter:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
-(void)_currentItemInvalidedCommandsNotification:(id)arg1 ;
-(void)schedulePlaybackStatePreservation;
-(id)_playerItemForAVItem:(id)arg1 ;
-(id)currentContainer;
-(void)addPlaybackIntent:(id)arg1 withOptions:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)clearPlaybackQueueWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)pictureInPictureSupported;
-(void)registerWithPlaybackLeaseController:(id)arg1 ;
-(BOOL)isRestoringPlaybackState;
-(void)restorePlaybackStateCompletionHandler:(/*^block*/id)arg1 ;
-(void)setFallbackPlaybackIntent:(MPCPlaybackIntent *)arg1 ;
-(BOOL)isMediaRemoteSyncing;
-(BOOL)isSyncingNowPlayingInfo;
-(id)activeRouteName;
-(unsigned long long)hardQueueItemCount;
-(void)_playerDidPausePlaybackForLeaseEndNotification:(id)arg1 ;
-(MPCMediaPlayerLegacyNowPlayingObserver *)playerObserver;
-(void)setPlayerObserver:(MPCMediaPlayerLegacyNowPlayingObserver *)arg1 ;
-(void)setReportingController:(MPCMediaPlayerLegacyReportingController *)arg1 ;
-(BOOL)iAmTheiPod;
-(id)init;
-(void)dealloc;
-(id)currentItem;
-(long long)state;
-(id)initWithOptions:(unsigned long long)arg1 ;
@end

