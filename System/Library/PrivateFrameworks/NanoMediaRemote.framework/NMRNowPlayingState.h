/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:22 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NanoMediaRemote/NanoMediaRemote-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSDate, MPIdentifierSet, NSNumber, NSString, MPArtworkCatalog, NSData;

@interface NMRNowPlayingState : NSObject <NSCopying> {

	float _preferredPlaybackRate;

}

@property (nonatomic,readonly) NSDate * timestamp; 
@property (nonatomic,readonly) double duration; 
@property (nonatomic,readonly) float playbackRate; 
@property (nonatomic,readonly) float preferredPlaybackRate;                                                          //@synthesize preferredPlaybackRate=_preferredPlaybackRate - In the implementation block
@property (nonatomic,readonly) unsigned playbackState; 
@property (nonatomic,readonly) double elapsedTimeAtLastUpdate; 
@property (getter=isPlaying,nonatomic,readonly) BOOL playing; 
@property (nonatomic,readonly) double elapsedTime; 
@property (nonatomic,readonly) BOOL hasNowPlayingInfo; 
@property (nonatomic,readonly) MPIdentifierSet * identifiers; 
@property (nonatomic,readonly) NSNumber * itemPersistentID; 
@property (nonatomic,readonly) NSNumber * itemCompanionPersistentID; 
@property (nonatomic,readonly) NSNumber * itemAlbumPersistentID; 
@property (nonatomic,readonly) NSNumber * storeAdamID; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * displayTitle; 
@property (nonatomic,readonly) NSString * artist; 
@property (nonatomic,readonly) NSString * album; 
@property (getter=isExplicitTrack,nonatomic,readonly) BOOL explicitTrack; 
@property (nonatomic,readonly) MPArtworkCatalog * artworkCatalog; 
@property (nonatomic,readonly) NSString * radioStationName; 
@property (nonatomic,readonly) NSNumber * radioStationIdentifier; 
@property (nonatomic,readonly) NSString * radioStationHash; 
@property (getter=isAdvertisement,nonatomic,readonly) BOOL advertisement; 
@property (getter=isAlwaysLive,nonatomic,readonly) BOOL alwaysLive; 
@property (nonatomic,readonly) BOOL isPlayingRadio; 
@property (nonatomic,readonly) NSData * artworkImageData; 
@property (getter=isFirstPartyApp,nonatomic,readonly) BOOL firstPartyApp; 
@property (nonatomic,readonly) NSString * applicationDisplayName; 
@property (nonatomic,readonly) NSString * applicationBundleIdentifier; 
@property (nonatomic,readonly) NSData * applicationIconImageData; 
@property (getter=isRepeatModeCommandSupported,nonatomic,readonly) BOOL repeatModeCommandSupported; 
@property (nonatomic,readonly) int repeatMode; 
@property (getter=isShuffleModeCommandSupported,nonatomic,readonly) BOOL shuffleModeCommandSupported; 
@property (nonatomic,readonly) int shuffleMode; 
@property (getter=isPlaybackRateCommandSupported,nonatomic,readonly) BOOL playbackRateCommandSupported; 
@property (getter=isLikeCommandSupported,nonatomic,readonly) BOOL likeCommandSupported; 
@property (getter=isLikeCommandEnabled,nonatomic,readonly) BOOL likeCommandEnabled; 
@property (getter=isLikedActive,nonatomic,readonly) BOOL likedActive; 
@property (nonatomic,readonly) NSString * localizedLikeTitle; 
@property (nonatomic,readonly) long long likeCommandPresentationStyle; 
@property (getter=isBanCommandSupported,nonatomic,readonly) BOOL banCommandSupported; 
@property (getter=isBanCommandEnabled,nonatomic,readonly) BOOL banCommandEnabled; 
@property (getter=isBannedActive,nonatomic,readonly) BOOL bannedActive; 
@property (nonatomic,readonly) NSString * localizedBanTitle; 
@property (nonatomic,readonly) long long banCommandPresentationStyle; 
@property (getter=isBookmarkCommandSupported,nonatomic,readonly) BOOL bookmarkCommandSupported; 
@property (getter=isBookmarkCommandEnabled,nonatomic,readonly) BOOL bookmarkCommandEnabled; 
@property (getter=isBookmarkedActive,nonatomic,readonly) BOOL bookmarkedActive; 
@property (nonatomic,readonly) NSString * localizedBookmarkTitle; 
@property (getter=isAddToLibraryCommandSupported,nonatomic,readonly) BOOL addToLibraryCommandSupported; 
@property (getter=isAddToLibraryCommandEnabled,nonatomic,readonly) BOOL addToLibraryCommandEnabled; 
@property (getter=isAddToLibraryActive,nonatomic,readonly) BOOL addToLibraryActive; 
@property (nonatomic,readonly) BOOL hasSupportedFeedbackCommands; 
@property (nonatomic,readonly) NSNumber * nextTrackCommandEnabled; 
@property (nonatomic,readonly) NSNumber * previousTrackCommandEnabled; 
@property (getter=isSkipForwardCommandEnabled,nonatomic,readonly) BOOL skipForwardCommandEnabled; 
@property (getter=isSkipBackwardCommandEnabled,nonatomic,readonly) BOOL skipBackwardCommandEnabled; 
@property (nonatomic,readonly) double fastForwardTimeInterval; 
@property (nonatomic,readonly) double rewindTimeInterval; 
+(id)emptyNowPlayingState;
-(MPIdentifierSet *)identifiers;
-(BOOL)hasNowPlayingInfo;
-(NSNumber *)radioStationIdentifier;
-(BOOL)isAdvertisement;
-(NSNumber *)itemPersistentID;
-(NSString *)artist;
-(BOOL)isExplicitTrack;
-(NSNumber *)storeAdamID;
-(MPArtworkCatalog *)artworkCatalog;
-(float)playbackRate;
-(NSString *)radioStationHash;
-(float)preferredPlaybackRate;
-(int)shuffleMode;
-(NSString *)radioStationName;
-(NSString *)displayTitle;
-(NSString *)album;
-(BOOL)isAlwaysLive;
-(NSString *)applicationBundleIdentifier;
-(int)repeatMode;
-(NSString *)applicationDisplayName;
-(unsigned)playbackState;
-(NSNumber *)itemCompanionPersistentID;
-(NSNumber *)itemAlbumPersistentID;
-(NSData *)artworkImageData;
-(NSData *)applicationIconImageData;
-(BOOL)isRepeatModeCommandSupported;
-(BOOL)isShuffleModeCommandSupported;
-(BOOL)isPlaybackRateCommandSupported;
-(BOOL)isLikeCommandSupported;
-(BOOL)isLikeCommandEnabled;
-(BOOL)isLikedActive;
-(NSString *)localizedLikeTitle;
-(long long)likeCommandPresentationStyle;
-(BOOL)isBanCommandSupported;
-(BOOL)isBanCommandEnabled;
-(BOOL)isBannedActive;
-(NSString *)localizedBanTitle;
-(long long)banCommandPresentationStyle;
-(BOOL)isBookmarkCommandSupported;
-(BOOL)isBookmarkCommandEnabled;
-(BOOL)isBookmarkedActive;
-(NSString *)localizedBookmarkTitle;
-(BOOL)isAddToLibraryCommandSupported;
-(BOOL)isAddToLibraryCommandEnabled;
-(BOOL)isAddToLibraryActive;
-(NSNumber *)nextTrackCommandEnabled;
-(NSNumber *)previousTrackCommandEnabled;
-(BOOL)isSkipForwardCommandEnabled;
-(BOOL)isSkipBackwardCommandEnabled;
-(double)fastForwardTimeInterval;
-(double)rewindTimeInterval;
-(double)elapsedTimeAtLastUpdate;
-(unsigned long long)compareWithNowPlayingState:(id)arg1 ;
-(BOOL)isPlayingRadio;
-(BOOL)isFirstPartyApp;
-(BOOL)hasSupportedFeedbackCommands;
-(id)description;
-(NSString *)title;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSDate *)timestamp;
-(double)duration;
-(double)elapsedTime;
-(BOOL)isPlaying;
@end

