/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:43:58 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/_DKSyncRemoteKnowledgeStorage.h>

@protocol OS_dispatch_source, _DKSyncRemoteKnowledgeStorageFetchDelegate;
@class NSDictionary, _DKEventTypeResultStatsCounter, RPCompanionLinkClient, NSMutableDictionary, NSObject;

@interface _DKSyncRapportKnowledgeStorage : NSObject <_DKSyncRemoteKnowledgeStorage> {

	NSDictionary* _failIfAsleepOption;
	_DKEventTypeResultStatsCounter* _failIfAsleepStats;
	RPCompanionLinkClient* _client;
	NSMutableDictionary* _companionLinkClients;
	unsigned long long _outstandingRequestCount;
	NSObject*<OS_dispatch_source> _companionLinkClientsCleanupTimer;
	double _retryTimeout;
	unsigned long long _currentChangeSetSequenceNumber;
	BOOL _isAvailable;
	id<_DKSyncRemoteKnowledgeStorageFetchDelegate> _delegate;

}

@property (retain) id<_DKSyncRemoteKnowledgeStorageFetchDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign) BOOL isAvailable;                                                     //@synthesize isAvailable=_isAvailable - In the implementation block
+(id)sharedInstance;
-(long long)transportType;
-(void)setFetchDelegate:(id)arg1 ;
-(void)fetchSourceDeviceIDFromPeer:(id)arg1 highPriority:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateStorageWithAddedEvents:(id)arg1 deletedEventIDs:(id)arg2 highPriority:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)setHasAdditionsFlag:(BOOL)arg1 forPeer:(id)arg2 ;
-(void)setHasDeletionsFlag:(BOOL)arg1 forPeer:(id)arg2 ;
-(void)fetchEventsFromPeer:(id)arg1 creationDateBetweenDate:(id)arg2 andDate:(id)arg3 streamNames:(id)arg4 limit:(unsigned long long)arg5 fetchOrder:(long long)arg6 highPriority:(BOOL)arg7 completion:(/*^block*/id)arg8 ;
-(BOOL)hasAdditionsFlagForPeer:(id)arg1 ;
-(BOOL)hasDeletionsFlagForPeer:(id)arg1 ;
-(void)clearPrewarmedFlag;
-(void)prewarmFetchWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchDeletedEventIDsFromPeer:(id)arg1 sinceDate:(id)arg2 streamNames:(id)arg3 limit:(unsigned long long)arg4 highPriority:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)fetchAdditionsHighWaterMarkWithPeer:(id)arg1 highPriority:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchDeletionsHighWaterMarkWithPeer:(id)arg1 highPriority:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)removeAllClientsWithRetiring:(BOOL)arg1 ;
-(void)startRapport;
-(void)handleInvalidation;
-(void)handleDeviceFound:(id)arg1 ;
-(void)handleDeviceChanged:(id)arg1 changes:(unsigned)arg2 ;
-(void)handleDeviceLost:(id)arg1 ;
-(void)registerRequestIDsWithClient:(id)arg1 ;
-(void)handleActivateWithError:(id)arg1 ;
-(void)handleBeaconWithRequest:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handleFetchSourceDeviceIDWithRequest:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handleFetchEventsWithRequest:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handleFetchDeletedEventIDsWithRequest:(id)arg1 options:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(void)handshakeWithDuetSyncPeer:(id)arg1 orError:(id)arg2 ;
-(id)deviceForPeer:(id)arg1 ;
-(id)clientForPeer:(id)arg1 ;
-(void)removeClient:(id)arg1 forPeer:(id)arg2 retiring:(BOOL)arg3 ;
-(id)myDeviceID;
-(void)handleBeaconWithResponse:(id)arg1 options:(id)arg2 error:(id)arg3 peer:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)sendRequestID:(id)arg1 request:(id)arg2 peer:(id)arg3 options:(id)arg4 responseHandler:(/*^block*/id)arg5 ;
-(void)handleAvailabilityFailureWithPeer:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)transformCaughtObject:(id)arg1 existingError:(id)arg2 ;
-(id)transformResponseError:(id)arg1 ;
-(BOOL)isTransportActiveForPeer:(id)arg1 ;
-(void)handleFetchEventsWithResponse:(id)arg1 options:(id)arg2 error:(id)arg3 peer:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)changeSetForSyncWithEventsToInsert:(id)arg1 eventIDsToDeletes:(id)arg2 error:(id*)arg3 ;
-(id)dataFromChangeSet:(id)arg1 didCompress:(BOOL*)arg2 ;
-(id)changeSetFromCompressedData:(id)arg1 deviceIdentifier:(id)arg2 sequenceNumber:(unsigned long long)arg3 ;
-(void)handleFetchDeletedEventIDsWithResponse:(id)arg1 options:(id)arg2 error:(id)arg3 peer:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)handleFetchSourceDeviceIDWithResponse:(id)arg1 options:(id)arg2 error:(id)arg3 peer:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)handleActivateCompanionLinkClient:(id)arg1 forPeer:(id)arg2 error:(id)arg3 ;
-(void)sendRequestID:(id)arg1 request:(id)arg2 peer:(id)arg3 client:(id)arg4 options:(id)arg5 responseHandler:(/*^block*/id)arg6 ;
-(void)companionLinkCleanupTimerFired;
-(void)performCompanionLinkCleanup;
-(void)createOrRescheduleCompanionLinkClientsCleanupTimer;
-(void)setClient:(id)arg1 forPeer:(id)arg2 ;
-(void)sendBeaconToPeer:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setIsAvailable:(BOOL)arg1 ;
-(void)cancelOutstandingOperations;
-(BOOL)isAvailable;
-(id)init;
-(void)dealloc;
-(id)name;
-(void)setDelegate:(id<_DKSyncRemoteKnowledgeStorageFetchDelegate>)arg1 ;
-(id<_DKSyncRemoteKnowledgeStorageFetchDelegate>)delegate;
-(void)start;
@end

