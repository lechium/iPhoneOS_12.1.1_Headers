/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:57 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomEvaluator.framework/SymptomEvaluator
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SymptomEvaluator/SymptomEvaluator-Structs.h>
#import <libobjc.A.dylib/CTCarrierSpaceClientDelegate.h>
#import <libobjc.A.dylib/ConfigurableObjectProtocol.h>
#import <SymptomEvaluator/SymptomAdditionalProtocol.h>
#import <libobjc.A.dylib/ManagedEventInfoProtocol.h>

@protocol OS_dispatch_source;
@class State, NSArray, NetworkAnalyticsStateRelay, NSObject, MotionStateRelay, SystemSettingsRelay, AWDAgent, NSDate, CTCarrierSpaceClient, AWDUsageDeltaTracker, CanUseAppsCache, NSMutableDictionary, NSString;

@interface CellFallbackHandler : NSObject <CTCarrierSpaceClientDelegate, ConfigurableObjectProtocol, SymptomAdditionalProtocol, ManagedEventInfoProtocol> {

	State* currentState;
	NSArray* states;
	NetworkAnalyticsStateRelay* cellRelay;
	NetworkAnalyticsStateRelay* wifiRelay;
	id relayReadyObserver;
	id polledFlowObserver;
	int notifyToken;
	NSObject*<OS_dispatch_source> motionTimer;
	unsigned motionDetectorState;
	MotionStateRelay* motionRelay;
	SystemSettingsRelay* settingsRelay;
	unsigned administrativeState;
	AWDAgent* awdAgent;
	unsigned long long appBlacklistsSettleTime;
	unsigned long long appBlacklistsFreePassCellMax;
	unsigned long long appBlacklistsFreePassFlowMax;
	double appBlacklistsRNFToCellRatio;
	BOOL nonDefaultAppBlacklistsRNFToCellRatio;
	BOOL highCapacityCellPlan;
	BOOL nonDefaultHighCapacityCellPlan;
	tcp_connection_fallback_watch_sRef cellFallbackObserver;
	BOOL cellFallbackInUse;
	NSObject*<OS_dispatch_source> mptcpObserver;
	BOOL mptcpInUse;
	BOOL needExtendedSignatures;
	NSObject*<OS_dispatch_source> cellFallbackTimer;
	NSObject*<OS_dispatch_source> elevatedStateTimer;
	NSDate* lastCellFallbackTime;
	unsigned long long lastCellFallbackUsageMarker;
	CTCarrierSpaceClient* cellPlanObserver;
	unsigned long long appPolicyCheckedCount;
	unsigned long long appPolicyDeniedCount;
	NSObject*<OS_dispatch_source> timerTriggerDisconnect;
	AWDUsageDeltaTracker* usageTriggerDisconnect;
	CanUseAppsCache* appsCache;
	NSMutableDictionary* overdraftLedger;
	NSMutableDictionary* blockedRenewalLedger;
	BOOL _rnfActivated;
	BOOL _wifiCallUnderway;
	BOOL _runningRNFTest;
	long long _fallbackAdvice;

}

@property (assign) BOOL rnfActivated;                               //@synthesize rnfActivated=_rnfActivated - In the implementation block
@property (assign) BOOL wifiCallUnderway;                           //@synthesize wifiCallUnderway=_wifiCallUnderway - In the implementation block
@property (assign) long long fallbackAdvice;                        //@synthesize fallbackAdvice=_fallbackAdvice - In the implementation block
@property (assign) BOOL runningRNFTest;                             //@synthesize runningRNFTest=_runningRNFTest - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)configureClass:(id)arg1 ;
+(float)appPolicyDenialsScore;
+(void)canUseApps:(id)arg1 replyQueue:(id)arg2 reply:(/*^block*/id)arg3 ;
+(void)setRunningRNFTest:(BOOL)arg1 ;
+(id)sharedInstance;
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1 ;
-(void)_dumpState;
-(int)configureInstance:(id)arg1 ;
-(int)read:(id)arg1 returnedValues:(id)arg2 ;
-(void)generateInfoForId:(unsigned long long)arg1 context:(const char*)arg2 uuid:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(BOOL)noteSymptom:(id)arg1 ;
-(void)_completeInitialization;
-(void)_bringStateToIdle;
-(void)_administrativeDisable;
-(void)_administrativeEnable;
-(void)_updateCellFallbackState;
-(void)_updateMptcpState;
-(void)_peekIntoCellPlan;
-(BOOL)_idempotentInitializationFromIdle;
-(BOOL)postStack:(unsigned)arg1 outValue:(BOOL*)arg2 ;
-(void)postMotionDetector:(unsigned)arg1 ;
-(void)postHasAdviceNotification:(BOOL)arg1 ;
-(void)setRnfActivated:(BOOL)arg1 ;
-(void)setFallbackAdvice:(long long)arg1 ;
-(void)stopElevatedStateWatchdog;
-(void)startElevatedStateWatchdogWithPeriod:(unsigned long long)arg1 ;
-(BOOL)wifiCallUnderway;
-(void)postUpwards:(long long)arg1 ;
-(int)_motionToAwdCode;
-(void)_toggleElevatedState;
-(void)setRunningRNFTest:(BOOL)arg1 ;
-(void)_canUseApps:(id)arg1 replyQueue:(id)arg2 reply:(/*^block*/id)arg3 ;
-(id)_createAndInitializeAWDMetricForAppQuery:(id)arg1 verdictCode:(int)arg2 reasonCode:(int)arg3 ;
-(BOOL)_isAppName:(id)arg1 withState:(long long)arg2 inListType:(long long)arg3 ;
-(void)_setPolicyVerdictLedgerGivenAsk:(id)arg1 exceptions:(id)arg2 verdict:(id)arg3 explain:(id)arg4 ;
-(float)_appPolicyDenialsScore;
-(void)setWifiCallUnderway:(BOOL)arg1 ;
-(void)_trackCellUsageAfterTriggerDisconnectWithNewSeries:(BOOL)arg1 ;
-(void)dataPlanMetricsDidChange;
-(long long)fallbackAdvice;
-(BOOL)rnfActivated;
-(BOOL)runningRNFTest;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
@end

