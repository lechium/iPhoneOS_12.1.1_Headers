/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:21 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FrontBoard/FBProcess.h>
#import <libobjc.A.dylib/BKSProcessDelegate.h>

@class FBApplicationInfo, FBApplicationProcessExitContext, FBProcessExecutionContext, FBSProcessTerminationRequest, FBProcessWatchdogEventContext, FBProcessState, NSMutableSet, NSMutableArray, BSMachPortSendRight, FBProcessWatchdog, FBSProcessWatchdogPolicy, FBProcessCPUStatistics, BKSProcess, BKSProcessAssertion, NSString;

@interface FBApplicationProcess : FBProcess <BKSProcessDelegate> {

	FBApplicationInfo* _applicationInfo;
	FBApplicationProcessExitContext* _exitContext;
	FBProcessExecutionContext* _executionContext;
	FBSProcessTerminationRequest* _terminationRequest;
	FBProcessWatchdogEventContext* _terminationWatchdogContext;
	FBProcessState* _terminationState;
	NSMutableSet* _allowedLockedFilePaths;
	NSMutableArray* _queuedSceneBlocksToExecuteAfterLaunch;
	NSMutableArray* _queue_terminateRequestCompletionBlocks;
	BOOL _attemptedBootstrap;
	BOOL _attemptedFinalizedLaunch;
	BOOL _queue_launchEventReceiptAcknowledged;
	BOOL _bootstrapFailed;
	BOOL _exitedBeforeAttemptingFinalizedLaunch;
	BOOL _pendingExit;
	BOOL _beingDebugged;
	BOOL _waitForDebugger;
	BSMachPortSendRight* _gsEventPort;
	FBProcessWatchdog* _watchdog;
	FBSProcessWatchdogPolicy* _sceneCreateWatchdogPolicy;
	long long _terminationReason;
	FBProcessCPUStatistics* _cpuStatistics;
	double _execTime;
	unsigned long long _htAppIdentifier;
	BKSProcess* _bksProcess;
	BKSProcessAssertion* _launchProcessAssertion;
	BKSProcessAssertion* _viewServiceProcessAssertion;
	BKSProcessAssertion* _continuousProcessAssertion;
	BOOL _recordingAudio;
	BOOL _nowPlayingWithAudio;
	BOOL _connectedToExternalAccessory;

}

@property (assign,getter=isBeingDebugged,nonatomic) BOOL beingDebugged;                                            //@synthesize beingDebugged=_beingDebugged - In the implementation block
@property (assign,nonatomic,__weak) id<FBApplicationProcessDelegate> delegate; 
@property (getter=_queue_cpuStatistics,nonatomic,readonly) FBProcessCPUStatistics * cpuStatistics;                 //@synthesize cpuStatistics=_cpuStatistics - In the implementation block
@property (getter=_queue_execTime,nonatomic,readonly) double execTime; 
@property (getter=_queue_terminationReason,nonatomic,readonly) long long terminationReason; 
@property (assign,getter=isRecordingAudio,nonatomic) BOOL recordingAudio;                                          //@synthesize recordingAudio=_recordingAudio - In the implementation block
@property (assign,getter=isNowPlayingWithAudio,nonatomic) BOOL nowPlayingWithAudio;                                //@synthesize nowPlayingWithAudio=_nowPlayingWithAudio - In the implementation block
@property (assign,getter=isConnectedToExternalAccessory,nonatomic) BOOL connectedToExternalAccessory;              //@synthesize connectedToExternalAccessory=_connectedToExternalAccessory - In the implementation block
@property (nonatomic,readonly) double elapsedCPUTime; 
@property (getter=isPendingExit,nonatomic,readonly) BOOL pendingExit;                                              //@synthesize pendingExit=_pendingExit - In the implementation block
@property (nonatomic,readonly) BOOL finishedLaunching; 
@property (nonatomic,readonly) FBApplicationInfo * applicationInfo;                                                //@synthesize applicationInfo=_applicationInfo - In the implementation block
@property (nonatomic,copy,readonly) FBProcessExecutionContext * executionContext;                                  //@synthesize executionContext=_executionContext - In the implementation block
@property (nonatomic,readonly) FBApplicationProcessExitContext * exitContext; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)launchIfNecessary;
-(id)_watchdogProvider;
-(id)initWithBundleID:(id)arg1 pid:(int)arg2 callOutQueue:(id)arg3 ;
-(void)setPendingExit:(BOOL)arg1 ;
-(void)killForReason:(long long)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)isSystemApplicationProcess;
-(BOOL)isPendingExit;
-(id)_createWorkspace;
-(id)_queue_name;
-(void)_queue_setTaskState:(int)arg1 ;
-(void)_queue_setVisibility:(int)arg1 ;
-(void)_queue_callExitObservers;
-(void)_queue_processDidExit;
-(BOOL)isApplicationProcess;
-(void)_watchdogStarted:(id)arg1 ;
-(void)_watchdogStopped:(id)arg1 ;
-(BOOL)_watchdog:(id)arg1 shouldTerminateWithDeclineReason:(out id*)arg2 ;
-(id)_watchdog:(id)arg1 terminationRequestForViolatedProvision:(id)arg2 error:(id)arg3 ;
-(void)_terminateWithRequest:(id)arg1 forWatchdog:(id)arg2 ;
-(id)_queue_newWatchdogForContext:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_queue_noteSceneCreationAcknowledged:(id)arg1 ;
-(FBApplicationInfo *)applicationInfo;
-(void)_queue_sceneNeedsGracefulExit:(id)arg1 withDeliveryConfirmation:(/*^block*/id)arg2 ;
-(unsigned long long)_queue_activationInfoForEvent:(int)arg1 withToken:(unsigned long long)arg2 didWatchdog:(BOOL)arg3 ;
-(id)_queue_cpuStatistics;
-(double)_queue_execTime;
-(long long)_queue_terminationReason;
-(void)_queue_launchIfNecessary;
-(void)_queue_executeBlockAfterLaunchCompletes:(/*^block*/id)arg1 ;
-(id)initWithApplicationInfo:(id)arg1 handle:(id)arg2 callOutQueue:(id)arg3 ;
-(void)_queue_killForReason:(long long)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_queue_enumerateApplicationObserversWithBlock:(/*^block*/id)arg1 ;
-(BOOL)_queue_bootstrapAndExecWithContext:(id)arg1 ;
-(void)_queue_invalidateBKSProcess;
-(void)setRecordingAudio:(BOOL)arg1 ;
-(void)setNowPlayingWithAudio:(BOOL)arg1 ;
-(void)_queue_finishLaunch;
-(unsigned long long)_queue_noteExitedForForceQuit:(BOOL)arg1 ;
-(void)_queue_cancelWatchdogTimer;
-(void)_queue_dropContinuousProcessAssertion;
-(void)_queue_dropLaunchProcessAssertion;
-(void)_queue_dropViewServiceAssertion;
-(void)_queue_executeLaunchCompletionBlocks;
-(void)_queue_executeTerminateRequestCompletionBlocksIfNecessaryForSucccess:(BOOL)arg1 ;
-(void)_queue_doGracefulKillWithDeliveryConfirmation:(/*^block*/id)arg1 ;
-(void)_queue_addAllowedLockedFilePath:(id)arg1 ;
-(BOOL)_queue_isPlatformExecutable;
-(void)_queue_addAllowedLockedPaths;
-(id)_queue_internalDebugEnvironmentVariables;
-(void)_queue_takeLaunchProcessAssertion;
-(void)_queue_startWatchdogTimerForContext:(id)arg1 ;
-(long long)_queue_bksVisibilityForVisibility:(int)arg1 ;
-(id)_queue_lockedFilePathsIgnoringAllowed;
-(void)_queue_terminateWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)_queue_isAllowedLockedFilePath:(id)arg1 standardizedPath:(out id*)arg2 ;
-(id)_queue_composeContextWithValue:(id)arg1 key:(id)arg2 ;
-(id)_queue_crashReportThermalsInfo;
-(void)_queue_killWithSignal:(int)arg1 ;
-(void)_queue_executeKillForRequest:(id)arg1 ;
-(long long)_exceptionCodeForKillReason:(int)arg1 ;
-(BOOL)isBeingDebugged;
-(int)_queue_ourTaskStateForBKSTaskState:(long long)arg1 ;
-(id)_workspaceServer;
-(void)setBeingDebugged:(BOOL)arg1 ;
-(BOOL)_queue_shouldWatchdogWithDeclineReason:(id*)arg1 ;
-(long long)_watchdogReportType;
-(void)process:(id)arg1 taskStateDidChange:(long long)arg2 ;
-(void)processWillExpire:(id)arg1 ;
-(void)process:(id)arg1 isBeingDebugged:(BOOL)arg2 ;
-(void)process:(id)arg1 didExitWithContext:(id)arg2 ;
-(id)initWithApplicationInfo:(id)arg1 callOutQueue:(id)arg2 ;
-(FBApplicationProcessExitContext *)exitContext;
-(void)killForReason:(long long)arg1 andReport:(BOOL)arg2 withDescription:(id)arg3 ;
-(BOOL)finishedLaunching;
-(double)elapsedCPUTime;
-(id)GSEventPort;
-(BOOL)bootstrapWithContext:(id)arg1 ;
-(void)setConnectedToExternalAccessory:(BOOL)arg1 ;
-(void)executeBlockAfterLaunchCompletes:(/*^block*/id)arg1 ;
-(BOOL)isRecordingAudio;
-(BOOL)isNowPlayingWithAudio;
-(BOOL)isConnectedToExternalAccessory;
-(id)_applicationWorkspace;
-(void)dealloc;
-(void)stop;
-(id)_workspace;
-(FBProcessExecutionContext *)executionContext;
@end

