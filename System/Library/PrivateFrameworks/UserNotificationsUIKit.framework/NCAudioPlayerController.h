/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:03 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol NCAudioPlayerControllerDelegate;
@class AVPlayer;

@interface NCAudioPlayerController : NSObject {

	BOOL _audioSessionActive;
	float _rate;
	id<NCAudioPlayerControllerDelegate> _delegate;
	AVPlayer* _player;
	long long _playbackState;
	long long _status;
	double _duration;
	long long _timeControlStatus;

}

@property (assign,getter=isAudioSessionActive,nonatomic) BOOL audioSessionActive;              //@synthesize audioSessionActive=_audioSessionActive - In the implementation block
@property (assign,nonatomic) double duration;                                                  //@synthesize duration=_duration - In the implementation block
@property (nonatomic,retain) AVPlayer * player;                                                //@synthesize player=_player - In the implementation block
@property (assign,nonatomic) long long timeControlStatus;                                      //@synthesize timeControlStatus=_timeControlStatus - In the implementation block
@property (assign,nonatomic) float rate;                                                       //@synthesize rate=_rate - In the implementation block
@property (assign,nonatomic) long long status;                                                 //@synthesize status=_status - In the implementation block
@property (assign,nonatomic,__weak) id<NCAudioPlayerControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) float currentTime; 
@property (nonatomic,readonly) long long playbackState;                                        //@synthesize playbackState=_playbackState - In the implementation block
-(long long)timeControlStatus;
-(id)initWithPlayer:(id)arg1 ;
-(AVPlayer *)player;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(void)seekToTime:(float)arg1 ;
-(long long)playbackState;
-(void)setPlaybackState:(long long)arg1 ;
-(void)handlePlayerItemDidPlayToEndTimeNotification:(id)arg1 ;
-(void)handlePlayerItemFailedToPlayToEndTimeNotification:(id)arg1 ;
-(void)deactivateAudioSession;
-(BOOL)isAudioSessionActive;
-(void)activateAudioSession;
-(void)setTimeControlStatus:(long long)arg1 ;
-(void)handleAudioSessionInterruptionNotification:(id)arg1 ;
-(void)handleAudioSessionRouteChangeNotification:(id)arg1 ;
-(void)handleAudioSessionMediaServicesWereLostNotification:(id)arg1 ;
-(void)handleAudioSessionMediaServicesWereResetNotification:(id)arg1 ;
-(void)setAudioSessionActive:(BOOL)arg1 ;
-(BOOL)shouldEnableProximityMonitoring;
-(BOOL)updateProximityMonitoring;
-(void)dealloc;
-(void)setDelegate:(id<NCAudioPlayerControllerDelegate>)arg1 ;
-(id<NCAudioPlayerControllerDelegate>)delegate;
-(void)setDuration:(double)arg1 ;
-(void)stop;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(double)duration;
-(id)initWithURL:(id)arg1 ;
-(float)currentTime;
-(void)play;
-(void)setRate:(float)arg1 ;
-(float)rate;
-(long long)status;
-(void)setStatus:(long long)arg1 ;
-(void)pause;
@end

