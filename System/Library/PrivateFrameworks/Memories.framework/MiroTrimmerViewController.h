/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:15 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/Memories.framework/Memories
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Memories/Memories-Structs.h>
#import <UIKitCore/UIViewController.h>
#import <UIKit/UIMovieScrubberDelegate.h>
#import <UIKit/UIMovieScrubberDataSource.h>
#import <libobjc.A.dylib/MiroTrimmer.h>

@protocol MiroTrimmerDelegate, MiroClip;
@class AVPlayer, NSObject, AVPlayerItem, UIView, UIMovieScrubber, MiroTrimmerDebugView, MiroScrubberImageSource, NSString;

@interface MiroTrimmerViewController : UIViewController <UIMovieScrubberDelegate, UIMovieScrubberDataSource, MiroTrimmer> {

	struct {
		BOOL respondsToWillStartTrimmingClip;
		BOOL respondsToShouldContinueTrimmingClip_startTime_endTime;
		BOOL respondsToDidContinueTrimmingClip_startTime_endTime;
		BOOL respondsToDidEndTrimmingClip_startTime_endTime;
	}  _delegateFlags;
	BOOL _showsDebugMetadataOverlay;
	BOOL _scrubbing;
	BOOL _playerBusySeeking;
	int _projectFrameRate;
	int _inUseScrubberHandle;
	id<MiroTrimmerDelegate> _delegate;
	id<MiroClip> _clip;
	AVPlayer* _player;
	NSObject* _playerPeriodicTimeObserver;
	NSObject* _trimBoundaryTimeObserver;
	AVPlayerItem* __playerItemForObserving;
	UIView* _scrubberView;
	UIMovieScrubber* _movieScrubber;
	MiroTrimmerDebugView* _debugOverlay;
	MiroScrubberImageSource* _thumbnailSource;
	NSString* _thumbnailSourceAssetID;
	double _videoDuration;
	double _deferredSeekTime;
	double _lastSeekWallClockTime;
	CGSize _videoSize;

}

@property (assign,nonatomic) int projectFrameRate;                                                                   //@synthesize projectFrameRate=_projectFrameRate - In the implementation block
@property (nonatomic,retain) id<MiroClip> clip;                                                                      //@synthesize clip=_clip - In the implementation block
@property (nonatomic,retain) AVPlayer * player;                                                                      //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) NSObject * playerPeriodicTimeObserver;                                                  //@synthesize playerPeriodicTimeObserver=_playerPeriodicTimeObserver - In the implementation block
@property (nonatomic,retain) NSObject * trimBoundaryTimeObserver;                                                    //@synthesize trimBoundaryTimeObserver=_trimBoundaryTimeObserver - In the implementation block
@property (setter=_setPlayerItemForObserving:,nonatomic,retain) AVPlayerItem * _playerItemForObserving;              //@synthesize _playerItemForObserving=__playerItemForObserving - In the implementation block
@property (nonatomic,retain) UIView * scrubberView;                                                                  //@synthesize scrubberView=_scrubberView - In the implementation block
@property (nonatomic,retain) UIMovieScrubber * movieScrubber;                                                        //@synthesize movieScrubber=_movieScrubber - In the implementation block
@property (nonatomic,retain) MiroTrimmerDebugView * debugOverlay;                                                    //@synthesize debugOverlay=_debugOverlay - In the implementation block
@property (nonatomic,retain) MiroScrubberImageSource * thumbnailSource;                                              //@synthesize thumbnailSource=_thumbnailSource - In the implementation block
@property (nonatomic,retain) NSString * thumbnailSourceAssetID;                                                      //@synthesize thumbnailSourceAssetID=_thumbnailSourceAssetID - In the implementation block
@property (assign,nonatomic) double videoDuration;                                                                   //@synthesize videoDuration=_videoDuration - In the implementation block
@property (assign,nonatomic) CGSize videoSize;                                                                       //@synthesize videoSize=_videoSize - In the implementation block
@property (assign,getter=isScrubbing,nonatomic) BOOL scrubbing;                                                      //@synthesize scrubbing=_scrubbing - In the implementation block
@property (assign,nonatomic) int inUseScrubberHandle;                                                                //@synthesize inUseScrubberHandle=_inUseScrubberHandle - In the implementation block
@property (assign,nonatomic) double deferredSeekTime;                                                                //@synthesize deferredSeekTime=_deferredSeekTime - In the implementation block
@property (assign,nonatomic) double lastSeekWallClockTime;                                                           //@synthesize lastSeekWallClockTime=_lastSeekWallClockTime - In the implementation block
@property (assign) BOOL playerBusySeeking;                                                                           //@synthesize playerBusySeeking=_playerBusySeeking - In the implementation block
@property (assign,nonatomic,__weak) id<MiroTrimmerDelegate> delegate;                                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL showsDebugMetadataOverlay;                                                         //@synthesize showsDebugMetadataOverlay=_showsDebugMetadataOverlay - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)isScrubbing;
-(AVPlayer *)player;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(BOOL)_playerIsPlaying;
-(void)setVideoSize:(CGSize)arg1 ;
-(CGSize)videoSize;
-(double)videoDuration;
-(void)setVideoDuration:(double)arg1 ;
-(void)setProjectFrameRate:(int)arg1 ;
-(void)_setPlayerItemForObserving:(id)arg1 ;
-(UIMovieScrubber *)movieScrubber;
-(int)projectFrameRate;
-(void)_createView;
-(void)_updateScrubberThumbVisibility;
-(NSString *)thumbnailSourceAssetID;
-(MiroScrubberImageSource *)thumbnailSource;
-(void)setThumbnailSource:(MiroScrubberImageSource *)arg1 ;
-(void)setThumbnailSourceAssetID:(NSString *)arg1 ;
-(NSObject *)playerPeriodicTimeObserver;
-(void)setPlayerPeriodicTimeObserver:(NSObject *)arg1 ;
-(NSObject *)trimBoundaryTimeObserver;
-(void)setTrimBoundaryTimeObserver:(NSObject *)arg1 ;
-(void)_seekToTime:(double)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_playerItemDidReachEnd:(id)arg1 ;
-(MiroTrimmerDebugView *)debugOverlay;
-(void)_deferredSeek;
-(double)deferredSeekTime;
-(double)lastSeekWallClockTime;
-(BOOL)playerBusySeeking;
-(void)setPlayerBusySeeking:(BOOL)arg1 ;
-(void)setDeferredSeekTime:(double)arg1 ;
-(void)setLastSeekWallClockTime:(double)arg1 ;
-(void)_deferredSeekToTime:(double)arg1 ;
-(void)_updateScrubberTime;
-(void)_seekPlayerToBeginning;
-(void)setScrubberView:(UIView *)arg1 ;
-(void)setMovieScrubber:(UIMovieScrubber *)arg1 ;
-(void)setDebugOverlay:(MiroTrimmerDebugView *)arg1 ;
-(void)_updateDebugOverlay;
-(UIView *)scrubberView;
-(BOOL)showsDebugMetadataOverlay;
-(void)setScrubbing:(BOOL)arg1 ;
-(void)setClip:(id<MiroClip>)arg1 ;
-(void)updateDebugMetadataOverlay;
-(void)setShowsDebugMetadataOverlay:(BOOL)arg1 ;
-(AVPlayerItem *)_playerItemForObserving;
-(int)inUseScrubberHandle;
-(void)setInUseScrubberHandle:(int)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id<MiroTrimmerDelegate>)arg1 ;
-(id<MiroTrimmerDelegate>)delegate;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewDidLoad;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_commonInit;
-(void)_invalidate;
-(void)didReceiveMemoryWarning;
-(id<MiroClip>)clip;
-(void)movieScrubber:(id)arg1 valueDidChange:(double)arg2 ;
-(void)movieScrubber:(id)arg1 editingStartValueDidChange:(double)arg2 ;
-(void)movieScrubber:(id)arg1 editingEndValueDidChange:(double)arg2 ;
-(void)movieScrubberDidFinishRequestingThumbnails:(id)arg1 ;
-(void)movieScrubberDidBeginAnimatingZoom:(id)arg1 ;
-(void)movieScrubberDidEndAnimatingZoom:(id)arg1 ;
-(void)movieScrubber:(id)arg1 willZoomToMinimumValue:(double)arg2 maximumValue:(double)arg3 ;
-(double)movieScrubberDuration:(id)arg1 ;
-(void)movieScrubberDidBeginScrubbing:(id)arg1 withHandle:(int)arg2 ;
-(void)movieScrubberDidEndScrubbing:(id)arg1 withHandle:(int)arg2 ;
-(id)movieScrubber:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4 ;
-(void)movieScrubber:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2 ;
-(double)movieScrubberThumbnailAspectRatio:(id)arg1 ;
@end

