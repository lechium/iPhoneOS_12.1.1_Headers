/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:49:23 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHAP/CoreHAP-Structs.h>
#import <HMFoundation/HMFObject.h>

@protocol HAPSecuritySessionDelegate, OS_dispatch_queue;
@class NSData, NSObject, HAPSecuritySessionEncryption;

@interface HAPSecuritySession : HMFObject {

	unsigned long long _state;
	NSData* _broadcastKey;
	id<HAPSecuritySessionDelegate> _delegate;
	unsigned long long _role;
	unsigned long long _resumeSessionID;
	NSObject*<OS_dispatch_queue> _clientQueue;
	NSObject*<OS_dispatch_queue> _propertyQueue;
	PairingSessionPrivateRef _pairingSession;
	HAPSecuritySessionEncryption* _encryption;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> clientQueue;                //@synthesize clientQueue=_clientQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> propertyQueue;              //@synthesize propertyQueue=_propertyQueue - In the implementation block
@property (assign) unsigned long long state;                                            //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) PairingSessionPrivateRef pairingSession;                   //@synthesize pairingSession=_pairingSession - In the implementation block
@property (nonatomic,retain) HAPSecuritySessionEncryption * encryption;                 //@synthesize encryption=_encryption - In the implementation block
@property (nonatomic,retain) NSData * broadcastKey;                                     //@synthesize broadcastKey=_broadcastKey - In the implementation block
@property (__weak,readonly) id<HAPSecuritySessionDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) unsigned long long role;                                 //@synthesize role=_role - In the implementation block
@property (getter=isOpen,readonly) BOOL open; 
@property (getter=isOpening,readonly) BOOL opening; 
@property (nonatomic,readonly) unsigned long long resumeSessionID;                      //@synthesize resumeSessionID=_resumeSessionID - In the implementation block
-(void)_handleSetupExchangeComplete;
-(void)setPairingSession:(PairingSessionPrivateRef)arg1 ;
-(PairingSessionPrivateRef)pairingSession;
-(NSObject*<OS_dispatch_queue>)propertyQueue;
-(id)initWithRole:(unsigned long long)arg1 resumeSessionID:(unsigned long long)arg2 delegate:(id)arg3 ;
-(void)receivedSetupExchangeData:(id)arg1 error:(id)arg2 ;
-(id)encryptData:(id)arg1 additionalAuthenticatedData:(id)arg2 error:(id*)arg3 ;
-(id)decryptData:(id)arg1 additionalAuthenticatedData:(id)arg2 error:(id*)arg3 ;
-(BOOL)_initializeSetupSession:(unsigned long long)arg1 ;
-(void)setEncryption:(HAPSecuritySessionEncryption *)arg1 ;
-(void)setResumeSessionID:(unsigned long long)arg1 ;
-(void)_notifyOpening;
-(void)_processSetupExchangeData:(id)arg1 error:(id)arg2 ;
-(id)_inputInfo;
-(id)_outputInfo;
-(id)_broadcastInfo;
-(id)_handleLocalPairingIdentityRequestWithStatus:(int*)arg1 ;
-(void)_notifyOpened;
-(void)reallyOpen;
-(void)_initiateClientSessionSetupExchange;
-(HAPSecuritySessionEncryption *)encryption;
-(BOOL)isOpening;
-(id)_handlePeerPairingIdentityRequestWithIdentifier:(id)arg1 status:(int*)arg2 ;
-(id)getBroadcastEncryptionKey;
-(unsigned long long)resumeSessionID;
-(BOOL)isOpen;
-(void)closeWithError:(id)arg1 ;
-(unsigned long long)role;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(void)_closeWithError:(id)arg1 ;
-(NSData *)broadcastKey;
-(void)setBroadcastKey:(NSData *)arg1 ;
-(void)dealloc;
-(id)description;
-(id)debugDescription;
-(unsigned long long)state;
-(id<HAPSecuritySessionDelegate>)delegate;
-(void)setState:(unsigned long long)arg1 ;
-(void)_invalidate;
-(BOOL)open;
-(void)close;
@end

