/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:50:43 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudKitDaemon/CloudKitDaemon-Structs.h>
#import <libobjc.A.dylib/CKDProtocolTranslatorIdentityDelegate.h>

@protocol NSObject, OS_dispatch_source, OS_dispatch_queue;
@class CKDClientContext, NSOperationQueue, NSString, NSMutableDictionary, NSDate, NSData, NSObject;

@interface CKDPCSManager : NSObject <CKDProtocolTranslatorIdentityDelegate> {

	CKDClientContext* _context;
	NSOperationQueue* _notificationQueue;
	NSString* _currentAccountIdentifier;
	NSMutableDictionary* _PCSIdentityWrappersByServiceName;
	NSDate* _lastMissingManateeIdentityErrorDateForCurrentService;
	PCSIdentityDataRef _debugIdentity;
	NSString* _serviceName;
	NSMutableDictionary* _missingIdentityPublicKeysByServiceName;
	NSMutableDictionary* _undecryptableZonePCSHashesByServiceName;
	NSData* _boundaryKeyData;
	NSString* _liverpoolPublicKey;
	id<NSObject> _contextObserver;
	NSObject*<OS_dispatch_source> _pcsUpdateSource;
	NSObject*<OS_dispatch_queue> _synchronizeQueue;
	NSMutableDictionary* _fakeIdentitySetsByServiceByUsername;

}

@property (nonatomic,retain) NSOperationQueue * notificationQueue;                                       //@synthesize notificationQueue=_notificationQueue - In the implementation block
@property (retain) NSString * currentAccountIdentifier;                                                  //@synthesize currentAccountIdentifier=_currentAccountIdentifier - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * PCSIdentityWrappersByServiceName;                     //@synthesize PCSIdentityWrappersByServiceName=_PCSIdentityWrappersByServiceName - In the implementation block
@property (nonatomic,retain) NSDate * lastMissingManateeIdentityErrorDateForCurrentService;              //@synthesize lastMissingManateeIdentityErrorDateForCurrentService=_lastMissingManateeIdentityErrorDateForCurrentService - In the implementation block
@property (assign,nonatomic) PCSIdentityDataRef debugIdentity;                                           //@synthesize debugIdentity=_debugIdentity - In the implementation block
@property (nonatomic,retain) NSString * serviceName;                                                     //@synthesize serviceName=_serviceName - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * missingIdentityPublicKeysByServiceName;               //@synthesize missingIdentityPublicKeysByServiceName=_missingIdentityPublicKeysByServiceName - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * undecryptableZonePCSHashesByServiceName;              //@synthesize undecryptableZonePCSHashesByServiceName=_undecryptableZonePCSHashesByServiceName - In the implementation block
@property (nonatomic,retain) NSData * boundaryKeyData;                                                   //@synthesize boundaryKeyData=_boundaryKeyData - In the implementation block
@property (nonatomic,retain) NSString * liverpoolPublicKey;                                              //@synthesize liverpoolPublicKey=_liverpoolPublicKey - In the implementation block
@property (nonatomic,retain) id<NSObject> contextObserver;                                               //@synthesize contextObserver=_contextObserver - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> pcsUpdateSource;                              //@synthesize pcsUpdateSource=_pcsUpdateSource - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> synchronizeQueue;                              //@synthesize synchronizeQueue=_synchronizeQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * fakeIdentitySetsByServiceByUsername;                  //@synthesize fakeIdentitySetsByServiceByUsername=_fakeIdentitySetsByServiceByUsername - In the implementation block
@property (nonatomic,readonly) BOOL forceEnableReadOnlyManatee; 
@property (nonatomic,__weak,readonly) CKDClientContext * context;                                        //@synthesize context=_context - In the implementation block
@property (nonatomic,readonly) BOOL currentServiceIsManatee; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedFakeIdentitySetsByServiceByUsername;
+(PCSIdentitySetDataRef)_copyPCSIdentitiesForService:(id)arg1 forFakeAccount:(id)arg2 withError:(id*)arg3 ;
+(PCSIdentitySetDataRef)_getPCSIdentitiesForService:(id)arg1 forFakeAccount:(id)arg2 withError:(id*)arg3 ;
+(id)noMatchingIdentityErrorForPCSError:(CFErrorRef)arg1 withErrorCode:(long long)arg2 description:(id)arg3 ;
+(id)publicKeyIDFromIdentity:(OpaquePCSShareProtectionRef)arg1 ;
+(id)protectionIdentifierFromShareProtection:(OpaquePCSShareProtectionRef)arg1 ;
+(id)allProtectionIdentifiersFromShareProtection:(OpaquePCSShareProtectionRef)arg1 ;
-(id)initWithClientContext:(id)arg1 ;
-(id)pcsDataFromFetchedShare:(id)arg1 withPublicSharingKey:(id)arg2 withServiceType:(unsigned long long)arg3 error:(id*)arg4 ;
-(void)removePublicKeys:(id)arg1 fromPCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)wrapEncryptedData:(id)arg1 withPCS:(OpaquePCSShareProtectionRef)arg2 inContext:(id)arg3 ;
-(id)unwrapEncryptedData:(id)arg1 withPCS:(OpaquePCSShareProtectionRef)arg2 inContext:(id)arg3 ;
-(BOOL)forceEnableReadOnlyManatee;
-(void)preflightIdentitiesForService:(unsigned long long)arg1 withSyncKeyRegistryRetry:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(PCSIdentityDataRef)createRandomSharingIdentityWithError:(id*)arg1 ;
-(id)dataFromSharingIdentity:(PCSIdentityDataRef)arg1 error:(id*)arg2 ;
-(void)boundaryKeyDataWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)dataFromZonePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)dataFromRecordPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)etagFromPCSData:(id)arg1 ;
-(OpaquePCSShareProtectionRef)createZonePCSWithError:(id*)arg1 ;
-(OpaquePCSShareProtectionRef)createRecordPCSWithZonePCS:(OpaquePCSShareProtectionRef)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 createLite:(BOOL)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createZonePCSFromData:(id)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 error:(id*)arg3 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 zonePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(void)createZonePCSFromData:(id)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_serviceNameForContainerID:(id)arg1 ;
-(NSOperationQueue *)notificationQueue;
-(NSString *)currentAccountIdentifier;
-(void)setCurrentAccountIdentifier:(NSString *)arg1 ;
-(void)setPCSIdentityWrappersByServiceName:(NSMutableDictionary *)arg1 ;
-(void)setLiverpoolPublicKey:(NSString *)arg1 ;
-(void)setBoundaryKeyData:(NSData *)arg1 ;
-(NSMutableDictionary *)missingIdentityPublicKeysByServiceName;
-(NSMutableDictionary *)undecryptableZonePCSHashesByServiceName;
-(PCSIdentitySetDataRef)_copyIdentityForService:(id)arg1 useCache:(BOOL)arg2 withError:(id*)arg3 ;
-(void)setContextObserver:(id<NSObject>)arg1 ;
-(NSObject*<OS_dispatch_source>)pcsUpdateSource;
-(void)_onSynchronizeQueue:(/*^block*/id)arg1 ;
-(PCSIdentitySetDataRef)_getPCSIdentitiesForService:(id)arg1 forFakeAccount:(id)arg2 withError:(id*)arg3 ;
-(NSMutableDictionary *)fakeIdentitySetsByServiceByUsername;
-(id)_internalServicesToCombineWithLiverpoolKey;
-(id)_addIdentitiesFromServiceNamed:(id)arg1 toMutableSet:(PCSIdentitySetDataRef)arg2 ;
-(PCSIdentitySetDataRef)_createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:(id)arg1 error:(id*)arg2 ;
-(BOOL)_hasCurrentKeyForService:(id)arg1 inIdentitySet:(PCSIdentitySetDataRef)arg2 withError:(id*)arg3 ;
-(NSMutableDictionary *)PCSIdentityWrappersByServiceName;
-(PCSIdentitySetDataRef)_reallyCopyIdentityForService:(id)arg1 withValidation:(BOOL)arg2 error:(id*)arg3 ;
-(id)_PCSServiceStringFromCKServiceType:(unsigned long long)arg1 ;
-(PCSIdentitySetDataRef)_copyServiceIdentityWithType:(unsigned long long)arg1 withError:(id*)arg2 ;
-(id)_copyPublicKeyDataForIdentitySet:(PCSIdentitySetDataRef)arg1 withService:(unsigned long long)arg2 withError:(id*)arg3 ;
-(PCSPublicIdentityDataRef)copyDiversifiedIdentityForService:(unsigned long long)arg1 withError:(id*)arg2 ;
-(PCSIdentityDataRef)createCombinedIdentityWithOutOfNetworkPrivateKey:(id)arg1 publicSharingIdentity:(id)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 sharingIdentity:(PCSIdentityDataRef)arg2 error:(id*)arg3 ;
-(id)copyDiversifiedPublicKeyForService:(unsigned long long)arg1 withError:(id*)arg2 ;
-(PCSPublicIdentityDataRef)createPublicSharingIdentityFromPublicKey:(id)arg1 error:(id*)arg2 ;
-(id)addPublicIdentity:(PCSPublicIdentityDataRef)arg1 toSharePCS:(OpaquePCSShareProtectionRef)arg2 permission:(unsigned long long)arg3 ;
-(id)removeSharingIdentity:(PCSIdentityDataRef)arg1 fromSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)dataFromSharePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 withService:(unsigned long long)arg2 error:(id*)arg3 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(PCSIdentitySetDataRef)_copyServiceIdentityWithType:(unsigned long long)arg1 useCache:(BOOL)arg2 withError:(id*)arg3 ;
-(id)_addIdentity:(PCSIdentitySetDataRef)arg1 withService:(unsigned long long)arg2 toPCS:(OpaquePCSShareProtectionRef)arg3 ;
-(BOOL)identitySet:(PCSIdentitySetDataRef)arg1 containsPublicKey:(id)arg2 error:(id*)arg3 ;
-(NSObject*<OS_dispatch_queue>)synchronizeQueue;
-(BOOL)currentServiceIsManatee;
-(void)createZonePCSWithSyncKeyRegistryRetry:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)synchronizeUserKeyRegistryForServiceType:(unsigned long long)arg1 shouldThrottle:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_locked_createZonePCSWithSyncKeyRegistryRetry:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isPreviouslyUndecryptableZonePCS:(id)arg1 withManateeService:(id)arg2 ;
-(void)markMissingIdentitiesForService:(id)arg1 fromFailedDecryptError:(CFErrorRef)arg2 ;
-(void)_createZonePCSFromData:(id)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 withSyncKeyRegistryRetry:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)markUndecryptableZonePCS:(id)arg1 forManateeService:(id)arg2 ;
-(void)_locked_createZonePCSFromData:(id)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 withSyncKeyRegistryRetry:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_locked_preflightIdentitiesForService:(unsigned long long)arg1 withSyncKeyRegistryRetry:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(OpaquePCSShareProtectionRef)_copyShareProtectionFromExportedData:(id)arg1 identities:(PCSIdentitySetDataRef)arg2 error:(_CFError*)arg3 ;
-(BOOL)_isWhitelistedKeyRollingContainerIdentifier:(id)arg1 ;
-(NSString *)liverpoolPublicKey;
-(id)addIdentityForService:(unsigned long long)arg1 toPCS:(OpaquePCSShareProtectionRef)arg2 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 zonePCS:(OpaquePCSShareProtectionRef)arg2 logFailure:(BOOL)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 logFailure:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)addSharePCS:(OpaquePCSShareProtectionRef)arg1 toRecordPCS:(OpaquePCSShareProtectionRef)arg2 permission:(unsigned long long)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createEmptySharePCSWithError:(id*)arg1 ;
-(OpaquePCSShareProtectionRef)_addPublicIdentityForService:(unsigned long long)arg1 toSharePCS:(OpaquePCSShareProtectionRef)arg2 withError:(id*)arg3 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 sharingIdentity:(PCSIdentityDataRef)arg2 logFailure:(BOOL)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 withService:(unsigned long long)arg2 logFailure:(BOOL)arg3 error:(id*)arg4 ;
-(PCSIdentityDataRef)createSharingIdentityFromData:(id)arg1 error:(id*)arg2 ;
-(id)decryptPCSDataOnSharePCS:(id)arg1 withPublicSharingKey:(id)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 sharePrivateKey:(id)arg2 error:(id*)arg3 ;
-(id)addSharingIdentity:(PCSIdentityDataRef)arg1 toSharePCS:(OpaquePCSShareProtectionRef)arg2 permission:(unsigned long long)arg3 ;
-(id)removePublicIdentity:(PCSPublicIdentityDataRef)arg1 fromSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromEncryptedData:(id)arg1 error:(id*)arg2 ;
-(BOOL)containerSupportsEnhancedContext;
-(id)referenceIdentifierStringFromAssetKey:(id)arg1 ;
-(id)referenceSignatureFromAssetKey:(id)arg1 ;
-(id)unwrapEncryptedData:(id)arg1 withPCS:(OpaquePCSShareProtectionRef)arg2 withContextString:(id)arg3 ;
-(void)triggerAutoSysdiagnoseIfNecessaryForError:(id)arg1 encryptedData:(id)arg2 pcs:(OpaquePCSShareProtectionRef)arg3 ;
-(id)wrapEncryptedData:(id)arg1 withPCS:(OpaquePCSShareProtectionRef)arg2 withContextString:(id)arg3 ;
-(NSData *)boundaryKeyData;
-(void)_lockedBoundaryKeyDataWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)sharingFingerprintsContainPublicKeyWithData:(id)arg1 error:(id*)arg2 ;
-(PCSIdentityDataRef)debugSharingIdentity;
-(NSDate *)lastMissingManateeIdentityErrorDateForCurrentService;
-(id)copyPublicKeyForService:(unsigned long long)arg1 withError:(id*)arg2 ;
-(id)createProtectionInfoFromOONPrivateKey:(id)arg1 privateToken:(id)arg2 OONProtectionInfo:(id)arg3 error:(id*)arg4 ;
-(BOOL)canDecryptInvitedProtectionData:(id)arg1 participantProtectionInfo:(id)arg2 serviceType:(unsigned long long)arg3 error:(id*)arg4 ;
-(void)createZonePCSWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)preflightIdentitiesForService:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)etagFromZonePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)repairZonePCSData:(id)arg1 error:(id*)arg2 ;
-(BOOL)zonePCSNeedsKeyRolled:(OpaquePCSShareProtectionRef)arg1 ;
-(BOOL)zonePCSNeedsUpdate:(OpaquePCSShareProtectionRef)arg1 ;
-(id)updateServiceIdentityOnZonePCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)rollMasterKeyForRecordPCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)updateZoneIdentityForPCS:(OpaquePCSShareProtectionRef)arg1 usingZonePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)updateIdentityAndRollKeyForZonePCS:(OpaquePCSShareProtectionRef)arg1 usingServiceIdentityWithType:(unsigned long long)arg2 ;
-(OpaquePCSShareProtectionRef)createRecordPCSWithEncryptedZonePCS:(CFDataRef)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 createLite:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)addSharePCS:(OpaquePCSShareProtectionRef)arg1 toRecordPCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(BOOL)removeSharePCS:(OpaquePCSShareProtectionRef)arg1 fromRecordPCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(id)etagFromRecordPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSForService:(unsigned long long)arg1 withError:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePublicPCSWithIdentity:(PCSIdentityDataRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createChainPCSWithError:(id*)arg1 ;
-(id)decryptPCSDataOnSharePCS:(id)arg1 ;
-(id)pcsDataFromFetchedShare:(id)arg1 withServiceType:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)etagFromSharePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)addIdentityBackToPCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)removeEncryptedPCS:(id)arg1 fromSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)removePublicKeyID:(id)arg1 fromPCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)sharingIdentityDataFromPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)decryptChainPCSForRecordPCS:(id)arg1 ;
-(id)unwrapAssetKey:(id)arg1 withRecordPCS:(OpaquePCSShareProtectionRef)arg2 inContext:(id)arg3 withError:(id*)arg4 ;
-(id)wrapAssetKey:(id)arg1 withRecordPCS:(OpaquePCSShareProtectionRef)arg2 inContext:(id)arg3 withError:(id*)arg4 ;
-(id)newAssetKeyWithType:(unsigned long long)arg1 withError:(id*)arg2 ;
-(void)setNotificationQueue:(NSOperationQueue *)arg1 ;
-(void)setLastMissingManateeIdentityErrorDateForCurrentService:(NSDate *)arg1 ;
-(PCSIdentityDataRef)debugIdentity;
-(void)setDebugIdentity:(PCSIdentityDataRef)arg1 ;
-(void)setMissingIdentityPublicKeysByServiceName:(NSMutableDictionary *)arg1 ;
-(void)setUndecryptableZonePCSHashesByServiceName:(NSMutableDictionary *)arg1 ;
-(id<NSObject>)contextObserver;
-(void)setPcsUpdateSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setSynchronizeQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setFakeIdentitySetsByServiceByUsername:(NSMutableDictionary *)arg1 ;
-(void)setServiceName:(NSString *)arg1 ;
-(void)dealloc;
-(CKDClientContext *)context;
-(NSString *)serviceName;
@end

