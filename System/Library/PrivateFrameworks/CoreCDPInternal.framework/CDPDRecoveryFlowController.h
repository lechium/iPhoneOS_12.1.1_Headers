/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:47:06 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CDPDDeviceSecretValidatorDelegate.h>

@protocol CDPRemoteDeviceSecretValidatorProtocol, OS_os_activity, CDPStateUIProviderInternal;
@class NSObject, CDPDRecoveryFlowContext, CDPDCircleController, CDPDSecureBackupController, NSString;

@interface CDPDRecoveryFlowController : NSObject <CDPDDeviceSecretValidatorDelegate> {

	id<CDPRemoteDeviceSecretValidatorProtocol> _validator;
	NSObject*<OS_os_activity> _recoveryFlow;
	CDPDRecoveryFlowContext* _recoveryContext;
	CDPDCircleController* _circleController;
	CDPDSecureBackupController* _secureBackupController;
	id<CDPStateUIProviderInternal> _uiProvider;

}

@property (nonatomic,retain) CDPDRecoveryFlowContext * recoveryContext;                         //@synthesize recoveryContext=_recoveryContext - In the implementation block
@property (nonatomic,retain) CDPDCircleController * circleController;                           //@synthesize circleController=_circleController - In the implementation block
@property (nonatomic,retain) CDPDSecureBackupController * secureBackupController;               //@synthesize secureBackupController=_secureBackupController - In the implementation block
@property (nonatomic,retain) id<CDPStateUIProviderInternal> uiProvider;                         //@synthesize uiProvider=_uiProvider - In the implementation block
@property (nonatomic,retain) id<CDPRemoteDeviceSecretValidatorProtocol> validator;              //@synthesize validator=_validator - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<CDPRemoteDeviceSecretValidatorProtocol>)validator;
-(void)setValidator:(id<CDPRemoteDeviceSecretValidatorProtocol>)arg1 ;
-(void)setUiProvider:(id<CDPStateUIProviderInternal>)arg1 ;
-(id)recoveryValidatorWithDevices:(id)arg1 forMultipleICSC:(BOOL)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)beginInteractiveRecoveryForDevices:(id)arg1 isUsingMultipleICSC:(BOOL)arg2 usingValidator:(id)arg3 ;
-(void)retrieveInflatedDevices:(/*^block*/id)arg1 ;
-(void)secretValidator:(id)arg1 recoverSecureBackupWithContext:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)secretValidator:(id)arg1 shouldContinueValidationAfterError:(id)arg2 ;
-(id)initWithContext:(id)arg1 uiProvider:(id)arg2 secureBackupController:(id)arg3 circleProxy:(id)arg4 ;
-(void)beginRecovery:(/*^block*/id)arg1 ;
-(CDPDRecoveryFlowContext *)recoveryContext;
-(void)setRecoveryContext:(CDPDRecoveryFlowContext *)arg1 ;
-(CDPDCircleController *)circleController;
-(void)setCircleController:(CDPDCircleController *)arg1 ;
-(CDPDSecureBackupController *)secureBackupController;
-(void)setSecureBackupController:(CDPDSecureBackupController *)arg1 ;
-(id<CDPStateUIProviderInternal>)uiProvider;
-(void)dealloc;
@end

