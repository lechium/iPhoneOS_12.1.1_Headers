/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:50:39 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/CellularBridgeUI.framework/CellularBridgeUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NPHSIMChoiceViewControllerDelegate.h>

@class CoreTelephonyClient, CTXPCServiceSubscriptionInfo, NSMutableDictionary, NSArray, NSMutableSet, UIViewController, NSString;

@interface NPHCellularBridgeUIManager : NSObject <NPHSIMChoiceViewControllerDelegate> {

	CoreTelephonyClient* _coreTelephonyClient;
	CTXPCServiceSubscriptionInfo* _serviceSubscriptionInfo;
	NSMutableDictionary* _serviceSubscriptionInfoList;
	NSArray* _proxyPlanItems;
	long long _outstandingPlanFlowsIdentified;
	NSMutableSet* _outstandingRemotePlanItemsRequestedForCSN;
	UIViewController* _hostViewController;
	/*^block*/id _hostCompletionBlock;
	BOOL LTEMayImpactService;
	BOOL _shouldOfferSignupCompletion;

}

@property (nonatomic,readonly) BOOL cellularPlanIsSetUp; 
@property (nonatomic,readonly) NSArray * serviceSubscriptionsInUse; 
@property (nonatomic,readonly) NSArray * serviceSubscriptionsToOfferUser; 
@property (nonatomic,readonly) NSArray * serviceSubscriptionsShouldShowAddNewRemotePlan; 
@property (nonatomic,readonly) NSArray * serviceSubscriptionsOfferingRemotePlan; 
@property (nonatomic,readonly) NSArray * serviceSubscriptionsOfferingTrialPlan; 
@property (nonatomic,readonly) BOOL shouldShowAddNewRemotePlan; 
@property (nonatomic,readonly) BOOL shouldOfferRemotePlan; 
@property (nonatomic,readonly) BOOL shouldOfferTrialPlan; 
@property (nonatomic,readonly) BOOL LTEMayImpactService; 
@property (nonatomic,readonly) BOOL shouldOfferSignupCompletion;                                      //@synthesize shouldOfferSignupCompletion=_shouldOfferSignupCompletion - In the implementation block
@property (nonatomic,readonly) NSString * trialPlanType; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)carrierName;
+(void)presentCellularError:(id)arg1 onViewController:(id)arg2 ;
+(BOOL)_isSubscriptionInUse:(id)arg1 ;
+(void)_presentAirplaneModeOnAlertOnViewController:(id)arg1 ;
+(void)_presentCellularRequiredModeAlertOnViewController:(id)arg1 ;
+(void)_presentErrorTitled:(id)arg1 withMessage:(id)arg2 onViewController:(id)arg3 ;
+(void)_presentErrorTitle:(id)arg1 onViewController:(id)arg2 withActionTitle:(id)arg3 actionHandler:(/*^block*/id)arg4 ;
+(id)carrierPhoneNumber;
+(id)sharedInstance;
-(void)subscriptionInfoDidChange;
-(void)activeSubscriptionsDidChange;
-(void)simStatusDidChange:(id)arg1 status:(id)arg2 ;
-(id)_currentDeviceCSN;
-(id)carrierNameForSubscription:(id)arg1 ;
-(BOOL)shouldShowAddNewRemotePlan;
-(BOOL)shouldOfferRemotePlan;
-(BOOL)shouldOfferTrialPlan;
-(BOOL)shouldOfferSignupCompletion;
-(NSString *)trialPlanType;
-(void)_ctCellularPlanInfoDidChange:(id)arg1 ;
-(void)_localPlanInfoDidChange:(id)arg1 ;
-(void)_ctCellularRemoteProvisioningDidBecomeAvailable:(id)arg1 ;
-(void)_updateCoreTelephonyClientInfo;
-(void)_updateSIMStatusForSubscriptionContext:(id)arg1 withStatus:(id)arg2 ;
-(id)_serviceSubscriptionInfoForSubscriptionContext:(id)arg1 ;
-(void)_updateServiceSubscriptionInfo:(id)arg1 ;
-(void)_prePromptForUserConsentIfNecessary:(/*^block*/id)arg1 ;
-(void)setUpCellularPlanOnViewController:(id)arg1 withContext:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(NSArray *)serviceSubscriptionsInUse;
-(void)_promptUserToPickSubscriptionContextOnViewController:(id)arg1 ;
-(BOOL)allCompanionSIMsMissing;
-(BOOL)_isCarrierSetupFlowUnsupportedForServiceSubscription:(id)arg1 ;
-(void)_setUpCellularPlanDirectWithContext:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_setUpCellularPlanWithActivationCodeOnViewController:(id)arg1 withContext:(id)arg2 withCompletion:(/*^block*/id)arg3 codelessActivationBlock:(/*^block*/id)arg4 ;
-(void)_prePromptUserForConsentTextType:(long long)arg1 relevantPlanItem:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)userConsentMessageForConsentType:(long long)arg1 relevantPlanItem:(id)arg2 ;
-(id)selectedCellularPlan;
-(id)_activeDeviceCSNList;
-(void)_updateCellularPlansWithFetch:(BOOL)arg1 forCSN:(id)arg2 ;
-(void)_updateShouldShowAddNewRemotePlan;
-(void)_updateIsRemotePlanCapable;
-(void)_updateShouldWarnAboutLTEMayImpactService;
-(BOOL)_isPersistentError:(id)arg1 ;
-(BOOL)_isSetupBlockingError:(id)arg1 ;
-(NSArray *)serviceSubscriptionsShouldShowAddNewRemotePlan;
-(NSArray *)serviceSubscriptionsOfferingRemotePlan;
-(NSArray *)serviceSubscriptionsOfferingTrialPlan;
-(void)updateCellularPlansWithFetch:(BOOL)arg1 ;
-(void)_updateSIMStatusForAllSubscriptionContexts;
-(BOOL)isGeminiSetup;
-(id)_trialPlanTypeForContext:(id)arg1 ;
-(NSArray *)serviceSubscriptionsToOfferUser;
-(BOOL)cellularPlanIsSetUp;
-(id)cellularUseErrors;
-(void)userTappedSetUp:(id)arg1 ;
-(void)userTappedCancel;
-(void)setUpCellularPlanOnViewController:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)cellularPlans;
-(long long)consentRequiredRelevantCellularPlanItem:(id*)arg1 ;
-(void)startRemoteProvisioning;
-(void)finishRemoteProvisioning;
-(id)displayNameForCellularPlan:(id)arg1 ;
-(BOOL)shouldAllowUserToAddOrSetUpPlan;
-(id)cellularUseError;
-(BOOL)isCarrierSetupFlowUnsupported;
-(BOOL)LTEMayImpactService;
-(id)init;
@end

