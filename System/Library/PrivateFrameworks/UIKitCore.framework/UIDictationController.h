/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:53:29 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKitCore/UIKitCore-Structs.h>
#import <UIKit/UIDictationConnectionDelegate.h>
#import <UIKit/UIDictationConnectionTokenFilterProtocol.h>
#import <UIKitCore/_UITouchPhaseChangeDelegate.h>

@class UIDictationConnection, UIDictationConnectionPreferences, NSTimer, UIAlertView, UIDictationStreamingOperations, NSString, CADisplayLink, _UIDictationTelephonyMonitor, NSMutableArray, UIWindow, _UIDictationPrivacySheetController, UIKeyboardInputMode;

@interface UIDictationController : NSObject <UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol, _UITouchPhaseChangeDelegate> {

	UIDictationConnection* _dictationConnection;
	UIDictationConnectionPreferences* _preferences;
	NSTimer* _recordingLimitTimer;
	UIAlertView* _dictationAvailableSoonAlert;
	BOOL _connectionWasAlreadyAliveForStatisticsLogging;
	UIDictationStreamingOperations* _streamingOperations;
	NSString* _language;
	BOOL _recievingResults;
	BOOL _streamingAnimationActive;
	double _lastAnimationUpdateTimeStamp;
	/*^block*/id _finalResultsOperation;
	CADisplayLink* _streamingAnimationDisplayLink;
	BOOL cancelledByWaitingForLocalResults;
	long long _updatingDocument;
	BOOL _deferredCancellationRequested;
	BOOL _ignoreFinalizePhrases;
	BOOL _isOfflineMetricsSessionActive;
	BOOL _didUseOfflineDictation;
	long long _lastOfflineDictationMetricEvent;
	_UIDictationTelephonyMonitor* _monitor;
	NSString* _prefixTextForStart;
	NSString* _selectionTextForStart;
	NSString* _postfixTextForStart;
	BOOL _performingStreamingEditingOperation;
	BOOL _discardNextHypothesis;
	BOOL _hasPreheated;
	BOOL _wantsAvailabilityMonitoringWhenAppActive;
	NSString* _activationIdentifier;
	NSMutableArray* _pendingEdits;
	NSString* _previousHypothesis;
	NSString* _lastHypothesis;
	NSString* _targetHypothesis;
	UIWindow* _dictationPresenterWindow;
	_UIDictationPrivacySheetController* _dictationPrivacySheetController;
	unsigned long long _reasonType;
	NSString* _lastRecognitionText;
	id _lastCorrectionIdentifier;
	UIKeyboardInputMode* _currentInputModeForDictation;
	UIKeyboardInputMode* _keyboardInputModeToReturn;
	NSRange _insertionRange;

}

@property (assign,nonatomic) BOOL wantsAvailabilityMonitoringWhenAppActive;                                     //@synthesize wantsAvailabilityMonitoringWhenAppActive=_wantsAvailabilityMonitoringWhenAppActive - In the implementation block
@property (nonatomic,copy) NSString * activationIdentifier;                                                     //@synthesize activationIdentifier=_activationIdentifier - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingEdits;                                                     //@synthesize pendingEdits=_pendingEdits - In the implementation block
@property (assign,nonatomic) BOOL performingStreamingEditingOperation;                                          //@synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation - In the implementation block
@property (nonatomic,copy) NSString * previousHypothesis;                                                       //@synthesize previousHypothesis=_previousHypothesis - In the implementation block
@property (nonatomic,copy) NSString * lastHypothesis;                                                           //@synthesize lastHypothesis=_lastHypothesis - In the implementation block
@property (nonatomic,copy) NSString * targetHypothesis;                                                         //@synthesize targetHypothesis=_targetHypothesis - In the implementation block
@property (assign,nonatomic) BOOL discardNextHypothesis;                                                        //@synthesize discardNextHypothesis=_discardNextHypothesis - In the implementation block
@property (assign,nonatomic) NSRange insertionRange;                                                            //@synthesize insertionRange=_insertionRange - In the implementation block
@property (assign,nonatomic) BOOL hasPreheated;                                                                 //@synthesize hasPreheated=_hasPreheated - In the implementation block
@property (nonatomic,retain) UIWindow * dictationPresenterWindow;                                               //@synthesize dictationPresenterWindow=_dictationPresenterWindow - In the implementation block
@property (nonatomic,retain) _UIDictationPrivacySheetController * dictationPrivacySheetController;              //@synthesize dictationPrivacySheetController=_dictationPrivacySheetController - In the implementation block
@property (assign,nonatomic) unsigned long long reasonType;                                                     //@synthesize reasonType=_reasonType - In the implementation block
@property (nonatomic,copy) NSString * lastRecognitionText;                                                      //@synthesize lastRecognitionText=_lastRecognitionText - In the implementation block
@property (nonatomic,copy) id lastCorrectionIdentifier;                                                         //@synthesize lastCorrectionIdentifier=_lastCorrectionIdentifier - In the implementation block
@property (nonatomic,retain) UIKeyboardInputMode * currentInputModeForDictation;                                //@synthesize currentInputModeForDictation=_currentInputModeForDictation - In the implementation block
@property (nonatomic,retain) UIKeyboardInputMode * keyboardInputModeToReturn;                                   //@synthesize keyboardInputModeToReturn=_keyboardInputModeToReturn - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(BOOL)isRunning;
+(id)activeInstance;
+(BOOL)fetchCurrentInputModeSupportsDictation;
+(int)viewMode;
+(void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2 ;
+(void)keyboardDidUpdateOnScreenStatus;
+(id)stringForState:(int)arg1 ;
+(BOOL)usingServerManualEndpointingThreshold;
+(double)serverManualEndpointingThreshold;
+(id)UIDictationStartStopReasonTypeDescription:(unsigned long long)arg1 ;
+(id)serializedInterpretationFromTokens:(id)arg1 transform:(CFStringRef)arg2 capitalization:(unsigned long long)arg3 ;
+(void)poppedLastStreamingOperation;
+(void)applicationDidBecomeActive;
+(void)applicationWillResignActive;
+(void)applicationDidEnterBackgroundNotification;
+(void)siriPreferencesChanged;
+(BOOL)dictationIsFunctional;
+(id)serializedInterpretationFromTokens:(id)arg1 transform:(CFStringRef)arg2 autocapitalization:(long long)arg3 capitalization:(unsigned long long)arg4 ;
+(id)serializedInterpretationFromTokens:(id)arg1 transform:(CFStringRef)arg2 ;
+(BOOL)checkTraitsSupportDictation:(id)arg1 ;
+(id)activeConnection;
+(void)logCorrectionStatisticsForDelegate:(id)arg1 ;
+(BOOL)isTextViewOnStarkScreen:(id)arg1 ;
+(BOOL)usingTypeAndTalk;
+(BOOL)starkScreenExists;
+(BOOL)_applicationIsActive;
+(id)streamingHypothesisForPhrases:(id)arg1 ;
+(void)updateLandingView;
+(void)didOneFingerTapInTextView:(id)arg1 ;
+(BOOL)shouldHideSelectionUIForTextView:(id)arg1 ;
+(BOOL)shouldHideCursorForTextView:(id)arg1 ;
+(BOOL)takesPressesBegan:(id)arg1 forTextView:(id)arg2 ;
+(BOOL)takesPressesChanged:(id)arg1 forTextView:(id)arg2 ;
+(BOOL)takesPressesEnded:(id)arg1 forTextView:(id)arg2 ;
+(BOOL)shouldDeleteBackwardInInputDelegate:(id)arg1 ;
+(BOOL)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2 ;
+(id)serializedDictationPhrases:(id)arg1 ;
+(id)bestInterpretationForDictationResult:(id)arg1 ;
+(id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(BOOL)arg3 autocapitalizationType:(long long)arg4 useServerCapitalization:(BOOL)arg5 ;
+(void)performOperations:(/*^block*/id)arg1 keyboardShifted:(BOOL)arg2 ;
+(BOOL)remoteCanDictateCurrentInputMode;
+(BOOL)dictationInfoIsOnScreen;
+(void)didBeginEditingInTextView:(id)arg1 ;
+(void)logDictationString:(id)arg1 ;
+(id)stringForViewMode:(int)arg1 ;
-(id)init;
-(void)dealloc;
-(int)state;
-(void)setState:(int)arg1 ;
-(BOOL)supportsInputMode:(id)arg1 error:(id*)arg2 ;
-(id)dictationConnection;
-(void)setReasonType:(unsigned long long)arg1 ;
-(void)switchToDictationInputMode;
-(void)stopDictation;
-(void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2 ;
-(UIKeyboardInputMode *)currentInputModeForDictation;
-(void)setCurrentInputModeForDictation:(UIKeyboardInputMode *)arg1 ;
-(void)switchToDictationLanguage:(id)arg1 ;
-(void)startDictation;
-(void)markKeyboardDidReset;
-(void)startHelpMessageDisplay;
-(void)stopHelpMessageDisplay;
-(BOOL)shouldPresentOptInAlert;
-(void)presentOptInAlertWithCompletion:(/*^block*/id)arg1 ;
-(void)setActivationIdentifier:(NSString *)arg1 ;
-(void)markKeyboardDeleteMetricEvent;
-(void)markKeyboardInputMetricEvent;
-(void)cancelDictation;
-(void)switchToDictationInputModeWithTouch:(id)arg1 ;
-(void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(BOOL)arg4 final:(BOOL)arg5 ;
-(NSString *)activationIdentifier;
-(void)dictationConnection:(id)arg1 updateOptions:(id)arg2 ;
-(void)dictationConnection:(id)arg1 didFailRecordingWithError:(id)arg2 ;
-(unsigned long long)reasonType;
-(NSString *)lastHypothesis;
-(void)dictationConnectionWillStartRecording:(id)arg1 ;
-(void)dictationConnectionDidStartRecording:(id)arg1 ;
-(void)dictationConnection:(id)arg1 didFailRecognitionWithError:(id)arg2 ;
-(void)dictationConnectionDidEndRecording:(id)arg1 ;
-(void)dictationConnectionDidCancel:(id)arg1 ;
-(CFStringRef)resultTransformForLanguageModel:(id)arg1 ;
-(id)dictationConnection:(id)arg1 willFilterTokensWithLanguageModel:(id)arg2 forFinalize:(BOOL)arg3 ;
-(BOOL)dictationConnection:(id)arg1 filterState:(id)arg2 shouldCheckpointAtToken:(id)arg3 ;
-(void)dictationConnection:(id)arg1 receivedInterpretation:(id)arg2 languageModel:(id)arg3 secureInput:(BOOL)arg4 ;
-(void)dictationConnection:(id)arg1 filterState:(id)arg2 processFilteredToken:(id)arg3 forFinalize:(BOOL)arg4 ;
-(void)dictationConnection:(id)arg1 didFilterTokensWithFilterState:(id)arg2 forFinalize:(BOOL)arg3 ;
-(void)dictationConnection:(id)arg1 finalizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 secureInput:(BOOL)arg5 ;
-(void)dictationConnectionDidFinish:(id)arg1 ;
-(void)dictationConnnectionDidChangeAvailability:(id)arg1 ;
-(void)setPerformingStreamingEditingOperation:(BOOL)arg1 ;
-(id)language;
-(BOOL)dictationEnabled;
-(BOOL)supportsDictationLanguage:(id)arg1 error:(id*)arg2 ;
-(BOOL)disabledDueToTelephonyActivity;
-(id)connectionForStatisticsLogging;
-(void)logDidAcceptDictationResult:(id)arg1 reasonType:(unsigned long long)arg2 ;
-(void)releaseConnectionAfterStatisticsLogging;
-(void)setKeyboardInputModeToReturn:(UIKeyboardInputMode *)arg1 ;
-(id)streamingOperations;
-(void)setWantsAvailabilityMonitoringWhenAppActive:(BOOL)arg1 ;
-(void)releaseConnection;
-(void)_endOfflineMetricsSession;
-(void)_beginOfflineMetricsSession;
-(BOOL)performingStreamingEditingOperation;
-(void)_restartDictation;
-(void)setDiscardNextHypothesis:(BOOL)arg1 ;
-(BOOL)_shouldDeleteBackwardInInputDelegate:(id)arg1 ;
-(BOOL)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2 ;
-(BOOL)wantsAvailabilityMonitoringWhenAppActive;
-(void)_endEnableDictationPromptAnimated:(BOOL)arg1 ;
-(id)fieldIdentifierInputDelegate:(id)arg1 ;
-(void)setupForDictationStart;
-(void)completeStartConnection;
-(void)_completeStartDictationWithContinuation:(/*^block*/id)arg1 ;
-(void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2 ;
-(id)prefixTextForInputDelegate:(id)arg1 ;
-(id)postfixTextForInputDelegate:(id)arg1 ;
-(id)selectedTextForInputDelegate:(id)arg1 ;
-(NSString *)targetHypothesis;
-(void)_updateFromSelectedTextRange:(id)arg1 withNewHypothesis:(id)arg2 ;
-(void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(void)_setFinalResultHandler:(/*^block*/id)arg1 ;
-(void)_runFinalizeOperation:(BOOL)arg1 ;
-(void)performIgnoringDocumentChanges:(/*^block*/id)arg1 ;
-(void)_stopStreamingAnimation;
-(void)setPendingEdits:(NSMutableArray *)arg1 ;
-(void)setLastHypothesis:(NSString *)arg1 ;
-(void)setTargetHypothesis:(NSString *)arg1 ;
-(void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2 ;
-(void)_runFinalizeOperation;
-(void)releaseConnectionAfterDictationRequest;
-(BOOL)isRecievingResults;
-(UIKeyboardInputMode *)keyboardInputModeToReturn;
-(void)_displaySecureContentsAsPlainText:(BOOL)arg1 afterDelay:(double)arg2 ;
-(void)clearTextFieldPlaceholder;
-(void)setDictationPresenterWindow:(UIWindow *)arg1 ;
-(void)setDictationPrivacySheetController:(_UIDictationPrivacySheetController *)arg1 ;
-(void)setLastCorrectionIdentifier:(id)arg1 ;
-(void)setLastRecognitionText:(NSString *)arg1 ;
-(void)cancelRecordingLimitTimer;
-(void)stopDictationByTimer;
-(void)setPreviousHypothesis:(NSString *)arg1 ;
-(void)setInsertionRange:(NSRange)arg1 ;
-(id)languageCodeForAssistantLanguageCode:(id)arg1 ;
-(void)setLanguage:(id)arg1 ;
-(void)startRecordingLimitTimer;
-(void)setupForStreamingDictationStart;
-(void)startConnection;
-(void)_startDictation;
-(void)_markOfflineDictationInputMetricEvent;
-(void)switchToDictationInputModeWithTouch:(id)arg1 withKeyboardInputMode:(id)arg2 ;
-(void)_beginEnableDictationPrompt;
-(void)setDictationInputMode:(id)arg1 ;
-(BOOL)_systemLanguageSupportsDictation;
-(UIWindow *)dictationPresenterWindow;
-(void)_presentOptInAlertForDictationInputMode;
-(_UIDictationPrivacySheetController *)dictationPrivacySheetController;
-(void)setDictationInfoOnScreenNotifyKey:(BOOL)arg1 ;
-(void)_presentOptInAlertWithCompletion:(/*^block*/id)arg1 ;
-(void)_presentPrivacySheetWithCompletion:(/*^block*/id)arg1 ;
-(void)_createDictationPresenterWindowIfNecessary;
-(BOOL)isIgnoringDocumentChanges;
-(id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2 ;
-(id)_rangeByExtendingRange:(id)arg1 backward:(long long)arg2 forward:(long long)arg3 inputDelegate:(id)arg4 ;
-(NSRange)_getRangeOfString:(id)arg1 inDocumentText:(id)arg2 ;
-(void)_setupHypothesisAsFinalResults;
-(void)_startStreamingAnimations;
-(void)stopDictation:(BOOL)arg1 ;
-(void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(BOOL)arg4 ;
-(void)_displayLinkFired:(id)arg1 ;
-(NSMutableArray *)pendingEdits;
-(NSString *)previousHypothesis;
-(id)_getBestHypothesisRangeGivenHintRange:(id)arg1 inputDelegate:(id)arg2 hypothesisRange:(NSRange*)arg3 documentTextInRange:(id*)arg4 ;
-(BOOL)discardNextHypothesis;
-(void)setupToInsertResultForNewHypothesis:(id)arg1 ;
-(void)_deleteBackwardIntoText;
-(void)_clearExistingText;
-(/*^block*/id)dictationBlockForToken:(id)arg1 ;
-(id)_containingSearchBarForView:(id)arg1 ;
-(BOOL)hasPreheated;
-(void)setHasPreheated:(BOOL)arg1 ;
-(id)_currentLanguageForOfflineDictationMetrics;
-(id)_assistantCompatibleLanguageCodeForInputMode:(id)arg1 ;
-(void)dictationConnectionDidCancelRecording:(id)arg1 ;
-(void)_touchPhaseChangedForTouch:(id)arg1 ;
-(float)audioLevel;
-(void)errorAnimationDidFinish;
-(void)dismissDictationView:(id)arg1 ;
-(void)cancelDictationForTextStoreChangesInResponder:(id)arg1 ;
-(void)stopDictationIgnoreFinalizePhrases;
-(BOOL)dictationIsModifyingText;
-(void)restartDictationForTypeAndTalk;
-(void)didShowAlternatives:(id)arg1 ;
-(void)logAlternativeSelected:(id)arg1 correctionIdentifier:(id)arg2 ;
-(id)resultWithTrailingSpace:(id)arg1 ;
-(void)preheatIfNecessary;
-(NSRange)insertionRange;
-(NSString *)lastRecognitionText;
-(id)lastCorrectionIdentifier;
@end

