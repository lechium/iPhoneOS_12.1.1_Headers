/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:39 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <UIKitCore/UIView.h>
#import <libobjc.A.dylib/PKInternalDrawingViewDelegate.h>
#import <libobjc.A.dylib/PKSelectionDelegate.h>
#import <libobjc.A.dylib/PKDrawableView.h>
#import <UIKit/UIDropInteractionDelegate.h>
#import <libobjc.A.dylib/PKToolPickerDelegate.h>

@protocol PKCanvasViewDelegate, PKSelectionDelegate;
@class UIImage, UIColor, PKRecognitionOverlayView, PKSelectionController, PKInternalDrawingView, CHVisualizationManager, UIGestureRecognizer, UIView, PKController, PKInk, PKDrawing, NSString;

@interface PKCanvasView : UIView <PKInternalDrawingViewDelegate, PKSelectionDelegate, PKDrawableView, UIDropInteractionDelegate, PKToolPickerDelegate> {

	BOOL _layerFixedPixelSize;
	BOOL __maintainsTransformsOnLayout;
	BOOL _visualizationsEnabled;
	double _fixedDrawingScale;
	id<PKCanvasViewDelegate> _delegate;
	UIImage* _backgroundImage;
	UIColor* _backgroundColor;
	PKRecognitionOverlayView* _overlayView;
	PKSelectionController* _selectionController;
	long long _aggd_cachedVisibleStrokeCount;
	PKInternalDrawingView* _drawingView;
	id<PKSelectionDelegate> _selectionViewDelegate;
	CGSize _fixedPixelSize;

}

@property (nonatomic,retain) PKRecognitionOverlayView * overlayView;                                                         //@synthesize overlayView=_overlayView - In the implementation block
@property (nonatomic,retain) PKSelectionController * selectionController;                                                    //@synthesize selectionController=_selectionController - In the implementation block
@property (assign,nonatomic) long long aggd_cachedVisibleStrokeCount;                                                        //@synthesize aggd_cachedVisibleStrokeCount=_aggd_cachedVisibleStrokeCount - In the implementation block
@property (nonatomic,readonly) CGSize _fixedPixelSize;                                                                       //@synthesize fixedPixelSize=_fixedPixelSize - In the implementation block
@property (nonatomic,readonly) double _fixedDrawingScale;                                                                    //@synthesize fixedDrawingScale=_fixedDrawingScale - In the implementation block
@property (nonatomic,readonly) BOOL _layerFixedPixelSize;                                                                    //@synthesize layerFixedPixelSize=_layerFixedPixelSize - In the implementation block
@property (assign,nonatomic) BOOL _maintainsTransformsOnLayout;                                                              //@synthesize _maintainsTransformsOnLayout=__maintainsTransformsOnLayout - In the implementation block
@property (nonatomic,readonly) BOOL isDrawing; 
@property (nonatomic,readonly) BOOL isRendering; 
@property (nonatomic,retain) PKInternalDrawingView * drawingView;                                                            //@synthesize drawingView=_drawingView - In the implementation block
@property (nonatomic,readonly) CHVisualizationManager * _recognitionVisualizationManager; 
@property (assign,nonatomic) BOOL disableWideGamut; 
@property (getter=_drawingGestureRecognizer,nonatomic,readonly) UIGestureRecognizer * drawingGestureRecognizer; 
@property (getter=_pinchGestureRecognizer,nonatomic,readonly) UIGestureRecognizer * pinchGestureRecognizer; 
@property (nonatomic,readonly) UIView * selectionView; 
@property (nonatomic,readonly) PKController * _drawingController; 
@property (nonatomic,readonly) id<PKRendererControllerProtocol> _rendererController; 
@property (assign,nonatomic) CGAffineTransform drawingTransform; 
@property (assign,nonatomic) CGAffineTransform strokeTransform; 
@property (assign,nonatomic) BOOL visualizationsEnabled;                                                                     //@synthesize visualizationsEnabled=_visualizationsEnabled - In the implementation block
@property (assign,nonatomic,__weak) id<PKSelectionDelegate> selectionViewDelegate;                                           //@synthesize selectionViewDelegate=_selectionViewDelegate - In the implementation block
@property (assign,nonatomic,__weak) id drawingUndoTarget; 
@property (assign,nonatomic) SEL drawingUndoSelector; 
@property (nonatomic,readonly) BOOL hasCurrentSelection; 
@property (assign,nonatomic,__weak) id<PKCanvasViewDelegate> delegate;                                                       //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) PKInk * ink; 
@property (nonatomic,copy) PKDrawing * drawing; 
@property (nonatomic,retain) UIImage * backgroundImage;                                                                      //@synthesize backgroundImage=_backgroundImage - In the implementation block
@property (nonatomic,retain) UIColor * backgroundColor;                                                                      //@synthesize backgroundColor=_backgroundColor - In the implementation block
@property (assign,nonatomic) double minimumZoomScale; 
@property (assign,nonatomic) double maximumZoomScale; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)performUndo:(id)arg1 ;
-(id)_pinchGestureRecognizer;
-(void)_setup;
-(CGAffineTransform)imageTransform;
-(CGAffineTransform)strokeTransform;
-(PKDrawing *)drawing;
-(PKInk *)ink;
-(void)imageWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)setDrawing:(PKDrawing *)arg1 ;
-(id<PKRendererControllerProtocol>)_rendererController;
-(void)setInk:(PKInk *)arg1 ;
-(void)setSelectionController:(PKSelectionController *)arg1 ;
-(BOOL)isDrawing;
-(BOOL)hasCurrentSelection;
-(void)_setFixedPointSize:(CGSize)arg1 drawingScale:(double)arg2 ;
-(double)layerContentScale;
-(void)setStrokeTransform:(CGAffineTransform)arg1 ;
-(CGPoint)pointInStrokeSpace:(CGPoint)arg1 inDrawing:(id)arg2 ;
-(PKController *)_drawingController;
-(void)selectionRefreshWithChangeToDrawings:(id)arg1 ;
-(CGPoint)selectionOffsetForDrawing:(id)arg1 ;
-(CGAffineTransform)selectionDrawingTransform;
-(id)drawingUndoTarget;
-(SEL)drawingUndoSelector;
-(void)toggleSelectedStrokes:(id)arg1 hide:(BOOL)arg2 inDrawing:(id)arg3 isErasing:(BOOL)arg4 ;
-(void)scrollContent:(CGPoint)arg1 ;
-(BOOL)canModifyWhitespace;
-(id)selectionTopView;
-(id)visibleStrokesOnscreen:(id)arg1 forDrawing:(id)arg2 ;
-(id)drawingForUUID:(id)arg1 ;
-(id)drawingForSelectionRect:(CGRect)arg1 ;
-(CGPoint)closestPointForPastedSelectionRect:(CGRect)arg1 withDrawing:(id*)arg2 ;
-(BOOL)isValidDropPointForStrokes:(CGPoint)arg1 ;
-(void)didBeginDraggingSelection;
-(BOOL)liveDrawingIsAtEndOfDocument;
-(id)drawingForLiveAttachment;
-(void)applyCommand:(id)arg1 toDrawing:(id)arg2 ;
-(void)resetSelectedStrokeStateForRenderer;
-(long long)aggd_cachedVisibleStrokeCount;
-(void)setAggd_cachedVisibleStrokeCount:(long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 selectionController:(id)arg2 ;
-(id)initWithFrame:(CGRect)arg1 fixedPixelSize:(CGSize)arg2 drawingScale:(double)arg3 layerFixedPixelSize:(BOOL)arg4 ;
-(CGSize)_fixedPixelSize;
-(double)_fixedDrawingScale;
-(void)initDrawingView;
-(void)setDrawingView:(PKInternalDrawingView *)arg1 ;
-(CGSize)_drawingSize;
-(PKInternalDrawingView *)drawingView;
-(BOOL)_maintainsTransformsOnLayout;
-(CGAffineTransform)drawingTransform;
-(void)setDrawingTransform:(CGAffineTransform)arg1 ;
-(void)_setFixedPixelSize:(CGSize)arg1 drawingScale:(double)arg2 ;
-(BOOL)isRendering;
-(void)setDisableWideGamut:(BOOL)arg1 ;
-(BOOL)disableWideGamut;
-(void)_setDrawing:(id)arg1 alreadyRenderedDrawing:(id)arg2 imageForAlreadyRenderedDrawing:(id)arg3 fullyRenderedCompletionBlock:(/*^block*/id)arg4 ;
-(void)drawStrokeWithPath:(CGPathRef)arg1 ;
-(void)drawStrokeWithPoints:(CGPoint*)arg1 count:(unsigned long long)arg2 ;
-(void)eraseAll;
-(void)_updateVisualizationSupport;
-(BOOL)visualizationsEnabled;
-(void)simulateHIDPoints:(id)arg1 ;
-(void)replaceWithStrokesFromDrawing:(id)arg1 transform:(CGAffineTransform)arg2 ;
-(void)setIsDrawing:(BOOL)arg1 ;
-(void)drawingDidChange:(id)arg1 ;
-(void)renderingDidFinish;
-(BOOL)canBeginDrawingWithTouch:(id)arg1 ;
-(void)willBeginDrawingWithTouch:(id)arg1 ;
-(void)didFinishRenderingStroke:(id)arg1 inDrawing:(id)arg2 ;
-(void)drawingCancelled;
-(void)toolPicker:(id)arg1 setSelectedInk:(id)arg2 ;
-(id)selectedInkForToolPicker:(id)arg1 ;
-(id)undoManagerForToolPicker:(id)arg1 ;
-(id)canvasViewForToolPicker:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 fixedPixelSize:(CGSize)arg2 drawingScale:(double)arg3 ;
-(void)commitSelectionIfNecessaryWithCompletion:(/*^block*/id)arg1 ;
-(id)_drawingGestureRecognizer;
-(void)windowDidResize:(id)arg1 ;
-(void)_setNeedsDrawingDisplay;
-(void)_drawingDisplay;
-(void)setDrawingUndoTarget:(id)arg1 ;
-(void)setDrawingUndoSelector:(SEL)arg1 ;
-(void)setVisualizationsEnabled:(BOOL)arg1 ;
-(CHVisualizationManager *)_recognitionVisualizationManager;
-(BOOL)_layerFixedPixelSize;
-(void)set_maintainsTransformsOnLayout:(BOOL)arg1 ;
-(id<PKSelectionDelegate>)selectionViewDelegate;
-(void)setSelectionViewDelegate:(id<PKSelectionDelegate>)arg1 ;
-(void)duplicate:(id)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id<PKCanvasViewDelegate>)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setBackgroundColor:(UIColor *)arg1 ;
-(void)layoutSubviews;
-(id<PKCanvasViewDelegate>)delegate;
-(void)setHidden:(BOOL)arg1 ;
-(void)setOpaque:(BOOL)arg1 ;
-(UIColor *)backgroundColor;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(UIImage *)backgroundImage;
-(void)setBackgroundImage:(UIImage *)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(id)keyCommands;
-(void)setMinimumZoomScale:(double)arg1 ;
-(void)setMaximumZoomScale:(double)arg1 ;
-(double)minimumZoomScale;
-(double)maximumZoomScale;
-(void)delete:(id)arg1 ;
-(UIView *)selectionView;
-(PKSelectionController *)selectionController;
-(void)setOverlayView:(PKRecognitionOverlayView *)arg1 ;
-(PKRecognitionOverlayView *)overlayView;
@end

