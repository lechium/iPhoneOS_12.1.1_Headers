/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:40 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <libobjc.A.dylib/DKDGLDataBufferAccessor.h>

@class NSMutableArray, NSMutableDictionary, DKDGLShader, NSArray, NSString;

@interface DKDGLDataBuffer : NSObject <DKDGLDataBufferAccessor> {

	unsigned long long mCurrentBufferIndex;
	NSMutableArray* mArrayBuffers;
	NSMutableDictionary* mAttributeToArrayBuffersDictionary;
	unsigned long long mElementArrayCount;
	unsigned short* mGLElementData;
	BOOL mGLElementDataBufferWasSetup;
	unsigned mGLElementDataBuffer;
	CGSize mGLElementMeshSize;
	unsigned long long mGLElementQuadParticleCount;
	unsigned mGLVertexArrayObjects[2];
	BOOL _isUpdatingRawDataBuffer;
	BOOL _didTeardown;
	BOOL _isEnabled;
	DKDGLShader* _enabledShader;
	SCD_Struct_DK62* _updateDataArray;
	BOOL _isDoubleBuffered;
	unsigned _drawMode;
	unsigned long long _vertexCount;
	NSArray* _vertexAttributes;

}

@property (readonly) unsigned long long vertexCount;                //@synthesize vertexCount=_vertexCount - In the implementation block
@property (readonly) NSArray * vertexAttributes;                    //@synthesize vertexAttributes=_vertexAttributes - In the implementation block
@property (assign,nonatomic) unsigned drawMode;                     //@synthesize drawMode=_drawMode - In the implementation block
@property (readonly) BOOL isDoubleBuffered;                         //@synthesize isDoubleBuffered=_isDoubleBuffered - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char*)getDataPtr;
-(void)drawWithShader:(id)arg1 range:(NSRange)arg2 deactivateShaderWhenDone:(BOOL)arg3 ;
-(void)drawWithShader:(id)arg1 deactivateShaderWhenDone:(BOOL)arg2 ;
-(void)enableDataBufferWithShader:(id)arg1 ;
-(void)disableDataBufferWithShader:(id)arg1 ;
-(void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(SCD_Struct_DK7)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint2D:(SCD_Struct_DK7)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(SCD_Struct_DK8)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint3D:(SCD_Struct_DK8)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(SCD_Struct_DK9)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint4D:(SCD_Struct_DK9)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned long long)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 indexElementCount:(unsigned long long)arg3 doubleBuffered:(BOOL)arg4 ;
-(id)initWithVertexAttributes:(id)arg1 meshSize:(CGSize)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(BOOL)arg4 includeCenterAttribute:(BOOL)arg5 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(BOOL)arg4 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 ;
-(BOOL)isDoubleBuffered;
-(void)p_setupGLElementArrayBufferIfNecessary;
-(void)enableElementArrayBuffer;
-(NSArray *)vertexAttributes;
-(BOOL)p_setAttributeUpdateData:(SCD_Struct_DK62*)arg1 fromAttribute:(id)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned long long)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 textureFlipped:(BOOL)arg3 ;
-(unsigned short)GLushortForIndexElement:(unsigned long long)arg1 ;
-(void)disableElementArrayBuffer;
-(void)drawWithShader:(id)arg1 ;
-(void)setDataForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned long long)arg5 ;
-(id)vertexAttributeNamed:(id)arg1 ;
-(void)updateDataBufferAttributes:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)dealloc;
-(NSString *)description;
-(unsigned long long)vertexCount;
-(void)teardown;
-(void)setDrawMode:(unsigned)arg1 ;
-(unsigned)drawMode;
@end

