/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:40 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <UIKitCore/UIView.h>
#import <UIKit/UIDragInteractionDelegate_Private.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@class UIImageView, UIDragInteraction, PKSelectionController, UITapGestureRecognizer, CAShapeLayer, UIDragPreview, PKStrokeSelection, UIImage, UILongPressGestureRecognizer, NSString;

@interface PKSelectionView : UIView <UIDragInteractionDelegate_Private, UIGestureRecognizerDelegate> {

	UIImageView* _strokeSelectionImageView;
	UIDragInteraction* _dragInteraction;
	CGPoint _originalStrokePosition;
	CGPoint _initialDragPosition;
	PKSelectionController* _selectionController;
	BOOL _isClearingSelection;
	UITapGestureRecognizer* _editMenuGR;
	CAShapeLayer* _lassoLayer;
	CAShapeLayer* _whiteLassoLayer;
	UIDragPreview* _previewProvider;
	BOOL _isDragging;
	BOOL _wantsDragPlatter;
	PKStrokeSelection* _strokeSelection;
	UIImage* _strokeSelectionImage;
	UILongPressGestureRecognizer* _dragGR;
	CGPoint _offsetInTouchView;

}

@property (nonatomic,readonly) BOOL isDragging;                                    //@synthesize isDragging=_isDragging - In the implementation block
@property (nonatomic,retain) PKStrokeSelection * strokeSelection;                  //@synthesize strokeSelection=_strokeSelection - In the implementation block
@property (nonatomic,readonly) CGPoint offsetInTouchView;                          //@synthesize offsetInTouchView=_offsetInTouchView - In the implementation block
@property (nonatomic,retain) UIImage * strokeSelectionImage;                       //@synthesize strokeSelectionImage=_strokeSelectionImage - In the implementation block
@property (assign,nonatomic) BOOL wantsDragPlatter;                                //@synthesize wantsDragPlatter=_wantsDragPlatter - In the implementation block
@property (nonatomic,readonly) UILongPressGestureRecognizer * dragGR;              //@synthesize dragGR=_dragGR - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(PKStrokeSelection *)strokeSelection;
-(id)initWithFrame:(CGRect)arg1 strokeSelection:(id)arg2 selectionController:(id)arg3 ;
-(void)setStrokeSelectionImage:(UIImage *)arg1 ;
-(UILongPressGestureRecognizer *)dragGR;
-(void)animateViewToOriginalPosition;
-(void)updateLocation:(CGPoint)arg1 ;
-(CGPoint)offsetInTouchView;
-(void)toggleEditMenu;
-(void)dragSelection:(id)arg1 ;
-(void)setupAnimatedLasso;
-(void)_addShadowToStroke;
-(BOOL)lassoContainsPoint:(CGPoint)arg1 ;
-(void)_dragWillBegin;
-(void)setStrokeSelection:(PKStrokeSelection *)arg1 ;
-(UIImage *)strokeSelectionImage;
-(BOOL)wantsDragPlatter;
-(void)setWantsDragPlatter:(BOOL)arg1 ;
-(void)dealloc;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2 ;
-(BOOL)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(void)willMoveToWindow:(id)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(BOOL)isDragging;
-(id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2 ;
-(id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3 ;
-(void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2 ;
-(BOOL)dragInteraction:(id)arg1 prefersFullSizePreviewsForSession:(id)arg2 ;
-(void)dragInteraction:(id)arg1 sessionDidMove:(id)arg2 ;
-(void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3 ;
-(long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2 ;
-(id)targetForAction:(SEL)arg1 withSender:(id)arg2 ;
-(CGColorRef)selectionColor;
@end

