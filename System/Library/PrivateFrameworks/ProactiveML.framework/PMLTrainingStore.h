/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:49:11 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/ProactiveML.framework/ProactiveML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <ProactiveML/ProactiveML-Structs.h>
@class NSString, _PASSqliteDatabase;

@interface PMLTrainingStore : NSObject {

	NSString* _dbPath;
	_PASSqliteDatabase* _db;
	id _lockStateNotificationToken;
	BOOL _allowSkipSchema;

}
+(id)getSchema:(unsigned long long*)arg1 ;
+(id)inMemoryStoreForTesting;
-(BOOL)createSnapshot:(id)arg1 ;
-(long long)_migrate;
-(void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(BOOL)arg4 positiveLabel:(unsigned long long)arg5 skew:(double)arg6 ignoreIfSingular:(BOOL)arg7 block:(/*^block*/id)arg8 ;
-(void)_registerUnlockHandler;
-(long long)_openDbIfUnlocked;
-(id)initWithPath:(id)arg1 allowSkipSchema:(BOOL)arg2 ;
-(void)storeSession:(id)arg1 source:(id)arg2 label:(long long)arg3 model:(id)arg4 bundleId:(id)arg5 domainId:(id)arg6 itemIds:(id)arg7 isAppleInternal:(BOOL)arg8 ;
-(unsigned long long)_sessionDescriptorIdFor:(id)arg1 ;
-(void)_loadSessionsForModel:(id)arg1 positiveRowId:(unsigned long long)arg2 negativeRowId:(unsigned long long)arg3 excludeItemIdsUsedWithin:(double)arg4 limit:(unsigned long long)arg5 onlyAppleInternal:(BOOL)arg6 positiveLabel:(unsigned long long)arg7 skew:(double)arg8 ignoreIfSingular:(BOOL)arg9 block:(/*^block*/id)arg10 ;
-(id)sessionDimensionsForModel:(id)arg1 startingRowId:(unsigned long long)arg2 onlyAppleInternal:(BOOL)arg3 labelFilter:(id)arg4 ;
-(void)_loadSessionsFromTupleDescriptors:(id)arg1 model:(id)arg2 onlyAppleInternal:(BOOL)arg3 positiveLabel:(unsigned long long)arg4 ignoreIfSingular:(BOOL)arg5 numberOfRows:(unsigned long long)arg6 numberOfColumns:(unsigned long long)arg7 lastUsedMax:(double)arg8 block:(/*^block*/id)arg9 ;
-(void)limitLabeledSessionsWithSessionDescriptor:(id)arg1 label:(long long)arg2 limit:(unsigned long long)arg3 ;
-(id)sessionStats;
-(BOOL)_truncateDbIfCorrupted;
-(void)_unregisterUnlockHandler;
-(BOOL)_runQueries:(id)arg1 andUpdateVersionTo:(unsigned long long)arg2 inTransactionOnDb:(id)arg3 ;
-(long long)_migrateTo:(id)arg1 ;
-(id)getSchema:(unsigned long long*)arg1 ;
-(void)storeSession:(id)arg1 source:(id)arg2 label:(long long)arg3 model:(id)arg4 ;
-(void)enumerateReceivedPlansUsingBlock:(/*^block*/id)arg1 ;
-(void)storeSession:(id)arg1 label:(long long)arg2 model:(id)arg3 bundleId:(id)arg4 domainId:(id)arg5 itemIds:(id)arg6 isAppleInternal:(BOOL)arg7 ;
-(void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(BOOL)arg4 block:(/*^block*/id)arg5 ;
-(void)limitSessionsForEachLabelWithSessionDescriptor:(id)arg1 totalSessionLimit:(unsigned long long)arg2 ;
-(void)deleteSessionsWithBundleId:(id)arg1 ;
-(void)deleteSessionsWithBundleId:(id)arg1 itemId:(id)arg2 ;
-(void)deleteSessionsWithBundleId:(id)arg1 domainId:(id)arg2 ;
-(id)sessionStatsForSessionDescriptor:(id)arg1 ;
-(void)storeReceivedPlan:(id)arg1 planId:(id)arg2 ;
-(void)deleteReceivedPlan:(NSString*)arg1 ;
-(void)enumerateSessionDescriptorsUsingBlock:(/*^block*/id)arg1 ;
-(void)vacuumDb;
-(void)updateSessionsAndLabelForModel:(id)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)isDbOpen;
-(id)dbForTesting;
-(void)storeSession:(id)arg1 label:(long long)arg2 model:(id)arg3 ;
-(void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 withSkew:(double)arg3 andLimit:(int)arg4 block:(/*^block*/id)arg5 ;
-(id)allStoredPlanIds;
-(void)closeDbForTesting;
-(void)loadSessionsForModel:(id)arg1 since:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(BOOL)arg4 positiveLabel:(unsigned long long)arg5 skew:(double)arg6 ignoreIfSingular:(BOOL)arg7 block:(/*^block*/id)arg8 ;
-(void)loadSessionsForModel:(id)arg1 since:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(BOOL)arg4 block:(/*^block*/id)arg5 ;
-(void)storeLogEntryForPlan:(NSString*)arg1 model:(id)arg2 serverIteration:(unsigned long long)arg3 timestamp:(double)arg4 ;
-(id)loadRecentTrainingLogForPlan:(NSString*)arg1 ;
-(void)deleteAllTrainingLogs;
-(unsigned long long)numberOfRowsInTable:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(id)initWithPath:(id)arg1 ;
@end

