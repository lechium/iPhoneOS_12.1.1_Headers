/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:49:11 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/ProactiveML.framework/ProactiveML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ProactiveML/ProactiveML-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface AWDProactiveModelFittingQuantizedSparseMatrix : PBCodable <NSCopying> {

	SCD_Struct_AW4* _columnIndices;
	SCD_Struct_AW4* _rowIndices;
	SCD_Struct_AW4* _values;
	float _bucketSize;
	unsigned _columnLength;
	float _minValue;
	unsigned _rowLength;
	SCD_Struct_AW5 _has;

}

@property (nonatomic,readonly) unsigned long long columnIndicesCount; 
@property (nonatomic,readonly) unsigned* columnIndices; 
@property (assign,nonatomic) BOOL hasColumnLength; 
@property (assign,nonatomic) unsigned columnLength;                                //@synthesize columnLength=_columnLength - In the implementation block
@property (nonatomic,readonly) unsigned long long rowIndicesCount; 
@property (nonatomic,readonly) unsigned* rowIndices; 
@property (assign,nonatomic) BOOL hasRowLength; 
@property (assign,nonatomic) unsigned rowLength;                                   //@synthesize rowLength=_rowLength - In the implementation block
@property (nonatomic,readonly) unsigned long long valuesCount; 
@property (nonatomic,readonly) unsigned* values; 
@property (assign,nonatomic) BOOL hasMinValue; 
@property (assign,nonatomic) float minValue;                                       //@synthesize minValue=_minValue - In the implementation block
@property (assign,nonatomic) BOOL hasBucketSize; 
@property (assign,nonatomic) float bucketSize;                                     //@synthesize bucketSize=_bucketSize - In the implementation block
+(id)quantizedSparseMatrixFromSparseMatrix:(id)arg1 numberOfBuckets:(unsigned long long)arg2 ;
-(BOOL)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(unsigned long long)valuesCount;
-(unsigned)valuesAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)columnIndicesCount;
-(void)clearColumnIndices;
-(unsigned)columnIndicesAtIndex:(unsigned long long)arg1 ;
-(void)addColumnIndices:(unsigned)arg1 ;
-(unsigned long long)rowIndicesCount;
-(void)clearRowIndices;
-(unsigned)rowIndicesAtIndex:(unsigned long long)arg1 ;
-(void)addRowIndices:(unsigned)arg1 ;
-(unsigned*)columnIndices;
-(void)setColumnIndices:(unsigned*)arg1 count:(unsigned long long)arg2 ;
-(void)setColumnLength:(unsigned)arg1 ;
-(void)setHasColumnLength:(BOOL)arg1 ;
-(BOOL)hasColumnLength;
-(unsigned*)rowIndices;
-(void)setRowIndices:(unsigned*)arg1 count:(unsigned long long)arg2 ;
-(void)setRowLength:(unsigned)arg1 ;
-(void)setHasRowLength:(BOOL)arg1 ;
-(BOOL)hasRowLength;
-(void)setValues:(unsigned*)arg1 count:(unsigned long long)arg2 ;
-(void)setHasMinValue:(BOOL)arg1 ;
-(BOOL)hasMinValue;
-(void)setBucketSize:(float)arg1 ;
-(void)setHasBucketSize:(BOOL)arg1 ;
-(BOOL)hasBucketSize;
-(unsigned)columnLength;
-(unsigned)rowLength;
-(float)bucketSize;
-(float)originalValueAtRow:(unsigned long long)arg1 column:(unsigned long long)arg2 ;
-(void)addValues:(unsigned)arg1 ;
-(void)setMinValue:(float)arg1 ;
-(float)minValue;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)dictionaryRepresentation;
-(void)copyTo:(id)arg1 ;
-(unsigned*)values;
-(void)clearValues;
@end

