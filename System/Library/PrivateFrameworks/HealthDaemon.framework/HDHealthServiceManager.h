/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:49:37 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CBCentralManagerPrivateDelegate.h>
#import <libobjc.A.dylib/CBPairingAgentDelegate.h>

@protocol OS_dispatch_queue;
@class CBCentralManager, NSObject, HDDataCollectionManager, HDProfile, NSLock, HDIdentifierTable, NSMutableDictionary, NSSet, CBUUID, NSString;

@interface HDHealthServiceManager : NSObject <CBCentralManagerPrivateDelegate, CBPairingAgentDelegate> {

	int _privacyNotificationToken;
	CBCentralManager* _central;
	NSObject*<OS_dispatch_queue> _queue;
	HDDataCollectionManager* _dataCollectionManager;
	HDProfile* _profile;
	NSLock* _discoveryLock;
	HDIdentifierTable* _discoveryInfosTable;
	NSMutableDictionary* _discoveryInfosByServiceUUID;
	NSSet* _scanServiceUUIDs;
	CBUUID* _allServicesUUID;
	NSLock* _connectionLock;
	HDIdentifierTable* _connectionInfosTable;
	NSMutableDictionary* _connectionInfosByPeripheralUUID;
	NSMutableDictionary* _connectedPeripheralsByPeripheralUUID;
	NSMutableDictionary* _bluetoothUpdateHandlers;

}

@property (nonatomic,retain) CBCentralManager * central;                                              //@synthesize central=_central - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                      //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) HDDataCollectionManager * dataCollectionManager;                         //@synthesize dataCollectionManager=_dataCollectionManager - In the implementation block
@property (assign,nonatomic,__weak) HDProfile * profile;                                              //@synthesize profile=_profile - In the implementation block
@property (nonatomic,retain) NSLock * discoveryLock;                                                  //@synthesize discoveryLock=_discoveryLock - In the implementation block
@property (nonatomic,retain) HDIdentifierTable * discoveryInfosTable;                                 //@synthesize discoveryInfosTable=_discoveryInfosTable - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * discoveryInfosByServiceUUID;                       //@synthesize discoveryInfosByServiceUUID=_discoveryInfosByServiceUUID - In the implementation block
@property (nonatomic,retain) NSSet * scanServiceUUIDs;                                                //@synthesize scanServiceUUIDs=_scanServiceUUIDs - In the implementation block
@property (nonatomic,retain) CBUUID * allServicesUUID;                                                //@synthesize allServicesUUID=_allServicesUUID - In the implementation block
@property (nonatomic,retain) NSLock * connectionLock;                                                 //@synthesize connectionLock=_connectionLock - In the implementation block
@property (nonatomic,retain) HDIdentifierTable * connectionInfosTable;                                //@synthesize connectionInfosTable=_connectionInfosTable - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * connectionInfosByPeripheralUUID;                   //@synthesize connectionInfosByPeripheralUUID=_connectionInfosByPeripheralUUID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * connectedPeripheralsByPeripheralUUID;              //@synthesize connectedPeripheralsByPeripheralUUID=_connectedPeripheralsByPeripheralUUID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * bluetoothUpdateHandlers;                           //@synthesize bluetoothUpdateHandlers=_bluetoothUpdateHandlers - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(long long)_isBTLESupportedWithCentral:(id)arg1 error:(id*)arg2 ;
-(HDDataCollectionManager *)dataCollectionManager;
-(void)setDataCollectionManager:(HDDataCollectionManager *)arg1 ;
-(id)initWithProfile:(id)arg1 ;
-(HDProfile *)profile;
-(void)unpairHealthServiceIfNecessary:(id)arg1 ;
-(unsigned long long)connectHealthService:(id)arg1 connectionOptions:(unsigned long long)arg2 sessionHandler:(/*^block*/id)arg3 dataHandler:(/*^block*/id)arg4 mfaSuccessHandler:(/*^block*/id)arg5 autoPairData:(id)arg6 error:(id*)arg7 ;
-(void)disconnectHealthService:(unsigned long long)arg1 ;
-(void)sendBluetoothStatusUpdatesForServer:(id)arg1 updateHandler:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)resetOOBState;
-(id)retrieveOOBData:(id*)arg1 ;
-(void)setProfile:(HDProfile *)arg1 ;
-(void)extendPrivateModeLease:(id)arg1 forDuration:(unsigned short)arg2 ;
-(void)servicesInvalidatedForDevice:(id)arg1 withError:(id)arg2 ;
-(void)discoveredServices:(id)arg1 forPeripheral:(id)arg2 ;
-(void)discoveredCharacteristics:(id)arg1 forDevice:(id)arg2 service:(id)arg3 ;
-(id)reviewSavedHealthServiceSessionsWithError:(id*)arg1 ;
-(unsigned long long)connectHealthService:(id)arg1 sessionHandler:(/*^block*/id)arg2 dataHandler:(/*^block*/id)arg3 error:(id*)arg4 ;
-(void)writeCharacteristic:(id)arg1 onSession:(unsigned long long)arg2 expectResponse:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)dataReceived:(id)arg1 deviceEntity:(id)arg2 ;
-(void)characteristicReceived:(id)arg1 device:(id)arg2 ;
-(unsigned long long)discoverHealthServicesWithType:(long long)arg1 timeout:(unsigned long long)arg2 alwaysNotify:(BOOL)arg3 handler:(/*^block*/id)arg4 error:(id*)arg5 ;
-(void)stopDiscoveryWithIdentifier:(unsigned long long)arg1 ;
-(unsigned long long)connectHealthService:(id)arg1 sessionHandler:(/*^block*/id)arg2 dataHandler:(/*^block*/id)arg3 characteristicsHandler:(/*^block*/id)arg4 error:(id*)arg5 ;
-(BOOL)healthUpdatesEnabledFromDevice:(id)arg1 error:(id*)arg2 ;
-(BOOL)setHealthUpdatesEnabled:(BOOL)arg1 fromDevice:(id)arg2 error:(id*)arg3 ;
-(void)getSupportedPropertyNamesWithHandler:(/*^block*/id)arg1 ;
-(void)getProperty:(id)arg1 forSession:(unsigned long long)arg2 withHandler:(/*^block*/id)arg3 ;
-(void)performOperation:(id)arg1 onSession:(unsigned long long)arg2 withParameters:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)initWithProfile:(id)arg1 centralManager:(id)arg2 queue:(id)arg3 ;
-(void)_queue_handleMFASuccessNotification;
-(void)_disconnectPeripheralWithDeviceIdentifier:(id)arg1 error:(id)arg2 ;
-(id)_createDiscoveryTimeout:(unsigned long long)arg1 forIdentifier:(unsigned long long)arg2 ;
-(void)_queue_reportExistingDiscoveriesForService:(id)arg1 ;
-(void)_queue_updateScan;
-(id)_copyDiscoveryInfosForServiceUUID:(id)arg1 ;
-(id)_serviceFromUUID:(id)arg1 peripheral:(id)arg2 serviceAdvertisementData:(id)arg3 peripheralAdvertisementData:(id)arg4 ;
-(unsigned long long)_connectHealthService:(id)arg1 connectionInfo:(id)arg2 error:(id*)arg3 ;
-(unsigned long long)_addConnectedPeripheral:(id)arg1 service:(id)arg2 connectionInfo:(id)arg3 ;
-(void)_removeConnectedPeripheral:(unsigned long long)arg1 withError:(id)arg2 ;
-(CBCentralManager *)central;
-(id)_copyConnectionInfosForPeripheralUUID:(id)arg1 ;
-(void)_createConnectionTimeoutForConnectionInfo:(id)arg1 ;
-(void)updateConnectionInfosForPeripheralUUID:(id)arg1 withMutation:(/*^block*/id)arg2 ;
-(id)_scanOptionsForDiscoveryInfos:(id)arg1 ;
-(id)_allServiceUUIDs;
-(void)_queue_stopScan;
-(void)removeAllDisconnectedPeripherals;
-(void)removeConnectingPeripheralsWithError:(id)arg1 ;
-(void)_queue_notifyBluetoothStatusUpdates:(long long)arg1 error:(id)arg2 ;
-(void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3 ;
-(id)_reportPeripheral:(id)arg1 serviceUUID:(id)arg2 serviceAdvertisementData:(id)arg3 peripheralAdvertisementData:(id)arg4 ;
-(void)_notifyDiscoveryForInfos:(id)arg1 peripheral:(id)arg2 healthService:(id)arg3 alwaysNotify:(BOOL)arg4 ;
-(void)centralManagerDidUpdateState:(id)arg1 ;
-(void)centralManager:(id)arg1 willRestoreState:(id)arg2 ;
-(void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4 ;
-(void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2 ;
-(void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3 ;
-(void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2 ;
-(void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3 ;
-(void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2 ;
-(void)pairingAgent:(id)arg1 peerDidRequestPairing:(id)arg2 type:(long long)arg3 passkey:(id)arg4 ;
-(id)allServicesWithError:(id*)arg1 ;
-(id)_healthServiceForPeriperalID:(id)arg1 serviceType:(long long)arg2 ;
-(void)setCentral:(CBCentralManager *)arg1 ;
-(NSLock *)discoveryLock;
-(void)setDiscoveryLock:(NSLock *)arg1 ;
-(HDIdentifierTable *)discoveryInfosTable;
-(void)setDiscoveryInfosTable:(HDIdentifierTable *)arg1 ;
-(NSMutableDictionary *)discoveryInfosByServiceUUID;
-(void)setDiscoveryInfosByServiceUUID:(NSMutableDictionary *)arg1 ;
-(NSSet *)scanServiceUUIDs;
-(void)setScanServiceUUIDs:(NSSet *)arg1 ;
-(CBUUID *)allServicesUUID;
-(void)setAllServicesUUID:(CBUUID *)arg1 ;
-(NSLock *)connectionLock;
-(void)setConnectionLock:(NSLock *)arg1 ;
-(HDIdentifierTable *)connectionInfosTable;
-(void)setConnectionInfosTable:(HDIdentifierTable *)arg1 ;
-(NSMutableDictionary *)connectionInfosByPeripheralUUID;
-(void)setConnectionInfosByPeripheralUUID:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)connectedPeripheralsByPeripheralUUID;
-(void)setConnectedPeripheralsByPeripheralUUID:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)bluetoothUpdateHandlers;
-(void)setBluetoothUpdateHandlers:(NSMutableDictionary *)arg1 ;
-(id)shortDescription;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

