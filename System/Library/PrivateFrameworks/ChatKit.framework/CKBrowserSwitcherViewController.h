/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:48:10 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ChatKit/ChatKit-Structs.h>
#import <UIKitCore/UIViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <libobjc.A.dylib/CKBrowserSwitcherScrollPreventerDelegate.h>
#import <libobjc.A.dylib/CKBrowserTransitionCoordinatorDelegate.h>
#import <libobjc.A.dylib/CKAppGrabberViewDelegate.h>
#import <libobjc.A.dylib/_UIBackdropViewGraphicsQualityChangeDelegate.h>

@protocol CKBrowserSwitcherViewControllerDelegateCKBrowserTransitionCoordinatorDelegate, CKBrowserViewControllerProtocol;
@class CKImmediatePanGestureRecognizer, UIViewPropertyAnimator, UIViewController, CKBrowserTransitionCoordinator, CKBrowserSwitcherFooterView, UIView, UICollectionView, UICollectionViewFlowLayout, NSMutableDictionary, UILongPressGestureRecognizer, CKBrowserSwitcherScrollPreventer, IMScheduledUpdater, IMBalloonPlugin, CKAppGrabberView, NSArray, NSDate, NSString;

@interface CKBrowserSwitcherViewController : UIViewController <UIGestureRecognizerDelegate, UIScrollViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource, CKBrowserSwitcherScrollPreventerDelegate, CKBrowserTransitionCoordinatorDelegate, CKAppGrabberViewDelegate, _UIBackdropViewGraphicsQualityChangeDelegate> {

	CKImmediatePanGestureRecognizer* _expandGestureTracker;
	UIViewPropertyAnimator* _expandPropertyAnimator;
	BOOL _isDoingExpandInteraction;
	BOOL _expandInteractionDidMove;
	BOOL _expandGestureStartedOnGrabber;
	double _expandGestureTranslationOffset;
	BOOL _dragging;
	BOOL _browserViewReadyForUserInteraction;
	BOOL _insertedViaCollapse;
	BOOL _inManualContentOffsetChange;
	BOOL _inDragAndDrop;
	BOOL _interactiveExpandStarted;
	BOOL _transitioningFromSnapshotToLiveView;
	BOOL _transitioningExpandedState;
	BOOL _allowFooterLabelUpdates;
	BOOL _allowPluginLaunchNotifications;
	BOOL _viewHasLaidOutSubviews;
	BOOL _browserIsLoadingCompact;
	BOOL _browserIsCollapsingFromFullscreen;
	id<CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> _delegate;
	UIViewController*<CKBrowserViewControllerProtocol> _currentViewController;
	CKBrowserTransitionCoordinator* _transitionCoordinator;
	CKBrowserSwitcherFooterView* _footerView;
	UIView* _contentView;
	UICollectionView* _collectionView;
	UICollectionViewFlowLayout* _flowLayout;
	NSMutableDictionary* _livePluginIdentifierToTimestampMap;
	UILongPressGestureRecognizer* _touchTracker;
	CKBrowserSwitcherScrollPreventer* _scrollPreventer;
	IMScheduledUpdater* _scrollUpdater;
	IMBalloonPlugin* _currentVisiblePlugin;
	CKAppGrabberView* _grabberView;
	id _cancelTouchesToken;
	IMBalloonPlugin* _balloonPlugin;
	NSArray* _gutterDividerViews;
	/*^block*/id _performAfterFirstLayoutBlock;
	NSDate* _timeOfLastScrollingDecelerationEnded;

}

@property (nonatomic,retain) UIView * contentView;                                                                                             //@synthesize contentView=_contentView - In the implementation block
@property (nonatomic,retain) CKBrowserTransitionCoordinator * transitionCoordinator;                                                           //@synthesize transitionCoordinator=_transitionCoordinator - In the implementation block
@property (nonatomic,retain) UICollectionView * collectionView;                                                                                //@synthesize collectionView=_collectionView - In the implementation block
@property (nonatomic,retain) UICollectionViewFlowLayout * flowLayout;                                                                          //@synthesize flowLayout=_flowLayout - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * livePluginIdentifierToTimestampMap;                                                         //@synthesize livePluginIdentifierToTimestampMap=_livePluginIdentifierToTimestampMap - In the implementation block
@property (nonatomic,retain) UILongPressGestureRecognizer * touchTracker;                                                                      //@synthesize touchTracker=_touchTracker - In the implementation block
@property (nonatomic,retain) CKBrowserSwitcherScrollPreventer * scrollPreventer;                                                               //@synthesize scrollPreventer=_scrollPreventer - In the implementation block
@property (nonatomic,retain) IMScheduledUpdater * scrollUpdater;                                                                               //@synthesize scrollUpdater=_scrollUpdater - In the implementation block
@property (nonatomic,retain) IMBalloonPlugin * currentVisiblePlugin;                                                                           //@synthesize currentVisiblePlugin=_currentVisiblePlugin - In the implementation block
@property (nonatomic,retain) CKAppGrabberView * grabberView;                                                                                   //@synthesize grabberView=_grabberView - In the implementation block
@property (assign,nonatomic) BOOL insertedViaCollapse;                                                                                         //@synthesize insertedViaCollapse=_insertedViaCollapse - In the implementation block
@property (assign,getter=isBrowserReadyForUserInteraction,nonatomic) BOOL browserViewReadyForUserInteraction;                                  //@synthesize browserViewReadyForUserInteraction=_browserViewReadyForUserInteraction - In the implementation block
@property (assign,nonatomic) BOOL inManualContentOffsetChange;                                                                                 //@synthesize inManualContentOffsetChange=_inManualContentOffsetChange - In the implementation block
@property (assign,getter=isDragging,nonatomic) BOOL dragging;                                                                                  //@synthesize dragging=_dragging - In the implementation block
@property (assign,getter=isInDragAndDrop,nonatomic) BOOL inDragAndDrop;                                                                        //@synthesize inDragAndDrop=_inDragAndDrop - In the implementation block
@property (nonatomic,retain) id cancelTouchesToken;                                                                                            //@synthesize cancelTouchesToken=_cancelTouchesToken - In the implementation block
@property (assign,nonatomic) BOOL interactiveExpandStarted;                                                                                    //@synthesize interactiveExpandStarted=_interactiveExpandStarted - In the implementation block
@property (nonatomic,retain) IMBalloonPlugin * balloonPlugin;                                                                                  //@synthesize balloonPlugin=_balloonPlugin - In the implementation block
@property (nonatomic,retain) NSArray * gutterDividerViews;                                                                                     //@synthesize gutterDividerViews=_gutterDividerViews - In the implementation block
@property (assign,getter=isTransitioningFromSnapshotToLiveView,nonatomic) BOOL transitioningFromSnapshotToLiveView;                            //@synthesize transitioningFromSnapshotToLiveView=_transitioningFromSnapshotToLiveView - In the implementation block
@property (assign,getter=isTransitioningExpandedState,nonatomic) BOOL transitioningExpandedState;                                              //@synthesize transitioningExpandedState=_transitioningExpandedState - In the implementation block
@property (assign,nonatomic) BOOL allowFooterLabelUpdates;                                                                                     //@synthesize allowFooterLabelUpdates=_allowFooterLabelUpdates - In the implementation block
@property (assign,nonatomic) BOOL allowPluginLaunchNotifications;                                                                              //@synthesize allowPluginLaunchNotifications=_allowPluginLaunchNotifications - In the implementation block
@property (nonatomic,copy) id performAfterFirstLayoutBlock;                                                                                    //@synthesize performAfterFirstLayoutBlock=_performAfterFirstLayoutBlock - In the implementation block
@property (assign,nonatomic) BOOL viewHasLaidOutSubviews;                                                                                      //@synthesize viewHasLaidOutSubviews=_viewHasLaidOutSubviews - In the implementation block
@property (nonatomic,retain) NSDate * timeOfLastScrollingDecelerationEnded;                                                                    //@synthesize timeOfLastScrollingDecelerationEnded=_timeOfLastScrollingDecelerationEnded - In the implementation block
@property (assign,nonatomic) BOOL browserIsLoadingCompact;                                                                                     //@synthesize browserIsLoadingCompact=_browserIsLoadingCompact - In the implementation block
@property (assign,nonatomic) BOOL browserIsCollapsingFromFullscreen;                                                                           //@synthesize browserIsCollapsingFromFullscreen=_browserIsCollapsingFromFullscreen - In the implementation block
@property (assign,nonatomic,__weak) id<CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) UIViewController*<CKBrowserViewControllerProtocol> currentViewController;                                       //@synthesize currentViewController=_currentViewController - In the implementation block
@property (nonatomic,readonly) CKBrowserSwitcherFooterView * footerView;                                                                       //@synthesize footerView=_footerView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(UIViewController*<CKBrowserViewControllerProtocol>)currentViewController;
-(void)setCurrentViewController:(UIViewController*<CKBrowserViewControllerProtocol>)arg1 ;
-(IMBalloonPlugin *)balloonPlugin;
-(void)dragManagerDidEndDragging:(id)arg1 ;
-(BOOL)_currentPluginIsJellyfish;
-(void)animateInCompactWithCompletion:(/*^block*/id)arg1 ;
-(void)animateOutCompactWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)shouldAlwaysShowAppTitle;
-(void)setInDragAndDrop:(BOOL)arg1 ;
-(void)appGrabberViewCloseButtonTapped:(id)arg1 ;
-(void)setGrabberView:(CKAppGrabberView *)arg1 ;
-(void)setBalloonPlugin:(IMBalloonPlugin *)arg1 ;
-(void)scrollPreventer:(id)arg1 didReceiveTouchAtDate:(id)arg2 ;
-(void)scrollPreventerDidLayoutSubviews:(id)arg1 ;
-(void)scrollPreventerWillBeginDragging:(id)arg1 ;
-(void)scrollPreventer:(id)arg1 scrolledToOffset:(CGPoint)arg2 ;
-(void)scrollPreventerDidEndDecelerating:(id)arg1 ;
-(void)unloadRemoteViewControllers;
-(id)initWithConversation:(id)arg1 sendDelegate:(id)arg2 presentingViewController:(id)arg3 ;
-(void)scrollCollectionViewToPlugin:(id)arg1 ;
-(void)showBrowserFullscreenForPlugin:(id)arg1 datasource:(id)arg2 ;
-(void)showBrowserInSwitcherForPlugin:(id)arg1 datasource:(id)arg2 reloadData:(BOOL)arg3 ;
-(BOOL)isBrowserReadyForUserInteraction;
-(void)dismissBrowserFullscreenAnimated:(BOOL)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)transitionToFullscreen;
-(void)transitionToCollapsed;
-(void)showBrowserFullscreenModalForPlugin:(id)arg1 datasource:(id)arg2 ;
-(void)browserTransitionCoordinator:(id)arg1 expandedStateDidChange:(BOOL)arg2 withReason:(long long)arg3 ;
-(void)browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2 ;
-(void)browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2 ;
-(void)browserTransitionCoordinatorWillCollapseOrDismiss:(id)arg1 withReason:(long long)arg2 ;
-(void)browserTransitionCoordinatorDidCollapseOrDismiss:(id)arg1 withReason:(long long)arg2 ;
-(void)browserTransitionCoordinator:(id)arg1 browserWillBecomeInactive:(id)arg2 ;
-(void)browserTransitionCoordinator:(id)arg1 didTransitionFromOrientation:(long long)arg2 toOrientation:(long long)arg3 ;
-(void)browserTransitionCoordinator:(id)arg1 didSwitchToPlugin:(id)arg2 ;
-(void)browserTransitionCoordinator:(id)arg1 hasUpdatedLastTouchDate:(id)arg2 ;
-(CGSize)browserTransitionCoordinator:(id)arg1 preferredSizeForBrowser:(id)arg2 ;
-(void)browserTransitionCoordinatorWantsPresentationOfAppStore:(id)arg1 ;
-(void)browserTransitionCoordinatorWantsPresentationOfAppManager:(id)arg1 ;
-(id)appGrabberForBrowserTransitionCoordinator:(id)arg1 ;
-(void)reinsertAppGrabberViewForBrowserTransitionCoordinator:(id)arg1 ;
-(CGRect)cachedCompactFrameInWindowCoordsForBrowserTransitionCoordinator:(id)arg1 ;
-(double)browserTransitionCoordinatorCollapsedContentHeight:(id)arg1 ;
-(BOOL)browserTransitionCoordinatorShouldDismissOnDragSuccess:(id)arg1 ;
-(id)appTitleOverride;
-(id)appIconOverride;
-(id)transitionsPresentationViewController;
-(IMScheduledUpdater *)scrollUpdater;
-(id)cancelTouchesToken;
-(void)setCancelTouchesToken:(id)arg1 ;
-(void)setTransitionCoordinator:(CKBrowserTransitionCoordinator *)arg1 ;
-(void)setBrowserViewReadyForUserInteraction:(BOOL)arg1 ;
-(void)setAllowFooterLabelUpdates:(BOOL)arg1 ;
-(void)setTransitioningFromSnapshotToLiveView:(BOOL)arg1 ;
-(void)setAllowPluginLaunchNotifications:(BOOL)arg1 ;
-(double)restingCollectionViewOriginY;
-(CKAppGrabberView *)grabberView;
-(void)expandGestureTouchMoved:(id)arg1 ;
-(void)_scrollUpdaterFired;
-(void)setScrollUpdater:(IMScheduledUpdater *)arg1 ;
-(void)setGutterDividerViews:(NSArray *)arg1 ;
-(NSArray *)gutterDividerViews;
-(void)setInManualContentOffsetChange:(BOOL)arg1 ;
-(BOOL)_hasLandscapeGutters;
-(CGRect)restingGrabberFrame;
-(CKBrowserSwitcherScrollPreventer *)scrollPreventer;
-(id)activeBrowserView;
-(void)_updateBrowserViewPositionForPluginAndInsertIfNecessary:(id)arg1 ;
-(void)setViewHasLaidOutSubviews:(BOOL)arg1 ;
-(id)performAfterFirstLayoutBlock;
-(void)setPerformAfterFirstLayoutBlock:(id)arg1 ;
-(void)dragManagerWillStartDrag:(id)arg1 ;
-(void)dragManagerDidStartDrag:(id)arg1 ;
-(void)_transitionSnapshotViewToBrowserViewAfterViewDidPrepareForDisplay:(id)arg1 ;
-(void)_handleRemoteViewControllerConnectionInterrupted:(id)arg1 ;
-(void)saveSnapshotForCurrentBrowserViewControllerIfPossible;
-(void)_handleVisibleSwitcherPluginsChanged:(id)arg1 ;
-(void)_updateCurrentBrowserSnapshotIfPossible;
-(void)setInsertedViaCollapse:(BOOL)arg1 ;
-(BOOL)browserIsCollapsingFromFullscreen;
-(void)stopExpandAnimatorAndCleanupState;
-(BOOL)isTransitioningExpandedState;
-(void)setTransitioningExpandedState:(BOOL)arg1 ;
-(BOOL)viewHasLaidOutSubviews;
-(BOOL)browserIsLoadingCompact;
-(NSMutableDictionary *)livePluginIdentifierToTimestampMap;
-(void)_removeBrowserWithPluginIdentifierFromViewHierarchy:(id)arg1 ;
-(IMBalloonPlugin *)currentVisiblePlugin;
-(double)_horizontalOffsetForVisibleSwitcherPluginIndex:(unsigned long long)arg1 ;
-(void)cleanupExpandAnimatorState;
-(void)_endHoldingScrollUpdatesForKey:(id)arg1 ;
-(BOOL)isInDragAndDrop;
-(void)setupPausedExpandAnimatorIfNeeded;
-(void)_beginHoldingScrollUpdatesForKey:(id)arg1 ;
-(void)handleExpandButton:(id)arg1 ;
-(void)reverseAndCleanupExpandAnimator;
-(void)setInteractiveExpandStarted:(BOOL)arg1 ;
-(void)_transitionSnapshotViewToBrowserView;
-(void)setBrowserIsCollapsingFromFullscreen:(BOOL)arg1 ;
-(void)setCurrentVisiblePlugin:(IMBalloonPlugin *)arg1 ;
-(void)_updateForBeginScrolling;
-(void)_updateForEndScrolling;
-(void)_updateAppNameAndPageForOffset:(CGPoint)arg1 ;
-(void)_removeBrowserFromViewHierarchy:(id)arg1 ;
-(void)_loadBrowserForBalloonPlugin:(id)arg1 datasource:(id)arg2 ;
-(void)_moveLiveBrowserViewsToUpdatedVisibleIndices;
-(void)_cleanupOffscreenChildViewControllersWithDelay;
-(void)_performAfterFirstLayout:(/*^block*/id)arg1 ;
-(void)_updateVisibleBrowserView;
-(BOOL)_scrollToVisiblePluginWithIdentifier:(id)arg1 ;
-(void)_snapshotCurrentViewController;
-(void)_updatePluginFromScrollPosition;
-(BOOL)_pluginHasLiveBrowserViewInSwitcher:(id)arg1 ;
-(void)_deferredUpdateVisibleBrowserView;
-(id)currentSwitcherCell;
-(BOOL)_usesHorizontalSwipeToSwitchApps;
-(unsigned long long)_visibleSwitcherPluginIndexForHorizontalOffset:(double)arg1 ;
-(void)_updateGutterDividerViewsForCurrentVisibleBrowser;
-(NSDate *)timeOfLastScrollingDecelerationEnded;
-(double)_delayWhenScrollingBeforeLoadingNewBrowser;
-(void)setTimeOfLastScrollingDecelerationEnded:(NSDate *)arg1 ;
-(void)_updateActiveBrowserTimestampForCurrentBalloonPlugin;
-(BOOL)isTransitioningFromSnapshotToLiveView;
-(CGSize)_browserSize;
-(void)_cleanupOffscreenChildViewControllers;
-(void)_insertCurrentBrowserAndRemoveOldBrowsersIfNeeded;
-(void)setBrowserIsLoadingCompact:(BOOL)arg1 ;
-(BOOL)isBrowserSwitcherFirstLaunch;
-(void)setLivePluginIdentifierToTimestampMap:(NSMutableDictionary *)arg1 ;
-(void)setScrollPreventer:(CKBrowserSwitcherScrollPreventer *)arg1 ;
-(BOOL)insertedViaCollapse;
-(BOOL)inManualContentOffsetChange;
-(BOOL)interactiveExpandStarted;
-(BOOL)allowFooterLabelUpdates;
-(BOOL)allowPluginLaunchNotifications;
-(void)dealloc;
-(void)setDelegate:(id<CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate>)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(UIView *)contentView;
-(id<CKBrowserSwitcherViewControllerDelegate><CKBrowserTransitionCoordinatorDelegate>)delegate;
-(CKBrowserTransitionCoordinator *)transitionCoordinator;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(void)scrollViewDidEndScrollingAnimation:(id)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)loadView;
-(void)layoutMarginsDidChange;
-(UICollectionView *)collectionView;
-(void)viewDidLoad;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewDidLayoutSubviews;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(BOOL)shouldAutorotate;
-(id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2 ;
-(void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2 ;
-(void)setContentView:(UIView *)arg1 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)setCollectionView:(UICollectionView *)arg1 ;
-(BOOL)isDragging;
-(void)setDragging:(BOOL)arg1 ;
-(UICollectionViewFlowLayout *)flowLayout;
-(void)setFlowLayout:(UICollectionViewFlowLayout *)arg1 ;
-(UILongPressGestureRecognizer *)touchTracker;
-(UILongPressGestureRecognizer *)touchTracker;
-(void)setTouchTracker:(UILongPressGestureRecognizer *)arg1 ;
-(CKBrowserSwitcherFooterView *)footerView;
-(double)_rubberBandOffsetWithoutDecorationForOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4 outside:(BOOL*)arg5 ;
@end

