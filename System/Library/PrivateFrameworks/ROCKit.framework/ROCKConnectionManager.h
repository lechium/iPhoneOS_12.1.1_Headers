/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:53 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/ROCKit.framework/ROCKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSMapTable, NSMutableDictionary;

@interface ROCKConnectionManager : NSObject {

	BOOL _enableMessageQueueSending;
	/*^block*/id _connectionManagerHandler;
	unsigned long long _messageQueueInvocationMode;
	NSObject*<OS_dispatch_queue> _managedConnectionsQueue;
	NSObject*<OS_dispatch_queue> _managedRemoteConnectionsQueue;
	NSMapTable* _managedConnections;
	unsigned long long _nextAvailableManagedConnectionIndex;
	NSMapTable* _managedRemoteConnections;
	NSMutableDictionary* _managedServiceUUIDs;
	NSObject*<OS_dispatch_queue> _handlerQueue;

}

@property (assign,nonatomic) unsigned long long messageQueueInvocationMode;                           //@synthesize messageQueueInvocationMode=_messageQueueInvocationMode - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> managedConnectionsQueue;                    //@synthesize managedConnectionsQueue=_managedConnectionsQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> managedRemoteConnectionsQueue;              //@synthesize managedRemoteConnectionsQueue=_managedRemoteConnectionsQueue - In the implementation block
@property (nonatomic,retain) NSMapTable * managedConnections;                                         //@synthesize managedConnections=_managedConnections - In the implementation block
@property (assign,nonatomic) unsigned long long nextAvailableManagedConnectionIndex;                  //@synthesize nextAvailableManagedConnectionIndex=_nextAvailableManagedConnectionIndex - In the implementation block
@property (nonatomic,retain) NSMapTable * managedRemoteConnections;                                   //@synthesize managedRemoteConnections=_managedRemoteConnections - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * managedServiceUUIDs;                               //@synthesize managedServiceUUIDs=_managedServiceUUIDs - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> handlerQueue;                               //@synthesize handlerQueue=_handlerQueue - In the implementation block
@property (nonatomic,copy) id connectionManagerHandler;                                               //@synthesize connectionManagerHandler=_connectionManagerHandler - In the implementation block
@property (assign,nonatomic) BOOL enableMessageQueueSending;                                          //@synthesize enableMessageQueueSending=_enableMessageQueueSending - In the implementation block
+(id)connectionManagerWithHandlerQueue:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)setHandlerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)handlerQueue;
-(void)setEnableMessageQueueSending:(BOOL)arg1 ;
-(id)initWithHandlerQueue:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)setManagedConnectionsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setManagedRemoteConnectionsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setManagedConnections:(NSMapTable *)arg1 ;
-(void)setNextAvailableManagedConnectionIndex:(unsigned long long)arg1 ;
-(void)setMessageQueueInvocationMode:(unsigned long long)arg1 ;
-(void)setManagedRemoteConnections:(NSMapTable *)arg1 ;
-(void)setManagedServiceUUIDs:(NSMutableDictionary *)arg1 ;
-(void)setConnectionManagerHandler:(id)arg1 ;
-(NSMapTable *)managedConnections;
-(NSObject*<OS_dispatch_queue>)managedConnectionsQueue;
-(NSMapTable *)managedRemoteConnections;
-(NSObject*<OS_dispatch_queue>)managedRemoteConnectionsQueue;
-(id)connectionManagerHandler;
-(BOOL)enableMessageQueueSending;
-(unsigned long long)messageQueueInvocationMode;
-(unsigned long long)nextAvailableManagedConnectionIndex;
-(NSMutableDictionary *)managedServiceUUIDs;
-(void)dealloc;
@end

