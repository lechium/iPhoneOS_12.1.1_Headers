/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:53 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/ROCKit.framework/ROCKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_xpc_object, OS_dispatch_queue;
@class NSObject, ROCKConnectionManager, NSMapTable, NSHashTable;

@interface ROCKSessionManager : NSObject {

	BOOL _useMainThreadChecker;
	NSObject*<OS_xpc_object> _serviceConnection;
	NSObject*<OS_dispatch_queue> _eventQueue;
	/*^block*/id _eventHandler;
	NSObject*<OS_dispatch_queue> _connectionQueue;
	NSObject*<OS_dispatch_queue> _invocationQueue;
	NSObject*<OS_dispatch_queue> _instancesQueue;
	ROCKConnectionManager* _connectionManager;
	NSObject*<OS_dispatch_queue> _stateQueue;
	NSMapTable* _impersonatableProxies;
	NSMapTable* _impersonatedObjects;
	NSHashTable* _pendingForwardingProxies;
	NSMapTable* _checkedInForwardingProxies;
	NSMapTable* _serializers;
	NSMapTable* _classesToProtocols;
	NSMapTable* _protocolsToMethodSignatures;
	NSMapTable* _xpcProtocolsToClasses;
	NSMapTable* _objCTypesToMethodSignatures;

}

@property (nonatomic,retain) NSObject*<OS_xpc_object> serviceConnection;                //@synthesize serviceConnection=_serviceConnection - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> eventQueue;                   //@synthesize eventQueue=_eventQueue - In the implementation block
@property (nonatomic,copy) id eventHandler;                                             //@synthesize eventHandler=_eventHandler - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> connectionQueue;              //@synthesize connectionQueue=_connectionQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> invocationQueue;              //@synthesize invocationQueue=_invocationQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> instancesQueue;               //@synthesize instancesQueue=_instancesQueue - In the implementation block
@property (nonatomic,retain) ROCKConnectionManager * connectionManager;                 //@synthesize connectionManager=_connectionManager - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> stateQueue;                   //@synthesize stateQueue=_stateQueue - In the implementation block
@property (nonatomic,retain) NSMapTable * impersonatableProxies;                        //@synthesize impersonatableProxies=_impersonatableProxies - In the implementation block
@property (nonatomic,retain) NSMapTable * impersonatedObjects;                          //@synthesize impersonatedObjects=_impersonatedObjects - In the implementation block
@property (nonatomic,retain) NSHashTable * pendingForwardingProxies;                    //@synthesize pendingForwardingProxies=_pendingForwardingProxies - In the implementation block
@property (nonatomic,retain) NSMapTable * checkedInForwardingProxies;                   //@synthesize checkedInForwardingProxies=_checkedInForwardingProxies - In the implementation block
@property (nonatomic,retain) NSMapTable * serializers;                                  //@synthesize serializers=_serializers - In the implementation block
@property (nonatomic,retain) NSMapTable * classesToProtocols;                           //@synthesize classesToProtocols=_classesToProtocols - In the implementation block
@property (nonatomic,retain) NSMapTable * protocolsToMethodSignatures;                  //@synthesize protocolsToMethodSignatures=_protocolsToMethodSignatures - In the implementation block
@property (nonatomic,retain) NSMapTable * xpcProtocolsToClasses;                        //@synthesize xpcProtocolsToClasses=_xpcProtocolsToClasses - In the implementation block
@property (nonatomic,retain) NSMapTable * objCTypesToMethodSignatures;                  //@synthesize objCTypesToMethodSignatures=_objCTypesToMethodSignatures - In the implementation block
@property (assign,nonatomic) BOOL useMainThreadChecker;                                 //@synthesize useMainThreadChecker=_useMainThreadChecker - In the implementation block
+(void)forwardingProxyWithInstance:(id)arg1 options:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)sessionManagerWithOptions:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
+(id)forwardingProxyWithInstance:(id)arg1 xpcAnonymousConnection:(id)arg2 options:(id)arg3 eventQueue:(id)arg4 eventHandler:(/*^block*/id)arg5 ;
+(id)remoteProxyWithXPCConnection:(id)arg1 options:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)forwardingProxyWithBlock:(id)arg1 xpcAnonymousConnection:(id)arg2 options:(id)arg3 eventQueue:(id)arg4 eventHandler:(/*^block*/id)arg5 ;
+(id)forwardingProxyWithInstance:(id)arg1 machServiceName:(id)arg2 options:(id)arg3 eventQueue:(id)arg4 eventHandler:(/*^block*/id)arg5 ;
+(id)remoteProxyWithServiceName:(id)arg1 options:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)remoteProxyWithMachServiceName:(id)arg1 options:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(void)forwardingProxyWithInstance:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
+(id)forwardingProxyWithInstance:(id)arg1 xpcAnonymousConnection:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)forwardingProxyWithBlock:(id)arg1 xpcAnonymousConnection:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)forwardingProxyWithInstance:(id)arg1 machServiceName:(id)arg2 eventQueue:(id)arg3 eventHandler:(/*^block*/id)arg4 ;
+(id)remoteProxyWithXPCConnection:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
+(id)remoteProxyWithServiceName:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
+(id)remoteProxyWithMachServiceName:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
-(void)setConnectionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setInvocationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setEventHandler:(id)arg1 ;
-(NSObject*<OS_xpc_object>)serviceConnection;
-(ROCKConnectionManager *)connectionManager;
-(void)setConnectionManager:(ROCKConnectionManager *)arg1 ;
-(NSObject*<OS_dispatch_queue>)stateQueue;
-(void)setStateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)connectionQueue;
-(void)setServiceConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(NSObject*<OS_dispatch_queue>)invocationQueue;
-(id)eventHandler;
-(NSMapTable *)serializers;
-(id)initWithOptions:(id)arg1 eventQueue:(id)arg2 eventHandler:(/*^block*/id)arg3 ;
-(void)setUseMainThreadChecker:(BOOL)arg1 ;
-(void)setImpersonatableProxies:(NSMapTable *)arg1 ;
-(void)setImpersonatedObjects:(NSMapTable *)arg1 ;
-(void)setPendingForwardingProxies:(NSHashTable *)arg1 ;
-(void)setCheckedInForwardingProxies:(NSMapTable *)arg1 ;
-(void)setSerializers:(NSMapTable *)arg1 ;
-(void)setInstancesQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setClassesToProtocols:(NSMapTable *)arg1 ;
-(void)setProtocolsToMethodSignatures:(NSMapTable *)arg1 ;
-(void)setXpcProtocolsToClasses:(NSMapTable *)arg1 ;
-(void)setObjCTypesToMethodSignatures:(NSMapTable *)arg1 ;
-(NSMapTable *)xpcProtocolsToClasses;
-(NSMapTable *)impersonatableProxies;
-(NSMapTable *)impersonatedObjects;
-(NSHashTable *)pendingForwardingProxies;
-(NSMapTable *)checkedInForwardingProxies;
-(NSObject*<OS_dispatch_queue>)instancesQueue;
-(NSMapTable *)classesToProtocols;
-(NSMapTable *)protocolsToMethodSignatures;
-(NSMapTable *)objCTypesToMethodSignatures;
-(BOOL)useMainThreadChecker;
-(id)init;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)eventQueue;
-(void)setEventQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

