/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:51:51 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PlacesKit.framework/PlacesKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PlacesKit/PlacesKit-Structs.h>
#import <MapKit/MKAnnotationView.h>
#import <libobjc.A.dylib/PXPlacesMapAnnotationViewFadable.h>
#import <libobjc.A.dylib/PXPlacesMapAnnotationViewHighlightable.h>

@protocol PXPlacesGeotaggable;
@class CALayer, UIView, NSString;

@interface PXPlacesMapSmallCircleAnnotationView : MKAnnotationView <PXPlacesMapAnnotationViewFadable, PXPlacesMapAnnotationViewHighlightable> {

	CALayer* _circleLayer;
	CALayer* _highlightedCircleLayer;
	CALayer* _highlightedCircleLayer2;
	CALayer* _thumbnailLayer;
	CALayer* _backThumbNail;
	UIView* _touchView;
	id<PXPlacesGeotaggable> _currentGeo;
	long long _highlightLevel;
	double _circleAnnotationRadius;

}

@property (assign,nonatomic) double circleAnnotationRadius;              //@synthesize circleAnnotationRadius=_circleAnnotationRadius - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) long long highlightLevel;                   //@synthesize highlightLevel=_highlightLevel - In the implementation block
-(id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2 ;
-(void)setCircleAnnotationRadius:(double)arg1 ;
-(double)circleAnnotationRadius;
-(id)renderCircleWithRadius:(double)arg1 color:(UIColor*)arg2 ;
-(void)createThumbnailLayer;
-(id)renderArrowForThumbnail:(CGSize)arg1 withColor:(CGColorRef)arg2 andOrigin:(CGSize)arg3 ;
-(id)renderBackThumbnailLayer:(CGSize)arg1 withColor:(CGColorRef)arg2 ;
-(void)tapImage:(id)arg1 ;
-(long long)highlightLevel;
-(void)setHighlightLevel:(long long)arg1 ;
-(id)renderThumbnailWithGraphicContext:(CGImageRef)arg1 withThumbnailSize:(CGSize)arg2 origin:(CGPoint)arg3 ;
-(void)prepareForReuse;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
@end

