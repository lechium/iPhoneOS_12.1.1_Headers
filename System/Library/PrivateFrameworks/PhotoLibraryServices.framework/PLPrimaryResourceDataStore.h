/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:44:45 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLResourceDataStore.h>
#import <libobjc.A.dylib/PLResourceDataStore.h>

@class NSMutableDictionary, NSURL, PLCloudPhotoLibraryManager, NSString;

@interface PLPrimaryResourceDataStore : PLResourceDataStore <PLResourceDataStore> {

	NSMutableDictionary* _inflightCPLDownloadTaskIdentifiersByRequestID;
	NSMutableDictionary* _pendingCPLDownloadShouldRunByRequestID;
	os_unfair_lock_s _lock;
	NSURL* _resourceDirectoryURL;
	PLCloudPhotoLibraryManager* _cplManager;

}

@property (nonatomic,copy) NSURL * resourceDirectoryURL;                           //@synthesize resourceDirectoryURL=_resourceDirectoryURL - In the implementation block
@property (nonatomic,retain) PLCloudPhotoLibraryManager * cplManager;              //@synthesize cplManager=_cplManager - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned)masterThumbRecipeID;
+(unsigned short)keyLengthWithDataPreview:(unsigned char)arg1 ;
+(BOOL)isMasterThumbRecipeID:(unsigned)arg1 ;
+(unsigned)storeID;
+(id)supportedRecipes;
-(id)_expectedFilePathForMasterThumbnailForAsset:(id)arg1 ;
-(void)_handleCPLDownloadCompleteWithAssetObjectID:(id)arg1 resourceObjectID:(id)arg2 managedObjectContext:(id)arg3 ;
-(void)_downloadCPLResourceForAsset:(id)arg1 resourceType:(unsigned long long)arg2 options:(id)arg3 taskDidBeginHandler:(/*^block*/id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)descriptionForSubtype:(long long)arg1 ;
-(id)keyFromKeyStruct:(const void*)arg1 ;
-(id)resourceDataForKey:(id)arg1 assetID:(id)arg2 ;
-(id)resourceURLForKey:(id)arg1 assetID:(id)arg2 ;
-(id)updateDerivativeResourcesForAsset:(id)arg1 forLifecycleEvent:(unsigned)arg2 ;
-(id)virtualResourcesForAsset:(id)arg1 ;
-(BOOL)canStoreExternalResource:(id)arg1 ;
-(BOOL)storeExternalResource:(id)arg1 forAsset:(id)arg2 inContext:(id)arg3 options:(id)arg4 error:(id*)arg5 resultingResource:(id*)arg6 ;
-(unsigned long long)requestLocalAvailabilityChange:(short)arg1 forResource:(id)arg2 asset:(id)arg3 inContext:(id)arg4 options:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)cancelLocalAvailabilityChangeRequest:(unsigned long long)arg1 ;
-(void)requestRemoteAvailabilityChange:(short)arg1 forResource:(id)arg2 asset:(id)arg3 inContext:(id)arg4 options:(id)arg5 completion:(/*^block*/id)arg6 ;
-(BOOL)videoResource:(id)arg1 matchesOrExceedsQualityLevel:(unsigned)arg2 ;
-(BOOL)canStreamResource:(id)arg1 ;
-(void)requestStreamingURLForResource:(id)arg1 asset:(id)arg2 inContext:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)transitional_reconsiderLocalAvailabilityBasedOnExistingLocationOfCPLResource:(id)arg1 givenFilePath:(id)arg2 ;
-(NSURL *)resourceDirectoryURL;
-(void)setResourceDirectoryURL:(NSURL *)arg1 ;
-(PLCloudPhotoLibraryManager *)cplManager;
-(void)setCplManager:(PLCloudPhotoLibraryManager *)arg1 ;
-(id)init;
-(id)name;
@end

