/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:49:49 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/PrivateFrameworks/PhotoAnalysis.framework/Frameworks/PhotosGraph.framework/PhotosGraph
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <PhotosGraph/PhotosGraph-Structs.h>
@interface PGLocationTitleUtility : NSObject
+(id)beautifiedLocationNodeStringWithLocationNode:(id)arg1 ;
+(void)generateLocationTitleForTripWithMomentNodes:(id)arg1 result:(/*^block*/id)arg2 ;
+(void)generateLocationTitleWithOptions:(id)arg1 result:(/*^block*/id)arg2 ;
+(float)_weightForAOINode:(id)arg1 withAddressNodes:(id)arg2 ;
+(id)_twoPartLocationTitleWithFirstPartTitle:(id)arg1 withDimension:(unsigned long long)arg2 usedFirstPartLocationNode:(id)arg3 addressNode:(id)arg4 ;
+(id)_filteredAddressNodesWithAddressNodes:(id)arg1 momentNodes:(id)arg2 incompleteLocationResolver:(id)arg3 filterSignificantLocationsOption:(unsigned long long)arg4 ;
+(id)_peopleLocationFromAddressNode:(id)arg1 ;
+(id)_commonAOIComponentsForAddressNodes:(id)arg1 aoiDisplayType:(unsigned long long)arg2 containsEntertainmentPOI:(BOOL)arg3 ;
+(id)_commonCityTitleComponentsFromMomentNodes:(id)arg1 remainingAddressNodes:(id)arg2 ignoredAddressNodes:(id)arg3 incompleteLocationResolver:(id)arg4 ;
+(id)_beautifiedLocationStringWithTitleComponents:(id)arg1 momentNodes:(id)arg2 insertLineBreak:(BOOL)arg3 keyAssetAddressNode:(id)arg4 curationAddressNodes:(id)arg5 isMatchingKeyAsset:(BOOL*)arg6 ;
+(id)_filteredAOINodesForAddressNodes:(id)arg1 ;
+(id)_validAOINodesCombinationsForCombinations:(id)arg1 aoiNodesToAddressNodesMapTable:(id)arg2 numberOfAddressNodesWithoutAOI:(unsigned long long)arg3 maximumNumberOfNonMatchingAddressNodes:(unsigned long long)arg4 ;
+(id)_sortedAOINodesCombinationsForCombinations:(id)arg1 aoiNodesToAddressNodesMapTable:(id)arg2 ;
+(id)_validAOINodesForCombination:(id)arg1 validCombinationLengths:(NSRange)arg2 validationBlock:(/*^block*/id)arg3 ;
+(id)_recursiveValidAOINodesForCombination:(id)arg1 validCombinationLengths:(NSRange)arg2 validationBlock:(/*^block*/id)arg3 currentCombination:(id)arg4 visitedNodes:(id)arg5 ;
+(id)_firstComponentInTimeFromComponents:(id)arg1 momentNodes:(id)arg2 curationAddressNodes:(id)arg3 ;
+(id)_sortedComponentsFromComponents:(id)arg1 ;
@end

