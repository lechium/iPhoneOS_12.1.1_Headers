//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "BSDescriptionProviding.h"
#import "SBAlertObserver.h"
#import "SBDashBoardViewControllerDelegate.h"
#import "SBFPrivateAuthenticationObserver.h"
#import "SBHomeButtonShowPasscodeRecognizerDelegate.h"
#import "SBLockScreenMesaCoordinatorDelegate.h"
#import "SBLockScreenViewControllerDelegate.h"
#import "SBPasscodeEntryAlertViewControllerDelegate.h"
#import "SBWallpaperColorProvider.h"
#import "SBWallpaperObserver.h"

@class NSMutableDictionary, NSString, SBDashBoardViewController, SBFAuthenticationAssertion, SBFUserAuthenticationController, SBLiftToWakeManager, SBLiquidDetectionAlert, SBLockScreenAutoUnlockAggregateRule, SBLockScreenDisabledAssertionManager, SBLockScreenMesaCoordinator, SBLockScreenUnlockRequest, SBLockScreenViewControllerBase, SBPasscodeEntryAlertViewController;

@interface SBLockScreenManager : NSObject <BSDescriptionProviding, SBLockScreenViewControllerDelegate, SBPasscodeEntryAlertViewControllerDelegate, SBAlertObserver, SBFPrivateAuthenticationObserver, SBDashBoardViewControllerDelegate, SBWallpaperColorProvider, SBLockScreenMesaCoordinatorDelegate, SBHomeButtonShowPasscodeRecognizerDelegate, SBWallpaperObserver>
{
    SBLockScreenMesaCoordinator *_mesaCoordinator;	// 8 = 0x8
    SBLockScreenViewControllerBase *_lockScreenViewController;	// 16 = 0x10
    id <SBHomeButtonShowPasscodeRecognizer> _homeButtonShowPasscodeRecognizer;	// 24 = 0x18
    _Bool _allowDisablePasscodeLockAssertion;	// 32 = 0x20
    _Bool _allowUILockUnlock;	// 33 = 0x21
    _Bool _isScreenOn;	// 34 = 0x22
    _Bool _isUILocked;	// 35 = 0x23
    _Bool _isWaitingToLockUI;	// 36 = 0x24
    SBLockScreenUnlockRequest *_unlockRequest;	// 40 = 0x28
    _Bool _uiHasBeenLockedOnce;	// 48 = 0x30
    _Bool _uiUnlocking;	// 49 = 0x31
    SBPasscodeEntryAlertViewController *_passcodeEntryController;	// 56 = 0x38
    SBFAuthenticationAssertion *_sustainAuthenticationWhileUIUnlockedAssertion;	// 64 = 0x40
    SBLockScreenDisabledAssertionManager *_lockScreenDisabledAssertionManager;	// 72 = 0x48
    _Bool _isInLostMode;	// 80 = 0x50
    SBLockScreenAutoUnlockAggregateRule *_autoUnlockRuleAggregator;	// 88 = 0x58
    _Bool _useDashBoard;	// 96 = 0x60
    _Bool _shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes;	// 97 = 0x61
    id <SBFLockOutStatusProvider> _lockOutController;	// 104 = 0x68
    SBFUserAuthenticationController *_userAuthController;	// 112 = 0x70
    SBLiquidDetectionAlert *_liquidDetectedAlert;	// 120 = 0x78
    SBLiftToWakeManager *_liftToWakeManager;	// 128 = 0x80
    NSMutableDictionary *_mesaCoordinatorDisabledAssertions;	// 136 = 0x88
    NSMutableDictionary *_mesaWalletPreArmDisabledAssertions;	// 144 = 0x90
    NSMutableDictionary *_mesaAutoUnlockingDisabledAssertions;	// 152 = 0x98
    NSMutableDictionary *_mesaUnlockingDisabledAssertions;	// 160 = 0xa0
    CDUnknownBlockType _unlockActionBlock;	// 168 = 0xa8
}

+ (id)sharedInstanceIfExists;	// IMP=0x0000000100593ed8
+ (id)sharedInstance;	// IMP=0x0000000100593ec8
+ (id)_sharedInstanceCreateIfNeeded:(_Bool)arg1;	// IMP=0x0000000100593cf8
@property(copy, nonatomic) CDUnknownBlockType unlockActionBlock; // @synthesize unlockActionBlock=_unlockActionBlock;
@property(retain, nonatomic, getter=_liftToWakeManager, setter=_setLiftToWakeManager:) SBLiftToWakeManager *liftToWakeManager; // @synthesize liftToWakeManager=_liftToWakeManager;
@property(retain, nonatomic, getter=_userAuthController, setter=_setUserAuthController:) SBFUserAuthenticationController *userAuthController; // @synthesize userAuthController=_userAuthController;
@property(retain, nonatomic, getter=_lockOutController, setter=_setLockOutController:) id <SBFLockOutStatusProvider> lockOutController; // @synthesize lockOutController=_lockOutController;
@property(nonatomic, getter=isUIUnlocking) _Bool UIUnlocking; // @synthesize UIUnlocking=_uiUnlocking;
@property(readonly) _Bool isWaitingToLockUI; // @synthesize isWaitingToLockUI=_isWaitingToLockUI;
@property(readonly) _Bool isUILocked; // @synthesize isUILocked=_isUILocked;
@property(readonly, nonatomic) SBLockScreenViewControllerBase *lockScreenViewController; // @synthesize lockScreenViewController=_lockScreenViewController;
- (void).cxx_destruct;	// IMP=0x000000010059f164
- (void)wallpaperDidChangeForVariant:(long long)arg1;	// IMP=0x000000010059f008
- (void)extendedKeybagLockStateChanged:(_Bool)arg1;	// IMP=0x000000010059eefc
- (void)alertDidDeactivate:(id)arg1;	// IMP=0x000000010059eb58
- (void)passcodeEntryAlertViewControllerWantsEmergencyCall:(id)arg1;	// IMP=0x000000010059eafc
- (_Bool)passcodeEntryAlertViewController:(id)arg1 authenticatePasscode:(id)arg2;	// IMP=0x000000010059ead8
- (_Bool)_shouldUnlockUIOnKeyDownEvent;	// IMP=0x000000010059e8b4
- (_Bool)handleKeyHIDEvent:(struct __IOHIDEvent *)arg1;	// IMP=0x000000010059e7e8
- (_Bool)_shouldBeInSetupMode;	// IMP=0x000000010059e6cc
- (void)_maybeLaunchSetupForcingCheckIfNotBricked:(_Bool)arg1;	// IMP=0x000000010059df88
- (void)activationChanged:(id)arg1;	// IMP=0x000000010059df78
- (void)enableLostModePlugin;	// IMP=0x000000010059dd00
- (_Bool)isInLostMode;	// IMP=0x000000010059dcf0
- (void)exitLostModeIfNecessaryFromRemoteRequest:(_Bool)arg1;	// IMP=0x000000010059dbac
- (void)activateLostModeForRemoteLock:(_Bool)arg1;	// IMP=0x000000010059d738
- (void)_lockFeaturesForRemoteLock:(_Bool)arg1;	// IMP=0x000000010059d608
- (void)remoteLock:(_Bool)arg1;	// IMP=0x000000010059d48c
- (void)_liquidDetectionChanged;	// IMP=0x000000010059ceac
- (void)noteMenuButtonDoublePress;	// IMP=0x000000010059ce94
- (void)noteMenuButtonSinglePress;	// IMP=0x000000010059ce7c
- (void)_frontmostDisplayChanged:(id)arg1;	// IMP=0x000000010059cda8
- (void)_lockScreenDimmed:(id)arg1;	// IMP=0x000000010059cd44
- (void)_handleBacklightFadeEnded;	// IMP=0x000000010059ccfc
- (void)_handleBacklightLevelChanged:(id)arg1;	// IMP=0x000000010059cb64
- (void)_resetOrRestoreStateChanged:(id)arg1;	// IMP=0x000000010059c88c
- (void)_deviceBlockedChanged:(id)arg1;	// IMP=0x000000010059c6ec
- (void)_authenticationStateChanged:(id)arg1;	// IMP=0x000000010059c4e4
- (void)_evaluatePreArmDisabledAssertions;	// IMP=0x000000010059c3b0
- (void)_setupModeChanged;	// IMP=0x000000010059c3a4
- (void)_callCountChanged;	// IMP=0x000000010059c398
- (void)attemptUnlockWithMesa;	// IMP=0x000000010059c388
- (void)attemptUnlockWithPasscode:(id)arg1;	// IMP=0x000000010059c2fc
- (_Bool)_attemptUnlockWithPasscode:(id)arg1 mesa:(_Bool)arg2 finishUIUnlock:(_Bool)arg3;	// IMP=0x000000010059bcb4
- (_Bool)_attemptUnlockWithPasscode:(id)arg1 finishUIUnlock:(_Bool)arg2;	// IMP=0x000000010059bc9c
- (void)startUIUnlockFromSource:(int)arg1 withOptions:(id)arg2;	// IMP=0x000000010059bc90
- (void)_setMesaUnlockingDisabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x000000010059ba90
- (void)_postLockCompletedNotification:(_Bool)arg1;	// IMP=0x000000010059b99c
- (void)_noteStartupTransitionDidBegin;	// IMP=0x000000010059b96c
- (void)_noteStartupTransitionWillBegin;	// IMP=0x000000010059b958
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x000000010059b86c
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x000000010059b818
- (id)succinctDescriptionBuilder;	// IMP=0x000000010059b7fc
- (id)succinctDescription;	// IMP=0x000000010059b7a8
@property(readonly, copy) NSString *description;
- (void)_performLockScreenAlertDeactivationTransition;	// IMP=0x000000010059b1e4
- (void)_performLockScreenAlertActivationTransitionAnimated:(_Bool)arg1 dimInAnimation:(_Bool)arg2 animationProvider:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010059a8cc
- (void)_prepareWallpaperForUnlockedMode;	// IMP=0x000000010059a84c
- (void)_prepareWallpaperForLockedMode;	// IMP=0x000000010059a718
- (void)_setHomeButtonShowPasscodeRecognizer:(id)arg1;	// IMP=0x000000010059a690
- (void)updateSpringBoardStatusBarForLockScreenTeardown;	// IMP=0x000000010059a54c
- (_Bool)unlockWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010059954c
- (_Bool)_isPasscodeVisible;	// IMP=0x00000001005994fc
- (_Bool)isPasscodeEntryAlertVisible;	// IMP=0x00000001005994e4
- (_Bool)_setPasscodeVisible:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000100599174
- (void)setPasscodeVisible:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000100599168
- (_Bool)_isUnlockDisabled;	// IMP=0x0000000100599110
- (void)_runUnlockActionBlock:(_Bool)arg1;	// IMP=0x000000010059902c
- (_Bool)isLockScreenDisabledForAssertion;	// IMP=0x0000000100599014
- (void)removeLockScreenDisableAssertion:(id)arg1;	// IMP=0x0000000100598ffc
- (void)addLockScreenDisableAssertion:(id)arg1;	// IMP=0x0000000100598fe4
- (void)_handleExternalUIUnlock:(id)arg1;	// IMP=0x0000000100598fac
- (_Bool)_finishUIUnlockFromSource:(int)arg1 withOptions:(id)arg2;	// IMP=0x0000000100598920
- (_Bool)unlockUIFromSource:(int)arg1 withOptions:(id)arg2;	// IMP=0x0000000100597cf8
- (_Bool)_canAttemptRealUIUnlockIgnoringBacklightNonsenseWithReason:(out id *)arg1;	// IMP=0x0000000100597c80
- (void)_sendUILockStateChangedNotification;	// IMP=0x0000000100597a64
- (void)_lockUI;	// IMP=0x00000001005978dc
- (void)_reallySetUILocked:(_Bool)arg1;	// IMP=0x0000000100597734
- (void)_setUILocked:(_Bool)arg1;	// IMP=0x0000000100597644
- (void)_createAuthenticationAssertion;	// IMP=0x00000001005975b8
- (void)_clearAuthenticationLockAssertion;	// IMP=0x000000010059756c
- (void)_relockUIForButtonPress:(_Bool)arg1 afterCall:(_Bool)arg2;	// IMP=0x00000001005972e4
- (void)_activateLockScreenAnimated:(_Bool)arg1 animationProvider:(CDUnknownBlockType)arg2 automatically:(_Bool)arg3 inScreenOffMode:(_Bool)arg4 dimInAnimation:(_Bool)arg5 dismissNotificationCenter:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x0000000100596ab8
- (void)_setMesaCoordinatorDisabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x00000001005968b8
- (void)_setWalletPreArmDisabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x00000001005966b8
- (void)_handleAuthenticationFeedback:(id)arg1;	// IMP=0x00000001005964b8
- (void)homeButtonShowPasscodeRecognizerDidFailToRecognize:(id)arg1;	// IMP=0x00000001005964a8
- (void)homeButtonShowPasscodeRecognizerRequestsPasscodeUIToBeShown:(id)arg1;	// IMP=0x00000001005963e8
- (_Bool)mesaCoordinator:(id)arg1 requestsAuthenticationFeedback:(id)arg2;	// IMP=0x000000010059636c
- (_Bool)mesaCoordinator:(id)arg1 requestsUnlockWithIntent:(int)arg2;	// IMP=0x00000001005961e4
- (id)averageColorForCurrentWallpaperInScreenRect:(struct CGRect)arg1;	// IMP=0x0000000100596154
- (void)dashBoardViewController:(id)arg1 unlockWithRequest:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100596104
- (void)dashBoardViewController:(id)arg1 requestsTouchIDDisabled:(_Bool)arg2 forReason:(id)arg3;	// IMP=0x0000000100596098
- (void)dashBoardViewControllerIrisPlayingDidFinish:(id)arg1;	// IMP=0x0000000100596078
- (void)setBiometricAutoUnlockingDisabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x0000000100595e78
@property(readonly) _Bool bioAuthenticatedWhileMenuButtonDown;
- (_Bool)handleTransitionRequest:(id)arg1;	// IMP=0x0000000100595dac
@property(readonly, nonatomic) id <SBAlertingNotificationDestination> notificationDestination;
@property(readonly, nonatomic) SBDashBoardViewController *dashBoardViewController;
- (void)lockUIFromSource:(int)arg1 withOptions:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100594e24
- (void)lockUIFromSource:(int)arg1 withOptions:(id)arg2;	// IMP=0x0000000100594e14
@property(readonly) _Bool isLockScreenVisible;
@property(readonly) _Bool isLockScreenActive;
@property(readonly) _Bool shouldPlayLockSound;
@property(readonly) _Bool shouldHandlePocketStateChanges;
- (_Bool)shouldLockUIAfterEndingCall;	// IMP=0x0000000100594c24
- (_Bool)_shouldLockAfterEndingFaceTimeCall;	// IMP=0x0000000100594b00
- (_Bool)_shouldLockAfterEndingTelephonyCall;	// IMP=0x0000000100594a30
- (_Bool)hasUIEverBeenLocked;	// IMP=0x0000000100594a20
- (id)_newLockScreenController;	// IMP=0x00000001005947d0
- (id)init;	// IMP=0x0000000100593ee8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

