//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableSet;

@interface SBOrientationLockManager : NSObject
{
    long long _userLockedOrientation;	// 8 = 0x8
    long long _previousLockedOrientation;	// 16 = 0x10
    struct __CFRunLoopObserver *_runLoopObserver;	// 24 = 0x18
    NSMutableSet *_lockOverrideReasons;	// 32 = 0x20
}

+ (id)sharedInstance;	// IMP=0x00000001002688ac
- (void).cxx_destruct;	// IMP=0x000000010026a02c
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x000000010026a020
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x0000000100269fcc
- (id)succinctDescriptionBuilder;	// IMP=0x0000000100269e74
- (id)succinctDescription;	// IMP=0x0000000100269e20
- (id)description;	// IMP=0x0000000100269e14
- (void)_handler_runLoopObserverDispose;	// IMP=0x0000000100269ddc
- (void)_setupRunLoopObserverIfNecessaryForOrientation:(long long)arg1 andInitialLockState:(_Bool)arg2;	// IMP=0x0000000100269978
- (void)_updateLockStateWithOrientation:(long long)arg1 forceUpdateHID:(_Bool)arg2 changes:(CDUnknownBlockType)arg3;	// IMP=0x0000000100269750
- (void)_updateLockStateWithChanges:(CDUnknownBlockType)arg1;	// IMP=0x0000000100269734
- (void)updateLockOverrideForCurrentDeviceOrientation;	// IMP=0x00000001002696dc
- (_Bool)lockOverrideEnabled;	// IMP=0x00000001002696ac
- (void)enableLockOverrideForReason:(id)arg1 forceOrientation:(long long)arg2;	// IMP=0x0000000100269580
- (void)enableLockOverrideForReason:(id)arg1 suggestOrientation:(long long)arg2;	// IMP=0x0000000100269454
- (void)setLockOverrideEnabled:(_Bool)arg1 forReason:(id)arg2;	// IMP=0x000000010026931c
- (void)_removeLockOverrideReason:(id)arg1;	// IMP=0x00000001002691dc
- (void)_addLockOverrideReason:(id)arg1 orientation:(long long)arg2 force:(_Bool)arg3;	// IMP=0x0000000100269058
- (long long)userLockOrientation;	// IMP=0x0000000100269048
- (long long)effectiveLockedOrientation;	// IMP=0x0000000100269008
- (_Bool)isUserLocked;	// IMP=0x0000000100268ff0
- (_Bool)isEffectivelyLocked;	// IMP=0x0000000100268fa8
- (void)unlock;	// IMP=0x0000000100268dc4
- (void)lock:(long long)arg1;	// IMP=0x0000000100268ba8
- (void)lock;	// IMP=0x0000000100268ad8
- (void)dealloc;	// IMP=0x0000000100268a74
- (id)init;	// IMP=0x00000001002689f4
- (void)restoreStateFromPrefs;	// IMP=0x0000000100268940

@end

