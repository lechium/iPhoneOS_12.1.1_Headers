//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "BSTransactionObserver.h"
#import "SBCoordinatedPresenting.h"
#import "SBFAuthenticationResponder.h"
#import "SBLockScreenActionProvider.h"
#import "SBPresentingDelegate.h"
#import "SBUIPasscodeLockViewDelegate.h"

@class BBObserver, NSMutableArray, NSSet, NSString, NSURL, SBAppStatusBarSettingsAssertion, SBApplication, SBBestAppSuggestion, SBBounceSettings, SBDisableAppStatusBarAlphaChangesAssertion, SBFAuthenticationAssertion, SBLockScreenActionContext, SBLockScreenBounceAnimator, SBLockScreenSlideUpToAppWorkspaceTransaction, SBLockScreenView, SBNotificationCenterBounceAnimator, SBUIPasscodeViewWithLockScreenStyle, UIImage, UIView, _UIDynamicValueAnimation;

@interface SBLockScreenSlideUpToAppController : NSObject <SBPresentingDelegate, SBUIPasscodeLockViewDelegate, BSTransactionObserver, SBFAuthenticationResponder, SBCoordinatedPresenting, SBLockScreenActionProvider>
{
    _Bool _isInScreenOffMode;	// 8 = 0x8
    UIView *_slidingStatusBarView;	// 16 = 0x10
    SBLockScreenView *_lockScreenView;	// 24 = 0x18
    _Bool _currentlySliding;	// 32 = 0x20
    SBLockScreenBounceAnimator *_bounceAnimator;	// 40 = 0x28
    _UIDynamicValueAnimation *_dynamicAnimation;	// 48 = 0x30
    id <SBPresentingDelegate> _presentingDelegate;	// 56 = 0x38
    SBBounceSettings *_bounceSettings;	// 64 = 0x40
    SBApplication *_targetApp;	// 72 = 0x48
    SBBestAppSuggestion *_targetAppInfo;	// 80 = 0x50
    _Bool _targetAppIsSiri;	// 88 = 0x58
    _Bool _targetAppIsInCallService;	// 89 = 0x59
    _Bool _deactivatingForInCallService;	// 90 = 0x5a
    _Bool _appSuggestionWasInvoked;	// 91 = 0x5b
    NSURL *_targetURL;	// 96 = 0x60
    UIImage *_grabberImage;	// 104 = 0x68
    SBAppStatusBarSettingsAssertion *_hideStatusBarAssertion;	// 112 = 0x70
    BBObserver *_bulletinObserver;	// 120 = 0x78
    _Bool _attemptingUnlock;	// 128 = 0x80
    _Bool _showingPasscodeView;	// 129 = 0x81
    _Bool _dismissingPasscodeView;	// 130 = 0x82
    _Bool _defaultImagesNeedUpdateUponPasscodeExit;	// 131 = 0x83
    NSMutableArray *_deferredAppUpdateBlocks;	// 136 = 0x88
    _Bool _executingDeferredAppUpdateBlocks;	// 144 = 0x90
    _Bool _waitingToDeactivateForActivityLaunch;	// 145 = 0x91
    CDUnknownBlockType _preUIUnlockActions;	// 152 = 0x98
    SBFAuthenticationAssertion *_authenticationAssertionForContinuityUnlock;	// 160 = 0xa0
    id <SBUIPasscodeLockView> _passcodeSenderView;	// 168 = 0xa8
    UIView *_clippingView;	// 176 = 0xb0
    UIView *_appDefaultImageView;	// 184 = 0xb8
    UIView *_appBackgroundView;	// 192 = 0xc0
    SBUIPasscodeViewWithLockScreenStyle *_passcodeView;	// 200 = 0xc8
    UIView *_passcodeOverscrollView;	// 208 = 0xd0
    SBLockScreenSlideUpToAppWorkspaceTransaction *_slideUpTransaction;	// 216 = 0xd8
    SBLockScreenActionContext *_actionContext;	// 224 = 0xe0
    _Bool _disablingOcclusionsForTargetApp;	// 232 = 0xe8
    _Bool _launchingAppFromNonOccludedState;	// 233 = 0xe9
    id <SBLockScreenSlideUpToAppControllerDelegate> _delegate;	// 240 = 0xf0
    double _previousSlidePercent;	// 248 = 0xf8
    _Bool _didAbortBounce;	// 256 = 0x100
    SBDisableAppStatusBarAlphaChangesAssertion *_disableStatusBarAssertion;	// 264 = 0x108
    double _boundaryTranslationInY;	// 272 = 0x110
    SBNotificationCenterBounceAnimator *_slideDownBounceAnimator;	// 280 = 0x118
    _UIDynamicValueAnimation *_slideUpAnimation;	// 288 = 0x120
}

@property(retain, nonatomic) _UIDynamicValueAnimation *slideUpAnimation; // @synthesize slideUpAnimation=_slideUpAnimation;
@property(retain, nonatomic) SBNotificationCenterBounceAnimator *slideDownBounceAnimator; // @synthesize slideDownBounceAnimator=_slideDownBounceAnimator;
@property(nonatomic) double boundaryTranslationInY; // @synthesize boundaryTranslationInY=_boundaryTranslationInY;
@property(nonatomic) _Bool didAbortBounce; // @synthesize didAbortBounce=_didAbortBounce;
@property(retain, nonatomic) SBDisableAppStatusBarAlphaChangesAssertion *disableStatusBarAssertion; // @synthesize disableStatusBarAssertion=_disableStatusBarAssertion;
@property(nonatomic) __weak id <SBLockScreenSlideUpToAppControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;	// IMP=0x00000001001f3a44
- (id)bounceAnimator;	// IMP=0x00000001001f38e8
- (id)_newDynamicAnimationForTargetValue:(double)arg1 withInitialVelocity:(double)arg2;	// IMP=0x00000001001f37b8
- (id)_newBounceAnimatorWithGrabberView:(id)arg1;	// IMP=0x00000001001f3260
- (void)passcodeLockViewPasscodeEnteredViaMesa:(id)arg1;	// IMP=0x00000001001f325c
- (void)passcodeLockViewCancelButtonPressed:(id)arg1;	// IMP=0x00000001001f31dc
- (void)passcodeLockViewPasscodeEntered:(id)arg1;	// IMP=0x00000001001f2f04
- (void)passcodeLockViewPasscodeDidChange:(id)arg1;	// IMP=0x00000001001f2e10
- (void)handleInvalidAuthenticationRequest:(id)arg1;	// IMP=0x00000001001f2e00
- (void)handleFailedAuthenticationRequest:(id)arg1 error:(id)arg2;	// IMP=0x00000001001f2da4
- (void)handleSuccessfulAuthenticationRequest:(id)arg1;	// IMP=0x00000001001f2d28
- (void)presentingControllerDidFinishPresentation:(id)arg1;	// IMP=0x00000001001f2d08
- (void)presentingController:(id)arg1 willHandleGesture:(id)arg2;	// IMP=0x00000001001f2ce8
- (_Bool)presentingController:(id)arg1 gestureRecognizerShouldBegin:(id)arg2;	// IMP=0x00000001001f2cc8
- (_Bool)presentingController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;	// IMP=0x00000001001f2c60
- (void)treatCurrentPositionAsBoundaryforGesture:(id)arg1;	// IMP=0x00000001001f2ab0
- (void)reenableGestureRecognizer:(id)arg1;	// IMP=0x00000001001f2a98
- (void)cancelGestureRecognizer:(id)arg1;	// IMP=0x00000001001f2a80
- (void)abortAnimatedTransition;	// IMP=0x00000001001f21b8
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 wasCancelled:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001f2050
- (double)_foregroundTranslationForLocation:(struct CGPoint)arg1;	// IMP=0x00000001001f1ff4
- (void)updateTransitionWithTouchLocation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;	// IMP=0x00000001001f1fc0
- (void)beginPresentationWithTouchLocation:(struct CGPoint)arg1 presentationBegunHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001f1eec
- (_Bool)isPresentingControllerTransitioning;	// IMP=0x00000001001f1ed4
@property(readonly, nonatomic) unsigned long long hintEdge;
@property(readonly, nonatomic) double hintDisplacement;
@property(readonly, nonatomic) long long coordinatedPresentingControllerIdentifier;
@property(readonly, nonatomic) NSSet *tapExcludedViews;
@property(readonly, nonatomic) NSSet *gestures;
@property(nonatomic) id <SBPresentingDelegate> presentingDelegate;
- (void)transactionDidComplete:(id)arg1;	// IMP=0x00000001001f1d10
- (void)transactionDidBegin:(id)arg1;	// IMP=0x00000001001f1a84
- (void)_deviceBlockedStateChanged:(id)arg1;	// IMP=0x00000001001f19c0
- (_Bool)isShowingPasscodeView;	// IMP=0x00000001001f1990
- (_Bool)hasActiveUnlockActionContext;	// IMP=0x00000001001f1980
- (_Bool)wantsToShowStatusBar;	// IMP=0x00000001001f1940
- (void)_clearAppDefaultImageAndRemoveFromSuperview:(_Bool)arg1;	// IMP=0x00000001001f1900
- (void)_passcodeLockStateChanged;	// IMP=0x00000001001f1898
- (void)_addOrRemovePasscodeViewIfNecessary;	// IMP=0x00000001001f15d8
- (void)setTargetURL:(id)arg1;	// IMP=0x00000001001f15a0
- (void)setTargetApp:(id)arg1 withAppSuggestion:(id)arg2;	// IMP=0x00000001001f1180
- (void)presentTargetAppAnimated:(_Bool)arg1;	// IMP=0x00000001001f0f28
- (void)activateTargetApp;	// IMP=0x00000001001f0ef4
- (void)_activateApp:(id)arg1 withAppInfo:(id)arg2 andURL:(id)arg3 animated:(_Bool)arg4;	// IMP=0x00000001001f0abc
- (void)hideSlidingStatusBar;	// IMP=0x00000001001f0a1c
- (void)abortDynamicAnimationForScreenOff;	// IMP=0x00000001001f09fc
- (void)_executeDeferredAppUpdateBlocks;	// IMP=0x00000001001f08bc
- (void)_commonGestureCleanup;	// IMP=0x00000001001f0838
- (void)finalizeGesture;	// IMP=0x00000001001ef220
- (void)_animateSlideUpWithVelocity:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001eef98
- (void)_animateSlideDownWithVelocity:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001eece0
- (void)_finishSlideDownWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001eec40
- (void)translateSlidingViewByY:(double)arg1;	// IMP=0x00000001001ee43c
- (void)performGeneralCleanupForUserAction:(_Bool)arg1;	// IMP=0x00000001001ee340
- (void)_cleanupFromDismissal;	// IMP=0x00000001001ee1bc
- (void)_cleanupBackgroundLaunchNonsense;	// IMP=0x00000001001ee0d0
- (void)_handleAppLaunchedUnderLockScreen;	// IMP=0x00000001001edef8
- (void)prepareForSlideUpAnimation;	// IMP=0x00000001001ed328
- (id)_lockScreenViewFakeStatusBar;	// IMP=0x00000001001ed0c0
- (void)invalidateLockScreenActionContext;	// IMP=0x00000001001ed0a8
- (id)lockScreenActionContext;	// IMP=0x00000001001ed098
- (void)deactivate;	// IMP=0x00000001001ecfc4
- (void)activate;	// IMP=0x00000001001ecfc0
- (void)didRotateFromInterfaceOrientation:(long long)arg1;	// IMP=0x00000001001ecee8
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;	// IMP=0x00000001001ecd70
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;	// IMP=0x00000001001ecd6c
- (void)setInScreenOffMode:(_Bool)arg1;	// IMP=0x00000001001eccdc
- (void)setGrabberViewImage:(id)arg1;	// IMP=0x00000001001ecbec
- (void)setGrabberOnLockScreen:(id)arg1;	// IMP=0x00000001001ecb34
- (id)_createGrabberView;	// IMP=0x00000001001ec9ac
- (void)_setupBounceAnimatorAndGrabberView;	// IMP=0x00000001001ec918
- (void)setLockScreenView:(id)arg1 force:(_Bool)arg2;	// IMP=0x00000001001ec550
- (id)lockScreenView;	// IMP=0x00000001001ec540
- (void)dealloc;	// IMP=0x00000001001ec45c
- (id)init;	// IMP=0x00000001001ec110

// Remaining properties
@property(readonly, nonatomic) NSSet *conflictingGestures;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

