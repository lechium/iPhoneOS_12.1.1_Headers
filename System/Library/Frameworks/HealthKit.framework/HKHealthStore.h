/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:04 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthKit/HealthKit-Structs.h>
#import <libobjc.A.dylib/HKHealthStoreClientInterface.h>
#import <libobjc.A.dylib/_HKDeepBreathingSessionLifecycleDelegate.h>
#import <libobjc.A.dylib/_HKXPCExportable.h>
#import <libobjc.A.dylib/HKQueryDelegate.h>

@protocol OS_dispatch_queue, HDHealthStoreServerInterface, _HKAuthorizationPresentationController, _HKDocumentPickerPresentationController;
@class NSObject, _HKXPCConnection, HKProfileIdentifier, NSString, NSMutableDictionary, HKHealthServicesManager, NSMutableSet, NSHashTable, NSSet;

@interface HKHealthStore : NSObject <HKHealthStoreClientInterface, _HKDeepBreathingSessionLifecycleDelegate, _HKXPCExportable, HKQueryDelegate> {

	NSObject*<OS_dispatch_queue> _resourceQueue;
	NSObject*<OS_dispatch_queue> _proxyQueue;
	_HKXPCConnection* _healthdConnection;
	HKProfileIdentifier* _profileIdentifier;
	NSString* _debuggingIdentifier;
	id<HDHealthStoreServerInterface> _serverProxy;
	NSMutableDictionary* _subserverProxiesBySelector;
	id<_HKAuthorizationPresentationController> _authorizationPresentationController;
	id<_HKDocumentPickerPresentationController> _documentPickerPresentationController;
	/*^block*/id _authorizationDelegateTransactionErrorHandler;
	HKHealthServicesManager* _healthServicesManager;
	NSMutableSet* _queries;
	NSHashTable* _fitnessMachineConnections;
	NSHashTable* _fitnessMachineConnectionInitiators;
	NSMutableSet* _deepBreathingSessions;
	NSMutableDictionary* _waitForSyncStartHandlersByUUID;
	unsigned _applicationSDKVersion;
	NSObject*<OS_dispatch_queue> _clientQueue;

}

@property (nonatomic,copy,readonly) HKProfileIdentifier * profileIdentifier; 
@property (getter=_queries,nonatomic,readonly) NSSet * queries;                              //@synthesize queries=_queries - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> clientQueue;                     //@synthesize clientQueue=_clientQueue - In the implementation block
@property (nonatomic,readonly) HKHealthServicesManager * healthServicesManager; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isHealthDataAvailable;
+(BOOL)_applicationHasRunningWorkout;
-(id)initWithListenerEndpoint:(id)arg1 ;
-(void)deleteMedicalIDData;
-(void)executeQuery:(id)arg1 ;
-(void)startHealthServiceDiscovery:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)endHealthServiceDiscovery:(id)arg1 ;
-(void)startHealthServiceSession:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)endHealthServiceSession:(id)arg1 ;
-(void)registerPeripheralIdentifier:(id)arg1 name:(id)arg2 services:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)unregisterPeripheralIdentifier:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)healthServicePairingsWithHandler:(/*^block*/id)arg1 ;
-(void)healthPeripheralsWithFilter:(unsigned long long)arg1 handler:(/*^block*/id)arg2 ;
-(void)addHealthServicePairing:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)removeHealthServicePairing:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_workoutServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)finishAllWorkoutsWithCompletion:(/*^block*/id)arg1 ;
-(void)_notificationServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(id)initWithListenerEndpoint:(id)arg1 profileIdentifier:(id)arg2 identifier:(id)arg3 ;
-(void)_resourceQueue_setUpWithEndpoint:(id)arg1 ;
-(void)_resourceQueue_discardServerProxies;
-(void)_serverProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_subserverProxyForSelector:(SEL)arg1 completion:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)_validateAuthorizationRequestWithShareTypes:(id)arg1 readTypes:(id)arg2 ;
-(void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)_throwIfClinicalTypesRequestedToShare:(id)arg1 ;
-(void)_throwIfParentTypeNotRequestedForSharing:(BOOL)arg1 types:(id)arg2 ;
-(void)_throwIfAuthorizationDisallowedForSharing:(BOOL)arg1 types:(id)arg2 ;
-(void)_validateAuthorizationInfoPlist;
-(void)_validatePurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2 ;
-(BOOL)_shouldIncorporateClinicalHealthRecordsRequestFlowForSharingTypes:(id)arg1 readingTypes:(id)arg2 ;
-(void)_validateClinicalHealthRecordsPurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2 ;
-(BOOL)_shouldIncorporateHealthDataRequestFlowForSharingTypes:(id)arg1 readingTypes:(id)arg2 ;
-(void)_validateHealthDataPurposeStringsForSharingTypes:(id)arg1 readingTypes:(id)arg2 ;
-(void)_clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:(id)arg1 ;
-(void)saveObjects:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_saveObjects:(id)arg1 atomically:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_sendNextObjectBatch:(id)arg1 lastRange:(NSRange)arg2 server:(id)arg3 transaction:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_deleteObjects:(id)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteObjectsOfType:(id)arg1 predicate:(id)arg2 options:(unsigned long long)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)executeQuery:(id)arg1 activationHandler:(/*^block*/id)arg2 ;
-(id)_characteristicForDataType:(id)arg1 error:(id*)arg2 ;
-(BOOL)_setCharacteristic:(id)arg1 forDataType:(id)arg2 error:(id*)arg3 ;
-(void)_generatePauseOrResumeRequest:(/*^block*/id)arg1 ;
-(void)_resourceQueue_addFitnessMachineConnection:(id)arg1 ;
-(void)_resourceQueue_addFitnessMachineConnectionInitiator:(id)arg1 ;
-(void)_closeTransactionWithType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 ;
-(void)_setBackgroundDeliveryFrequencyDataType:(id)arg1 frequency:(long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)_currentValueForQuantityTypeCode:(long long)arg1 characteristicTypeCode:(long long)arg2 beforeDate:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_mostRecentQuantityOfType:(id)arg1 beforeDate:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_medicalIDServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)updateMedicalIDData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteMedicalIDDataWithCompletion:(/*^block*/id)arg1 ;
-(void)_utilityServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)deepBreathingSessionDidComplete:(id)arg1 ;
-(void)queryDidFinishExecuting:(id)arg1 ;
-(void)closeTransactionForType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 query:(id)arg4 ;
-(id)initWithListenerEndpoint:(id)arg1 profileIdentifier:(id)arg2 ;
-(id)unitTest_replaceListenerEndpoint:(id)arg1 ;
-(void)_healthServicesServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_nanoSyncServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_cloudSyncServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_staticSyncServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_queryControlServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)_profileServerProxyWithCompletion:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(void)fetchPluginServiceEndpointForIdentifier:(id)arg1 endpointHandler:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)fetchTaskServerEndpointForIdentifier:(id)arg1 taskUUID:(id)arg2 configuration:(id)arg3 endpointHandler:(/*^block*/id)arg4 errorHandler:(/*^block*/id)arg5 ;
-(void)hasSourceWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)orderedSourcesForObjectType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_fetchDevicesMatchingProperty:(id)arg1 values:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 options:(unsigned long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)deleteSourceWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteObjectsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)associateSampleUUIDs:(id)arg1 withSampleUUID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(long long)authorizationStatusForType:(id)arg1 ;
-(void)getRequestStatusForAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)handleAuthorizationForExtensionWithCompletion:(/*^block*/id)arg1 ;
-(void)allAuthorizationRecordsForType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)retrieveAllAuthorizationRecordsForSample:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 prompt:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 sourceHandler:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)resetSelectedObjectAuthorizationStatuses:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)earliestPermittedSampleDate;
-(void)saveObject:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)deleteObject:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)deleteObjects:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)deleteObjectsOfType:(id)arg1 predicate:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)deleteObject:(id)arg1 options:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)deleteObjects:(id)arg1 options:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)dateOfBirthWithError:(id*)arg1 ;
-(BOOL)_setDateOfBirthComponents:(id)arg1 error:(id*)arg2 ;
-(BOOL)_setBiologicalSex:(long long)arg1 error:(id*)arg2 ;
-(BOOL)_setBloodType:(long long)arg1 error:(id*)arg2 ;
-(BOOL)_setFitzpatrickSkinType:(long long)arg1 error:(id*)arg2 ;
-(BOOL)_setWheelchairUse:(long long)arg1 error:(id*)arg2 ;
-(BOOL)_setBodyMassCharacteristicQuantity:(id)arg1 error:(id*)arg2 ;
-(id)_leanBodyMassCharacteristicQuantityWithError:(id*)arg1 ;
-(BOOL)_setLeanBodyMassCharacteristicQuantity:(id)arg1 error:(id*)arg2 ;
-(BOOL)_setHeightCharacteristicQuantity:(id)arg1 error:(id*)arg2 ;
-(void)_activeWorkoutApplicationIdentifierWithCompletion:(/*^block*/id)arg1 ;
-(void)_currentWorkoutSnapshotWithCompletion:(/*^block*/id)arg1 ;
-(void)_generateWorkoutMarkerWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)supportsHealthRecords;
-(void)addSamples:(id)arg1 toWorkout:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_replaceWorkout:(id)arg1 withWorkout:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)startWorkoutSession:(id)arg1 ;
-(void)endWorkoutSession:(id)arg1 ;
-(void)pauseWorkoutSession:(id)arg1 ;
-(void)resumeWorkoutSession:(id)arg1 ;
-(void)startWatchAppWithWorkoutConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)recoverActiveWorkoutSessionWithCompletion:(/*^block*/id)arg1 ;
-(id)_createFitnessMachineConnection;
-(id)_resourceQueue_fitnessMachineConnectionForUUID:(id)arg1 ;
-(id)_createFitnessMachineConnectionInitiator;
-(void)_createDeepBreathingSessionWithConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)enableBackgroundDeliveryForType:(id)arg1 frequency:(long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)disableBackgroundDeliveryForType:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)disableAllBackgroundDeliveryWithCompletion:(/*^block*/id)arg1 ;
-(void)_calculateBMRForDate:(id)arg1 useEndOfDay:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)splitTotalEnergy:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 resultsHandler:(/*^block*/id)arg4 ;
-(void)_weeklySummaryInfoForDate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(/*^block*/id)_selectCompletionOnClientQueue:(/*^block*/id)arg1 ;
-(/*^block*/id)_objectHandlerOnClientQueue:(/*^block*/id)arg1 ;
-(void)_addWaitForSyncStartHandlerWithUUID:(id)arg1 waitForSyncSyncStartHandler:(/*^block*/id)arg2 ;
-(void)_removeWaitForSyncStartHandlerWithUUID:(id)arg1 ;
-(void)setDefaultValue:(id)arg1 forKey:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)removeDefaultForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)setHealthLiteValue:(id)arg1 forKey:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)getHealthLiteValueForKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchServerURLForAssetType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setServerURL:(id)arg1 forAssetType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)getHealthDirectorySizeInBytesWithCompletion:(/*^block*/id)arg1 ;
-(void)obliterateHealthDataWithOptions:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitMetricsIgnoringAnchor:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchMedicalIDEmergencyContactsWithCompletion:(/*^block*/id)arg1 ;
-(void)badgeHealthAppForEmergencyContactsConsolidationWithCompletion:(/*^block*/id)arg1 ;
-(void)suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)invalidateActivityAlertSuppressionForIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)containerAppExtensionEntitlementsWithCompletion:(/*^block*/id)arg1 ;
-(void)unitTest_setApplicationSDKVersion:(unsigned)arg1 ;
-(id)_queries;
-(void)forceCloudSyncWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)createCloudShareWithRecipient:(id)arg1 sampleTypes:(id)arg2 maxSampleAge:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)forceCloudSyncWithOptions:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchCloudSyncRequiredWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchCloudSyncProgress:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)forceCloudSyncWithOptions:(unsigned long long)arg1 progress:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)forceCloudResetWithProgress:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchCloudDescriptionWithProgress:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)disableCloudSyncAndDeleteAllCloudDataWithProgress:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)waitOnHealthCloudSyncWithProgress:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)runStaticSyncExportWithOptions:(unsigned long long)arg1 storeIdentifier:(id)arg2 URL:(id)arg3 batchSize:(unsigned long long)arg4 progressHandler:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)runStaticSyncImportWithOptions:(unsigned long long)arg1 storeIdentifier:(id)arg2 URL:(id)arg3 progressHandler:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(void)fetchURLForAnalyticsFileWithName:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithProfileIdentifier:(id)arg1 ;
-(void)fetchDisplayName:(/*^block*/id)arg1 ;
-(void)setDisplayName:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)createProfileOfType:(long long)arg1 displayName:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)getAllProfilesWithCompletion:(/*^block*/id)arg1 ;
-(void)forceNanoSyncWithOptions:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchNanoSyncPairedDevicesWithCompletion:(/*^block*/id)arg1 ;
-(void)forceNanoSyncWithPullRequest:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)forceLastChanceNanoSyncWithCompletion:(/*^block*/id)arg1 ;
-(void)resetNanoSyncWithCompletion:(/*^block*/id)arg1 ;
-(void)saveObjects:(id)arg1 sourceBundleIdentifier:(id)arg2 sourceVersion:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)startFakingDataWithActivityType:(long long)arg1 speed:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)stopFakingDataWithCompletion:(/*^block*/id)arg1 ;
-(void)diagnosticsForKeys:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)createFakeAppleSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 productType:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)fetchAllDevicesWithCompletion:(/*^block*/id)arg1 ;
-(void)saveObjects:(id)arg1 sourceBundleIdentifier:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)select:(id)arg1 from:(id)arg2 where:(id)arg3 groupBy:(id)arg4 orderBy:(id)arg5 limit:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)runAWDTask:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)resetAWDTask:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)observeDataCollectionForType:(id)arg1 interval:(double)arg2 inBackground:(BOOL)arg3 hasRunningWorkout:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)stopObservingDataCollectionForType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_fetchBoolDaemonPreferenceForKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_safeFetchDaemonPreferenceForKey:(id)arg1 expectedReturnClass:(Class)arg2 completion:(/*^block*/id)arg3 ;
-(void)_fetchDaemonPreferenceForKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_shouldGenerateDemoDataPreferenceIsSet:(/*^block*/id)arg1 ;
-(void)_setDaemonPreferenceValue:(id)arg1 forKey:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)remoteInterface;
-(void)connectionInvalidated;
-(void)setBadge:(id)arg1 forDomain:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)waitForLastChanceSyncWithDevicePairingID:(id)arg1 timeout:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)connectionInterrupted;
-(void)badgeForDomain:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)postCompanionUserNotificationOfType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)performMigrationWithCompletion:(/*^block*/id)arg1 ;
-(void)hasSampleWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setAuthorizationStatuses:(id)arg1 authorizationModes:(id)arg2 forBundleIdentifier:(id)arg3 options:(unsigned long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)endAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2 ;
-(void)clientRemote_waitOnHealthCloudSyncWithProgressDidStartWithUUID:(id)arg1 ;
-(void)deleteProfile:(id)arg1 completion:(/*^block*/id)arg2 ;
-(/*^block*/id)_objectCompletionOnClientQueue:(/*^block*/id)arg1 ;
-(/*^block*/id)_actionCompletionOnClientQueue:(/*^block*/id)arg1 ;
-(HKProfileIdentifier *)profileIdentifier;
-(void)generateFakeDataForActivityType:(long long)arg1 minutes:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)dropEntitlement:(id)arg1 ;
-(void)restoreEntitlement:(id)arg1 ;
-(void)clientRemote_presentAuthorizationWithRequestRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clientRemote_presentAuthorizationWithSession:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clientRemote_unitPreferencesDidUpdate;
-(void)allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateMedicalIDData:(id)arg1 ;
-(void)retrieveAllAuthorizationRecordsForDocumentType:(id)arg1 bundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setObjectAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)resetAllObjectAuthorizationStatusForBundleIdentifier:(id)arg1 objectType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchMedicalIDDataWithCompletion:(/*^block*/id)arg1 ;
-(void)_setPreferredUnit:(id)arg1 forType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)preferredUnitsForQuantityTypes:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)wheelchairUseWithError:(id*)arg1 ;
-(void)allSourcesWithCompletion:(/*^block*/id)arg1 ;
-(void)allSourcesRequestingTypes:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)dateOfBirthComponentsWithError:(id*)arg1 ;
-(id)biologicalSexWithError:(id*)arg1 ;
-(id)_heightCharacteristicQuantityWithError:(id*)arg1 ;
-(id)_bodyMassCharacteristicQuantityWithError:(id*)arg1 ;
-(id)fitzpatrickSkinTypeWithError:(id*)arg1 ;
-(id)bloodTypeWithError:(id*)arg1 ;
-(void)getDefaultValueForKey:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)fetchCloudSyncStatusWithCompletion:(/*^block*/id)arg1 ;
-(void)disableCloudSyncAndDeleteAllCloudDataWithCompletion:(/*^block*/id)arg1 ;
-(HKHealthServicesManager *)healthServicesManager;
-(void)fetchMedicalIDDataCreateIfNecessary:(BOOL)arg1 withCompletion:(/*^block*/id)arg2 ;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(void)stopQuery:(id)arg1 ;
-(void)_firstPartyWorkoutSnapshotWithCompletion:(/*^block*/id)arg1 ;
-(id)init;
-(void)dealloc;
-(id)exportedInterface;
-(void)_applicationWillResignActive:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(id)initWithIdentifier:(id)arg1 ;
@end

