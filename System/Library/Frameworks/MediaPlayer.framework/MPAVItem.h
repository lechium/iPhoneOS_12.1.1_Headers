/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:45:36 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <libobjc.A.dylib/MPAVMetadataItem.h>

@protocol OS_dispatch_queue, MPAVItemPlaylistIdentifier, MPAVItemQueueIdentifier;
@class AVAsset, NSObject, AVPlayerItem, MPQueueFeeder, MPAVController, NSArray, MPAlternateTracks, MPNowPlayingContentItem, NSError, NSString, MPMediaItem, MPModelGenericObject, MPStoreDownload, MPModelPlayEvent, NSNumber, NSDictionary, AVPlayerItemAccessLog, NSURL;

@interface MPAVItem : NSObject <MPAVMetadataItem> {

	AVAsset* _asset;
	NSObject*<OS_dispatch_queue> _assetQueue;
	AVPlayerItem* _avPlayerItem;
	BOOL _isAssetLoaded;
	MPQueueFeeder* _feeder;
	MPAVController* _player;
	float _soundCheckVolumeNormalization;
	NSArray* _chapterTimeMarkers;
	NSArray* _artworkTimeMarkers;
	NSArray* _urlTimeMarkers;
	NSArray* _closedCaptionTimeMarkers;
	MPAlternateTracks* _alternateTracks;
	double _cachedDuration;
	double _cachedPlayableDuration;
	NSArray* _cachedSeekableTimeRanges;
	double _seekableTimeRangesCacheTime;
	long long _type;
	MPNowPlayingContentItem* _contentItem;
	float _defaultPlaybackRate;
	unsigned _advancedDuringPlayback : 1;
	unsigned _handledFinishTime : 1;
	unsigned _hasPlayedThisSession : 1;
	unsigned _wasCountedAsSkipped : 1;
	unsigned _isStreamable : 2;
	unsigned _watchingAttributes : 1;
	unsigned _userChangedItemsDuringPlayback : 1;
	unsigned _lyricsAvailable : 1;
	unsigned _timeMarkersNeedLoading : 1;
	NSObject*<OS_dispatch_queue> _accessQueue;
	BOOL _hasLoadedHasProtectedContent;
	BOOL _hasLoadedPlaybackMode;
	BOOL _hasPostedNaturalSizeChange;
	BOOL _hasRegisteredForCaptionsAppearanceChanged;
	BOOL _hasValidPlayerItemDuration;
	double _lastLoggedTotalDuration;
	long long _likedState;
	BOOL _limitReadAhead;
	SCD_Struct_MP4 _playerItemDuration;
	long long _exportableArtworkRevision;
	BOOL _assetLoaded;
	BOOL _didAttemptToLoadAsset;
	BOOL _canReusePlayerItem;
	BOOL _likedStateEnabled;
	BOOL _supportsLikedState;
	BOOL _prefersSeekOverSkip;
	BOOL _hasProtectedContent;
	BOOL _startItem;
	BOOL _shouldPreventPlayback;
	BOOL _allowsAirPlayFromCloud;
	BOOL _allowsExternalPlayback;
	BOOL _requiresLoadedAssetForAirPlayProperties;
	BOOL _hasFinishedDownloading;
	BOOL _hasPerformedErrorResolution;
	BOOL _activeItem;
	BOOL _externalDisplay;
	float _currentPlaybackRate;
	float _loudnessInfoVolumeNormalization;
	NSError* _itemError;
	id<MPAVItemPlaylistIdentifier> _playlistIdentifier;
	id<MPAVItemQueueIdentifier> _queueIdentifier;
	NSString* _feedUniqueIdentifier;
	long long _playbackMode;
	long long _albumStoreID;
	NSArray* _buyOffers;
	NSString* _copyrightText;
	NSString* _externalContentIdentifier;
	long long _storeItemInt64ID;
	long long _storeSubscriptionAdamID;
	MPMediaItem* _mediaItem;
	MPModelGenericObject* _modelGenericObject;
	NSString* _aggregateDictionaryItemIdentifier;
	NSString* _playerIdentifier;
	NSString* _storeFrontIdentifier;
	NSString* _contentItemID;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) id<MPAVItemPlaylistIdentifier> playlistIdentifier; 
@property (nonatomic,readonly) BOOL didDeferLeaseStart; 
@property (nonatomic,readonly) BOOL isStreamingLowQualityAsset; 
@property (nonatomic,copy,readonly) NSError * lastResourceLoadingError; 
@property (nonatomic,readonly) MPStoreDownload * storeDownload; 
@property (nonatomic,readonly) long long storePlaybackEndpointType; 
@property (nonatomic,readonly) BOOL usesSubscriptionLease; 
@property (assign) BOOL isAssetLoaded;                                                                                            //@synthesize isAssetLoaded=_isAssetLoaded - In the implementation block
@property (nonatomic,retain) NSArray * chapterTimeMarkers;                                                                        //@synthesize chapterTimeMarkers=_chapterTimeMarkers - In the implementation block
@property (nonatomic,retain) NSArray * artworkTimeMarkers;                                                                        //@synthesize artworkTimeMarkers=_artworkTimeMarkers - In the implementation block
@property (nonatomic,retain) NSArray * urlTimeMarkers;                                                                            //@synthesize urlTimeMarkers=_urlTimeMarkers - In the implementation block
@property (assign,getter=isStartItem,nonatomic) BOOL startItem;                                                                   //@synthesize startItem=_startItem - In the implementation block
@property (nonatomic,readonly) BOOL shouldPreventPlayback;                                                                        //@synthesize shouldPreventPlayback=_shouldPreventPlayback - In the implementation block
@property (nonatomic,readonly) MPModelGenericObject * modelGenericObject;                                                         //@synthesize modelGenericObject=_modelGenericObject - In the implementation block
@property (nonatomic,readonly) MPModelPlayEvent * modelPlayEvent; 
@property (nonatomic,copy,readonly) NSNumber * bookmarkTime; 
@property (nonatomic,copy,readonly) NSNumber * initialPlaybackStartTime; 
@property (nonatomic,readonly) BOOL allowsAirPlayFromCloud;                                                                       //@synthesize allowsAirPlayFromCloud=_allowsAirPlayFromCloud - In the implementation block
@property (nonatomic,readonly) BOOL allowsExternalPlayback;                                                                       //@synthesize allowsExternalPlayback=_allowsExternalPlayback - In the implementation block
@property (nonatomic,readonly) BOOL requiresLoadedAssetForAirPlayProperties;                                                      //@synthesize requiresLoadedAssetForAirPlayProperties=_requiresLoadedAssetForAirPlayProperties - In the implementation block
@property (nonatomic,copy,readonly) NSString * aggregateDictionaryItemIdentifier;                                                 //@synthesize aggregateDictionaryItemIdentifier=_aggregateDictionaryItemIdentifier - In the implementation block
@property (assign,setter=_setCurrentPlaybackRate:,getter=_currentPlaybackRate,nonatomic) float _currentPlaybackRate;              //@synthesize currentPlaybackRate=_currentPlaybackRate - In the implementation block
@property (nonatomic,readonly) BOOL hasFinishedDownloading;                                                                       //@synthesize hasFinishedDownloading=_hasFinishedDownloading - In the implementation block
@property (assign,nonatomic) BOOL hasPerformedErrorResolution;                                                                    //@synthesize hasPerformedErrorResolution=_hasPerformedErrorResolution - In the implementation block
@property (nonatomic,copy,readonly) NSDictionary * playbackInfo; 
@property (nonatomic,retain) AVPlayerItem * playerItem; 
@property (nonatomic,readonly) OpaqueCMTimebaseRef timebase; 
@property (assign,nonatomic,__weak) MPAVController * player;                                                                      //@synthesize player=_player - In the implementation block
@property (nonatomic,copy) NSString * playerIdentifier;                                                                           //@synthesize playerIdentifier=_playerIdentifier - In the implementation block
@property (assign,getter=isActiveItem,nonatomic) BOOL activeItem;                                                                 //@synthesize activeItem=_activeItem - In the implementation block
@property (nonatomic,copy,readonly) NSString * storeFrontIdentifier;                                                              //@synthesize storeFrontIdentifier=_storeFrontIdentifier - In the implementation block
@property (assign,getter=hasExternalDisplay,nonatomic) BOOL externalDisplay;                                                      //@synthesize externalDisplay=_externalDisplay - In the implementation block
@property (nonatomic,readonly) SCD_Struct_MP4 _playerItemDurationIfAvailable; 
@property (assign,nonatomic) BOOL limitReadAhead; 
@property (nonatomic,copy) NSString * contentItemID;                                                                              //@synthesize contentItemID=_contentItemID - In the implementation block
@property (nonatomic,readonly) MPNowPlayingContentItem * contentItem; 
@property (getter=isAssetLoaded,nonatomic,readonly) BOOL assetLoaded;                                                             //@synthesize assetLoaded=_assetLoaded - In the implementation block
@property (getter=isAssetURLValid,nonatomic,readonly) BOOL assetURLValid; 
@property (nonatomic,readonly) BOOL didAttemptToLoadAsset;                                                                        //@synthesize didAttemptToLoadAsset=_didAttemptToLoadAsset - In the implementation block
@property (nonatomic,readonly) AVAsset * asset; 
@property (nonatomic,readonly) BOOL canReusePlayerItem;                                                                           //@synthesize canReusePlayerItem=_canReusePlayerItem - In the implementation block
@property (nonatomic,copy,readonly) NSError * playbackError; 
@property (nonatomic,retain) NSError * itemError;                                                                                 //@synthesize itemError=_itemError - In the implementation block
@property (nonatomic,readonly) long long status; 
@property (nonatomic,retain) id<MPAVItemPlaylistIdentifier> playlistIdentifier;                                                   //@synthesize playlistIdentifier=_playlistIdentifier - In the implementation block
@property (nonatomic,retain) id<MPAVItemQueueIdentifier> queueIdentifier;                                                         //@synthesize queueIdentifier=_queueIdentifier - In the implementation block
@property (nonatomic,copy) NSString * feedUniqueIdentifier;                                                                       //@synthesize feedUniqueIdentifier=_feedUniqueIdentifier - In the implementation block
@property (nonatomic,readonly) NSString * uniqueIdentifier; 
@property (getter=isAlwaysLive,nonatomic,readonly) BOOL alwaysLive; 
@property (assign,nonatomic) BOOL userAdvancedDuringPlayback; 
@property (assign,nonatomic) BOOL userChangedItemsDuringPlayback; 
@property (assign,nonatomic) BOOL userSkippedPlayback; 
@property (assign,nonatomic,__weak) MPQueueFeeder * feeder;                                                                       //@synthesize feeder=_feeder - In the implementation block
@property (assign,nonatomic) BOOL hasPlayedThisSession; 
@property (nonatomic,readonly) long long playbackMode;                                                                            //@synthesize playbackMode=_playbackMode - In the implementation block
@property (nonatomic,readonly) AVPlayerItemAccessLog * accessLog; 
@property (nonatomic,readonly) double currentTimeDisplayOverride; 
@property (assign,nonatomic) float defaultPlaybackRate;                                                                           //@synthesize defaultPlaybackRate=_defaultPlaybackRate - In the implementation block
@property (nonatomic,retain) NSArray * closedCaptionTimeMarkers; 
@property (nonatomic,readonly) BOOL useEmbeddedChapterData; 
@property (nonatomic,readonly) long long type; 
@property (nonatomic,readonly) long long customAVEQPreset; 
@property (nonatomic,readonly) BOOL allowsEQ; 
@property (nonatomic,readonly) MPAlternateTracks * alternateTracks;                                                               //@synthesize alternateTracks=_alternateTracks - In the implementation block
@property (nonatomic,readonly) NSString * displayableText; 
@property (nonatomic,readonly) BOOL displayableTextLoaded; 
@property (nonatomic,readonly) BOOL hasDisplayableText; 
@property (nonatomic,readonly) NSString * album; 
@property (nonatomic,readonly) long long albumStoreID;                                                                            //@synthesize albumStoreID=_albumStoreID - In the implementation block
@property (nonatomic,readonly) NSString * artist; 
@property (nonatomic,readonly) NSString * albumArtist; 
@property (nonatomic,readonly) long long artistStoreID; 
@property (nonatomic,readonly) unsigned long long albumTrackNumber; 
@property (nonatomic,readonly) unsigned long long albumTrackCount; 
@property (nonatomic,copy,readonly) NSArray * buyOffers;                                                                          //@synthesize buyOffers=_buyOffers - In the implementation block
@property (nonatomic,readonly) BOOL canSeedGenius; 
@property (nonatomic,readonly) NSString * composer; 
@property (nonatomic,copy,readonly) NSString * copyrightText;                                                                     //@synthesize copyrightText=_copyrightText - In the implementation block
@property (nonatomic,readonly) unsigned long long discNumber; 
@property (nonatomic,readonly) unsigned long long discCount; 
@property (getter=isExplicitTrack,nonatomic,readonly) BOOL explicitTrack; 
@property (nonatomic,copy,readonly) NSString * externalContentIdentifier;                                                         //@synthesize externalContentIdentifier=_externalContentIdentifier - In the implementation block
@property (nonatomic,readonly) NSString * genre; 
@property (nonatomic,readonly) unsigned long long mediaType; 
@property (nonatomic,readonly) BOOL isCloudItem; 
@property (assign,nonatomic) long long likedState; 
@property (getter=isLikedStateEnabled,nonatomic,readonly) BOOL likedStateEnabled;                                                 //@synthesize likedStateEnabled=_likedStateEnabled - In the implementation block
@property (nonatomic,readonly) BOOL supportsLikedState;                                                                           //@synthesize supportsLikedState=_supportsLikedState - In the implementation block
@property (nonatomic,readonly) NSString * lyrics; 
@property (nonatomic,readonly) NSString * libraryLyrics; 
@property (nonatomic,readonly) BOOL hasStoreLyrics; 
@property (nonatomic,readonly) NSString * mainTitle; 
@property (nonatomic,readonly) NSURL * podcastURL; 
@property (getter=isStreamable,nonatomic,readonly) BOOL streamable; 
@property (nonatomic,readonly) unsigned long long persistentID; 
@property (nonatomic,readonly) unsigned long long cloudID; 
@property (nonatomic,readonly) NSString * cloudUniversalLibraryID; 
@property (nonatomic,readonly) NSString * cloudAlbumID; 
@property (nonatomic,readonly) unsigned long long albumPersistentID; 
@property (nonatomic,readonly) unsigned long long albumArtistPersistentID; 
@property (nonatomic,readonly) unsigned long long artistPersistentID; 
@property (nonatomic,readonly) unsigned long long genrePersistentID; 
@property (nonatomic,readonly) unsigned long long composerPersistentID; 
@property (nonatomic,readonly) BOOL shouldShowComposer; 
@property (nonatomic,readonly) NSString * storeItemID; 
@property (nonatomic,readonly) long long storeItemInt64ID;                                                                        //@synthesize storeItemInt64ID=_storeItemInt64ID - In the implementation block
@property (nonatomic,readonly) long long storeSubscriptionAdamID;                                                                 //@synthesize storeSubscriptionAdamID=_storeSubscriptionAdamID - In the implementation block
@property (nonatomic,readonly) float userRating; 
@property (nonatomic,readonly) BOOL supportsRewindAndFastForward15Seconds; 
@property (nonatomic,readonly) BOOL supportsSettingCurrentTime; 
@property (nonatomic,readonly) BOOL durationIsValid; 
@property (nonatomic,readonly) double durationIfAvailable; 
@property (nonatomic,readonly) double durationFromExternalMetadata; 
@property (nonatomic,readonly) double playableDuration; 
@property (nonatomic,readonly) double playableDurationIfAvailable; 
@property (nonatomic,readonly) double timeOfSeekableStart; 
@property (nonatomic,readonly) double timeOfSeekableEnd; 
@property (nonatomic,readonly) CGSize naturalSize; 
@property (nonatomic,readonly) NSArray * timedMetadataIfAvailable; 
@property (nonatomic,retain,readonly) MPMediaItem * mediaItem;                                                                    //@synthesize mediaItem=_mediaItem - In the implementation block
@property (assign,nonatomic) float loudnessInfoVolumeNormalization;                                                               //@synthesize loudnessInfoVolumeNormalization=_loudnessInfoVolumeNormalization - In the implementation block
@property (assign,nonatomic) float soundCheckVolumeNormalization;                                                                 //@synthesize soundCheckVolumeNormalization=_soundCheckVolumeNormalization - In the implementation block
@property (nonatomic,readonly) BOOL supportsSkip; 
@property (nonatomic,readonly) BOOL supportsSkipToPreviousItem; 
@property (nonatomic,readonly) BOOL supportsRating; 
@property (nonatomic,readonly) BOOL prefersSeekOverSkip;                                                                          //@synthesize prefersSeekOverSkip=_prefersSeekOverSkip - In the implementation block
@property (nonatomic,readonly) NSString * localizedPositionInPlaylistString; 
@property (nonatomic,readonly) BOOL isAd; 
@property (nonatomic,readonly) BOOL hasProtectedContent;                                                                          //@synthesize hasProtectedContent=_hasProtectedContent - In the implementation block
@property (assign,getter=isInWishList,nonatomic) BOOL inWishList; 
@property (getter=isRadioItem,nonatomic,readonly) BOOL radioItem; 
@property (nonatomic,readonly) BOOL stationAllowsItemLiking; 
@property (nonatomic,copy,readonly) NSString * stationHash; 
@property (nonatomic,readonly) long long stationID; 
@property (nonatomic,copy,readonly) NSString * stationName; 
@property (nonatomic,copy,readonly) NSString * stationStringID; 
@property (nonatomic,readonly) BOOL supportsRadioTrackActions; 
@property (nonatomic,readonly) SCD_Struct_MP4 duration; 
@property (assign,nonatomic) SCD_Struct_MP4 forwardPlaybackEndTime; 
@property (nonatomic,readonly) CGSize presentationSize; 
+(long long)defaultScaleMode;
+(void)setDefaultScaleMode:(long long)arg1 ;
+(id)URLFromPath:(id)arg1 ;
+(void)applyVolumeNormalizationForQueuedItems:(id)arg1 ;
+(BOOL)isPlaceholder;
-(long long)stationID;
-(void)setRating:(float)arg1 ;
-(NSString *)artist;
-(double)playableDuration;
-(void)setDefaultPlaybackRate:(float)arg1 ;
-(long long)playbackMode;
-(id<MPAVItemQueueIdentifier>)queueIdentifier;
-(double)timeOfSeekableEnd;
-(double)timeOfSeekableStart;
-(float)_currentPlaybackRate;
-(OpaqueCMTimebaseRef)timebase;
-(NSNumber *)initialPlaybackStartTime;
-(void)setAlternateAudioTrackID:(int)arg1 ;
-(void)setAlternateAudioTrackLocale:(id)arg1 ;
-(void)setSelectedAlternateTextTrack:(id)arg1 ;
-(void)setOverrideDuration:(double)arg1 ;
-(void)_loadAssetProperties;
-(void)_loadAvailableMediaCharacteristicsIfNeeded;
-(long long)_expectedPlaybackMode;
-(void)_internalLikedStateDidChangeNotification:(id)arg1 ;
-(void)_setListeningForCaptionsAppearanceSettingsChanged:(BOOL)arg1 ;
-(void)loadAssetAndPlayerItem;
-(void)setIsAssetLoaded:(BOOL)arg1 ;
-(void)_updateSoundCheckVolumeNormalizationForPlayerItem;
-(void)_loadAssetAndPlayerItem;
-(void)_playerItemNewAccessLogEntryNotification:(id)arg1 ;
-(void)_updateHasFinishedDownloading;
-(NSNumber *)bookmarkTime;
-(NSDictionary *)playbackInfo;
-(id)_initialPlaybackStartTimeForPlaybackInfo:(id)arg1 ;
-(void)_checkAllowsBlockingDurationCall;
-(double)_durationInSeconds;
-(NSString *)displayableText;
-(NSString *)lyrics;
-(long long)_persistedLikedState;
-(BOOL)limitReadAhead;
-(float)defaultPlaybackRate;
-(void)setLimitReadAhead:(BOOL)arg1 ;
-(long long)likedState;
-(void)_likedStateDidChange;
-(void)_handleUpdatedLikedState:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(long long)storeItemInt64ID;
-(BOOL)useEmbeddedChapterData;
-(void)_releaseAllTimeMarkers;
-(NSString *)contentItemID;
-(id)artworkCatalogForPlaybackTime:(double)arg1 ;
-(BOOL)_shouldPublishArtworkURL;
-(NSString *)libraryLyrics;
-(BOOL)hasStoreLyrics;
-(SCD_Struct_MP4)_playerItemDurationIfAvailable;
-(long long)albumStoreID;
-(long long)artistStoreID;
-(long long)storeSubscriptionAdamID;
-(NSString *)mainTitle;
-(NSString *)albumArtist;
-(NSString *)genre;
-(unsigned long long)discNumber;
-(unsigned long long)discCount;
-(unsigned long long)albumTrackNumber;
-(unsigned long long)albumTrackCount;
-(NSString *)externalContentIdentifier;
-(BOOL)isExplicitTrack;
-(MPModelPlayEvent *)modelPlayEvent;
-(BOOL)shouldShowComposer;
-(MPModelGenericObject *)modelGenericObject;
-(id)_currentContentItemDeviceSpecificUserInfo;
-(void)setChapterTimeMarkers:(NSArray *)arg1 ;
-(void)setArtworkTimeMarkers:(NSArray *)arg1 ;
-(void)setUrlTimeMarkers:(NSArray *)arg1 ;
-(void)_loadTimeMarkersBlocking;
-(void)_loadTimeMarkersAsync;
-(NSArray *)chapterTimeMarkers;
-(id)_timeMarkerFromMarkers:(id)arg1 forTime:(double)arg2 ;
-(NSArray *)artworkTimeMarkers;
-(NSArray *)urlTimeMarkers;
-(NSArray *)closedCaptionTimeMarkers;
-(double)durationFromExternalMetadata;
-(id)_seekableTimeRanges;
-(double)_durationFromExternalMetadataIfAvailable;
-(double)_playableDurationForLoadedTimeRanges:(id)arg1 ;
-(BOOL)hasDisplayableText;
-(void)_performContentItemUpdate:(/*^block*/id)arg1 ;
-(unsigned long long)cloudID;
-(NSString *)cloudAlbumID;
-(NSString *)cloudUniversalLibraryID;
-(unsigned long long)albumPersistentID;
-(unsigned long long)albumArtistPersistentID;
-(unsigned long long)artistPersistentID;
-(unsigned long long)genrePersistentID;
-(unsigned long long)composerPersistentID;
-(void)_itemAttributeAvailableKey:(id)arg1 ;
-(void)setSoundCheckVolumeNormalization:(float)arg1 ;
-(NSString *)feedUniqueIdentifier;
-(long long)customAVEQPreset;
-(BOOL)allowsEQ;
-(MPNowPlayingContentItem *)contentItem;
-(void)_currentPlaybackRateDidChange:(float)arg1 ;
-(void)_captionAppearanceSettingsChanged;
-(id)_imageChapterTrackIDsForAsset:(id)arg1 ;
-(BOOL)isSupportedDefaultPlaybackSpeed:(long long)arg1 ;
-(void)flushNowPlayingCaches;
-(NSError *)playbackError;
-(void)resetBookkeeping;
-(void)setPlaybackStoppedTime:(double)arg1 ;
-(void)notePlaybackFinishedByHittingEnd;
-(void)setPlaybackCheckpointCurrentTime:(double)arg1 ;
-(void)setPlaybackFinishedTime:(double)arg1 ;
-(int)subtitleTrackID;
-(void)setSubtitleTrackID:(int)arg1 ;
-(void)setUserAdvancedDuringPlayback:(BOOL)arg1 ;
-(void)setUserChangedItemsDuringPlayback:(BOOL)arg1 ;
-(void)setUserSkippedPlayback:(BOOL)arg1 ;
-(BOOL)userAdvancedDuringPlayback;
-(BOOL)userSkippedPlayback;
-(BOOL)userChangedItemsDuringPlayback;
-(double)durationInSeconds;
-(void)applyVolumeNormalizationWithSoundCheckEnabled:(BOOL)arg1 ;
-(BOOL)canSeedGenius;
-(BOOL)isCloudItem;
-(BOOL)isValidPlayerSubstituteForItem:(id)arg1 ;
-(BOOL)isAssetURLValid;
-(BOOL)displayableTextLoaded;
-(BOOL)hasAlternatesForTypes:(unsigned long long)arg1 ;
-(unsigned long long)alternatesCountForTypes:(unsigned long long)arg1 ;
-(BOOL)hasDataForItemArtwork;
-(BOOL)hasPlayedThisSession;
-(BOOL)isAd;
-(BOOL)isStreamable;
-(NSURL *)podcastURL;
-(float)playbackRateForLevel:(unsigned long long)arg1 direction:(long long)arg2 paused:(BOOL)arg3 ;
-(void)prepareForRate:(float)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setFeeder:(MPQueueFeeder *)arg1 ;
-(float)scanIntervalForLevel:(unsigned long long)arg1 paused:(BOOL)arg2 ;
-(void)setHasPlayedThisSession:(BOOL)arg1 ;
-(void)setLikedState:(long long)arg1 ;
-(BOOL)supportsRewindAndFastForward15Seconds;
-(BOOL)supportsSkip;
-(BOOL)supportsSkipToPreviousItem;
-(BOOL)supportsRating;
-(BOOL)supportsSettingCurrentTime;
-(void)_realoadEmbeddedTimeMarkers;
-(NSArray *)timedMetadataIfAvailable;
-(void)setContentItemID:(NSString *)arg1 ;
-(BOOL)isInWishList;
-(BOOL)isRadioItem;
-(void)setInWishList:(BOOL)arg1 ;
-(BOOL)stationAllowsItemLiking;
-(NSString *)stationName;
-(NSString *)stationStringID;
-(BOOL)supportsRadioTrackActions;
-(void)setClosedCaptionTimeMarkers:(NSArray *)arg1 ;
-(id)chapterTimeMarkerForTime:(double)arg1 ;
-(id)artworkTimeMarkerForTime:(double)arg1 ;
-(id)urlTimeMarkerForTime:(double)arg1 ;
-(id)closedCaptionTimeMarkerForTime:(double)arg1 ;
-(NSString *)localizedPositionInPlaylistString;
-(BOOL)durationIsValid;
-(double)playableDurationIfAvailable;
-(/*^block*/id)blockForDirectAVControllerNotificationReferencingItem:(id)arg1 ;
-(void)_clearAsset;
-(void)setupEQPresetWithDefaultPreset:(long long)arg1 ;
-(void)setupPlaybackInfo;
-(BOOL)_isBackgroundPlaybackRestricted;
-(void)_updateDurationSnapshotWithElapsedTime:(double)arg1 playbackRate:(float)arg2 ;
-(double)_expectedStartTimeWithPlaybackInfo:(id)arg1 ;
-(double)_expectedStopTimeWithPlaybackInfo:(id)arg1 ;
-(void)_loadMediaItemWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_setCurrentPlaybackRate:(float)arg1 ;
-(void)_setNeedsPersistedLikedStateUpdate;
-(void)invalidateContentItemDeviceSpecificUserInfo;
-(id)localeForAssetTrack:(id)arg1 ;
-(void)reevaluatePlaybackMode;
-(void)reevaluateHasProtectedContent;
-(void)reevaluateType;
-(void)replacePlayerItemWithPlayerItem:(id)arg1 ;
-(void)resolvePlaybackError:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_willBecomeActivePlayerItem;
-(void)_willResignActivePlayerItem;
-(MPAlternateTracks *)alternateTracks;
-(float)soundCheckVolumeNormalization;
-(BOOL)didAttemptToLoadAsset;
-(BOOL)canReusePlayerItem;
-(NSError *)itemError;
-(void)setItemError:(NSError *)arg1 ;
-(id<MPAVItemPlaylistIdentifier>)playlistIdentifier;
-(void)setPlaylistIdentifier:(id<MPAVItemPlaylistIdentifier>)arg1 ;
-(void)setQueueIdentifier:(id<MPAVItemQueueIdentifier>)arg1 ;
-(void)setFeedUniqueIdentifier:(NSString *)arg1 ;
-(NSArray *)buyOffers;
-(NSString *)copyrightText;
-(BOOL)isLikedStateEnabled;
-(BOOL)supportsLikedState;
-(float)loudnessInfoVolumeNormalization;
-(void)setLoudnessInfoVolumeNormalization:(float)arg1 ;
-(BOOL)prefersSeekOverSkip;
-(BOOL)isStartItem;
-(void)setStartItem:(BOOL)arg1 ;
-(BOOL)shouldPreventPlayback;
-(BOOL)allowsAirPlayFromCloud;
-(BOOL)allowsExternalPlayback;
-(BOOL)requiresLoadedAssetForAirPlayProperties;
-(NSString *)aggregateDictionaryItemIdentifier;
-(BOOL)hasFinishedDownloading;
-(BOOL)hasPerformedErrorResolution;
-(void)setHasPerformedErrorResolution:(BOOL)arg1 ;
-(NSString *)playerIdentifier;
-(void)setPlayerIdentifier:(NSString *)arg1 ;
-(BOOL)isActiveItem;
-(void)setActiveItem:(BOOL)arg1 ;
-(BOOL)hasExternalDisplay;
-(void)setExternalDisplay:(BOOL)arg1 ;
-(long long)storePlaybackEndpointType;
-(NSError *)lastResourceLoadingError;
-(/*^block*/id)artworkCatalogBlock;
-(BOOL)usesSubscriptionLease;
-(BOOL)didDeferLeaseStart;
-(BOOL)isStreamingLowQualityAsset;
-(MPStoreDownload *)storeDownload;
-(unsigned long long)mediaType;
-(CGSize)naturalSize;
-(MPAVController *)player;
-(void)setPlayer:(MPAVController *)arg1 ;
-(NSString *)album;
-(AVPlayerItem *)playerItem;
-(MPMediaItem *)mediaItem;
-(void)setPlayerItem:(AVPlayerItem *)arg1 ;
-(unsigned long long)persistentID;
-(NSString *)storeItemID;
-(float)userRating;
-(NSString *)storeFrontIdentifier;
-(NSString *)stationHash;
-(MPQueueFeeder *)feeder;
-(double)durationIfAvailable;
-(BOOL)isAlwaysLive;
-(double)currentTimeDisplayOverride;
-(BOOL)isAssetLoaded;
-(BOOL)isAssetLoaded;
-(AVPlayerItemAccessLog *)accessLog;
-(id)initWithURL:(id)arg1 options:(id)arg2 ;
-(SCD_Struct_MP4)forwardPlaybackEndTime;
-(void)setForwardPlaybackEndTime:(SCD_Struct_MP4)arg1 ;
-(id)initWithPlayerItem:(id)arg1 ;
-(BOOL)hasProtectedContent;
-(id)init;
-(void)dealloc;
-(long long)type;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(SCD_Struct_MP4)duration;
-(id)initWithAsset:(id)arg1 ;
-(id)path;
-(id)url;
-(id)initWithURL:(id)arg1 ;
-(NSString *)uniqueIdentifier;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(long long)status;
-(CGSize)presentationSize;
-(AVAsset *)asset;
-(NSString *)composer;
@end

