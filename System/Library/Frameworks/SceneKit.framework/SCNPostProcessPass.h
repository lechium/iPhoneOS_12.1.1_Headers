/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:46:30 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLTexture, MTLBuffer;
#import <SceneKit/SceneKit-Structs.h>
@class SCNMTLComputePipeline, SCNMTLRenderPipeline;

@interface SCNPostProcessPass : NSObject {

	unsigned long long _frameBufferFormat;
	unsigned long long _frameBufferWidth;
	unsigned long long _frameBufferHeight;
	unsigned long long _postProcessConstants;
	float _scaleFactor;
	id<MTLTexture> _dofColorCoCTexture;
	id<MTLTexture> _dofCoCTextureA;
	id<MTLTexture> _dofCoCTextureB;
	id<MTLTexture> _dofBlurTexture;
	int _dofSampleCount;
	SCNMTLComputePipeline* _dofPipelineState[5];
	id<MTLBuffer> _dofKernel;
	id<MTLTexture> _mbTileMax;
	id<MTLTexture> _mbNeighborMax;
	id<MTLTexture> _mbTexture;
	id<MTLTexture> _mbColor;
	SCNMTLRenderPipeline* _mbBlurPipelineState;
	SCNMTLComputePipeline* _mbVelocityPipelineState[3];
	id<MTLTexture> _bloomTextureA;
	id<MTLTexture> _bloomTextureB;
	SCNMTLRenderPipeline* _bloomBlurPipelineState[15];
	SCNMTLComputePipeline* _downSampleBloomDOFPipelineState[6];
	SCNMTLRenderPipeline* _postProcessPipelineState;
	id<MTLTexture> _frameLumTexture;
	id<MTLTexture> _averageLumTexture;
	id<MTLBuffer> _autoExposureParametersBuffer;
	SCNMTLRenderPipeline* _frameLuminancePipelineState;
	SCNMTLComputePipeline* _frameLuminanceCS;
	SCNMTLComputePipeline* _slidingLuminancePipelineState;
	SCNMTLComputePipeline* _adaptativeLuminancePipelineState;
	SCNMTLComputePipeline* _fixedLuminancePipelineState;
	unsigned _frameIndex;
	 _VRscaleBias;
	 _viewport;

}
-(void)setupWithContext:(SCD_Struct_SC96*)arg1 ;
-(void)_createFramebufferDependantResourcesWithRenderContext:(id)arg1 renderPassDesc:(id)arg2 postProcessConstants:(unsigned long long)arg3 ;
-(void)_computeDofUniforms:(SCD_Struct_SC122*)arg1 camera:(_C3DCamera*)arg2 cullingContext:(_C3DCullingContext*)arg3 passInstance:(_C3DFXPassInstance*)arg4 fxContext:(_C3DFXContext*)arg5 engineContext:(C3DEngineContextRef)arg6 ;
-(unsigned)_computeBloomBlurUniforms:(SCD_Struct_SC123*)arg1 textureSize:(float)arg2 radius:(BOOL)arg3 ;
-(void)executeWithContext:(SCD_Struct_SC96*)arg1 ;
-(void)dealloc;
@end

