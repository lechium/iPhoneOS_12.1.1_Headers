/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:45:49 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKitUI/EKEventDetailItem.h>
#import <libobjc.A.dylib/MKMapViewDelegate.h>

@class UITableViewCell, MKMapView, UIView, CLLocation, NSString;

@interface EKEventMapDetailItem : EKEventDetailItem <MKMapViewDelegate> {

	UITableViewCell* _cell;
	MKMapView* _mapView;
	UIView* _overlayView;
	UIView* _loadingView;
	CLLocation* _location;
	UITableViewCell* _oldCell;
	BOOL _hasMapItemLaunchOptionFromTimeToLeaveNotification;

}

@property (assign,nonatomic) BOOL hasMapItemLaunchOptionFromTimeToLeaveNotification;              //@synthesize hasMapItemLaunchOptionFromTimeToLeaveNotification=_hasMapItemLaunchOptionFromTimeToLeaveNotification - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_locationStringForStructuredLocation:(id)arg1 ;
+(id)_mapsURLForLocationOnEvent:(id)arg1 hasMapItemLaunchOptionFromTimeToLeaveNotification:(BOOL)arg2 ;
-(id)cellForSubitemAtIndex:(unsigned long long)arg1 ;
-(BOOL)configureWithCalendar:(id)arg1 preview:(BOOL)arg2 ;
-(double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2 ;
-(BOOL)hasMapItemLaunchOptionFromTimeToLeaveNotification;
-(void)setHasMapItemLaunchOptionFromTimeToLeaveNotification:(BOOL)arg1 ;
-(void)eventViewController:(id)arg1 didSelectReadOnlySubitem:(unsigned long long)arg2 ;
-(double)_mapHeight;
-(id)_mapRelatedViewConstraintsForMapRelatedView:(id)arg1 inCell:(id)arg2 ;
-(void)_setupMapView;
-(void)eventViewController:(id)arg1 didHighlightSubitem:(unsigned long long)arg2 ;
-(void)eventViewController:(id)arg1 didUnhighlightSubitem:(unsigned long long)arg2 ;
-(void)mapViewWillStartRenderingMap:(id)arg1 ;
-(void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(BOOL)arg2 ;
-(id)mapView:(id)arg1 rendererForOverlay:(id)arg2 ;
-(void)reset;
@end

