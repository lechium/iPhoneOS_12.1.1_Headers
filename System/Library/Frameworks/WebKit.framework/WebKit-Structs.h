/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:45:18 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/WebKit.framework/WebKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class WKFullScreenViewController;

typedef struct RetainPtr<NSURL> {
	void m_ptr;
} RetainPtr<NSURL>;

typedef struct RetainPtr<NSString> {
	void m_ptr;
} RetainPtr<NSString>;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > {
	ShareableBitmap m_ptr;
} RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> >;

typedef struct RetainPtr<UIImage> {
	void m_ptr;
} RetainPtr<UIImage>;

typedef struct RetainPtr<NSDictionary> {
	void m_ptr;
} RetainPtr<NSDictionary>;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct type {
	unsigned char __lx[128];
} type;

typedef struct ObjectStorage<API::ApplicationManifest> {
	type data;
} ObjectStorage<API::ApplicationManifest>;

typedef struct RetainPtr<NSData> {
	void m_ptr;
} RetainPtr<NSData>;

typedef struct RetainPtr<NSError> {
	void m_ptr;
} RetainPtr<NSError>;

typedef struct ObjectStorage<API::Attachment> {
	type data;
} ObjectStorage<API::Attachment>;

typedef struct ObjectStorage<WebKit::WebAutomationSession> {
	type data;
} ObjectStorage<WebKit::WebAutomationSession>;

typedef struct RetainPtr<_WKAutomationSessionConfiguration> {
	void m_ptr;
} RetainPtr<_WKAutomationSessionConfiguration>;

typedef struct WeakObjCPtr<id<_WKAutomationSessionDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<_WKAutomationSessionDelegate> >;

typedef struct _NSZone* NSZoneRef;

typedef struct ObjectStorage<WebKit::DownloadProxy> {
	type data;
} ObjectStorage<WebKit::DownloadProxy>;

typedef struct WeakObjCPtr<WKActionSheetAssistant> {
	id m_weakReference;
} WeakObjCPtr<WKActionSheetAssistant>;

typedef struct ObjectStorage<API::ExperimentalFeature> {
	type data;
} ObjectStorage<API::ExperimentalFeature>;

typedef struct ObjectStorage<API::FrameHandle> {
	type data;
} ObjectStorage<API::FrameHandle>;

typedef struct ObjectStorage<WebKit::WebGeolocationPosition> {
	type data;
} ObjectStorage<WebKit::WebGeolocationPosition>;

typedef struct RetainPtr<NSNumber> {
	void m_ptr;
} RetainPtr<NSNumber>;

typedef struct RetainPtr<NSMutableDictionary> {
	void m_ptr;
} RetainPtr<NSMutableDictionary>;

typedef struct ObjectStorage<API::ProcessPoolConfiguration> {
	type data;
} ObjectStorage<API::ProcessPoolConfiguration>;

typedef struct HashTable<SEL *, WTF::KeyValuePair<SEL *, MethodInfo>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<SEL *, MethodInfo> >, WTF::PtrHash<SEL *>, WTF::HashMap<SEL *, MethodInfo, WTF::PtrHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo> >::KeyValuePairTraits, WTF::HashTraits<SEL *> > {
	KeyValuePair<SEL *, MethodInfo> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<SEL *, WTF::KeyValuePair<SEL *, MethodInfo>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<SEL *, MethodInfo> >, WTF::PtrHash<SEL *>, WTF::HashMap<SEL *, MethodInfo, WTF::PtrHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo> >::KeyValuePairTraits, WTF::HashTraits<SEL *> >;

typedef struct HashMap<SEL *, MethodInfo, WTF::PtrHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo> > {
	HashTable<SEL *, WTF::KeyValuePair<SEL *, MethodInfo>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<SEL *, MethodInfo> >, WTF::PtrHash<SEL *>, WTF::HashMap<SEL *, MethodInfo, WTF::PtrHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo> >::KeyValuePairTraits, WTF::HashTraits<SEL *> > m_impl;
} HashMap<SEL *, MethodInfo, WTF::PtrHash<SEL *>, WTF::HashTraits<SEL *>, WTF::HashTraits<MethodInfo> >;

typedef struct _compressed_pair<WebKit::RemoteObjectRegistry *, std::__1::default_delete<WebKit::RemoteObjectRegistry> > {
	RemoteObjectRegistry __value_;
} compressed_pair<WebKit::RemoteObjectRegistry *, std::__1::default_delete<WebKit::RemoteObjectRegistry> >;

typedef struct unique_ptr<WebKit::RemoteObjectRegistry, std::__1::default_delete<WebKit::RemoteObjectRegistry> > {
	compressed_pair<WebKit::RemoteObjectRegistry *, std::__1::default_delete<WebKit::RemoteObjectRegistry> > __ptr_;
} unique_ptr<WebKit::RemoteObjectRegistry, std::__1::default_delete<WebKit::RemoteObjectRegistry> >;

typedef struct RetainPtr<NSMapTable> {
	void m_ptr;
} RetainPtr<NSMapTable>;

typedef struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >, WTF::StringHash, WTF::HashMap<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > {
	KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::String, WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >, WTF::StringHash, WTF::HashMap<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> >;

typedef struct HashMap<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > > {
	HashTable<WTF::String, WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >, WTF::StringHash, WTF::HashMap<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > m_impl;
} HashMap<WTF::String, std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> >, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<std::__1::pair<WTF::RetainPtr<id>, WTF::RetainPtr<_WKRemoteObjectInterface> > > >;

typedef struct HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, PendingReply>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, PendingReply> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, PendingReply, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > {
	KeyValuePair<unsigned long long, PendingReply> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, PendingReply>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, PendingReply> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, PendingReply, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> >;

typedef struct HashMap<unsigned long long, PendingReply, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply> > {
	HashTable<unsigned long long, WTF::KeyValuePair<unsigned long long, PendingReply>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long long, PendingReply> >, WTF::IntHash<unsigned long long>, WTF::HashMap<unsigned long long, PendingReply, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply> >::KeyValuePairTraits, WTF::HashTraits<unsigned long long> > m_impl;
} HashMap<unsigned long long, PendingReply, WTF::IntHash<unsigned long long>, WTF::HashTraits<unsigned long long>, WTF::HashTraits<PendingReply> >;

typedef struct WebPage* WebPageRef;

typedef struct WebPageProxy* WebPageProxyRef;

typedef struct optional<unsigned int> {
	BOOL init_;
	constexpr_storage_t<unsigned int> storage_;
	unsigned char dummy_;
	I) value_;
} optional<unsigned int>;

typedef struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > {
	StringImpl m_ptr;
} RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >;

typedef struct String {
	RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > m_impl;
} String;

typedef struct URL {
	String m_string;
	unsigned m_isValid : 1;
	unsigned m_protocolIsInHTTPFamily : 1;
	unsigned m_cannotBeABaseURL : 1;
	unsigned m_portLength : 3;
	unsigned m_schemeEnd : 26;
	unsigned m_userStart;
	unsigned m_userEnd;
	unsigned m_passwordEnd;
	unsigned m_hostEnd;
	unsigned m_pathAfterLastSlash;
	unsigned m_pathEnd;
	unsigned m_queryEnd;
} URL;

typedef struct Vector<WebKit::BackForwardListItemState, 0, WTF::CrashOnOverflow, 16> {
	BackForwardListItemState m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebKit::BackForwardListItemState, 0, WTF::CrashOnOverflow, 16>;

typedef struct BackForwardListState {
	Vector<WebKit::BackForwardListItemState, 0, WTF::CrashOnOverflow, 16> items;
	optional<unsigned int> currentIndex;
} BackForwardListState;

typedef struct SessionState {
	BackForwardListState backForwardListState;
	unsigned long long renderTreeSize;
	URL provisionalURL;
} SessionState;

typedef struct RetainPtr<WKContentRuleListStore> {
	void m_ptr;
} RetainPtr<WKContentRuleListStore>;

typedef struct RetainPtr<WKContentRuleList> {
	void m_ptr;
} RetainPtr<WKContentRuleList>;

typedef struct ObjectStorage<API::UserContentWorld> {
	type data;
} ObjectStorage<API::UserContentWorld>;

typedef struct ObjectStorage<API::UserInitiatedAction> {
	type data;
} ObjectStorage<API::UserInitiatedAction>;

typedef struct ObjectStorage<API::UserStyleSheet> {
	type data;
} ObjectStorage<API::UserStyleSheet>;

typedef struct ObjectStorage<WebKit::VisitedLinkStore> {
	type data;
} ObjectStorage<WebKit::VisitedLinkStore>;

typedef struct HashTable<unsigned int, WTF::KeyValuePair<unsigned int, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, unsigned long long> >, WTF::IntHash<unsigned int>, WTF::HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> >::KeyValuePairTraits, WTF::HashTraits<unsigned int> > {
	KeyValuePair<unsigned int, unsigned long long> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<unsigned int, WTF::KeyValuePair<unsigned int, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, unsigned long long> >, WTF::IntHash<unsigned int>, WTF::HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> >::KeyValuePairTraits, WTF::HashTraits<unsigned int> >;

typedef struct HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> > {
	HashTable<unsigned int, WTF::KeyValuePair<unsigned int, unsigned long long>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned int, unsigned long long> >, WTF::IntHash<unsigned int>, WTF::HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> >::KeyValuePairTraits, WTF::HashTraits<unsigned int> > m_impl;
} HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> >;

typedef struct Size {
	unsigned long long totalSize;
	HashMap<unsigned int, unsigned long long, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<unsigned long long> > typeSizes;
} Size;

typedef struct RetainPtr<WKWebsiteDataStore> {
	void m_ptr;
} RetainPtr<WKWebsiteDataStore>;

typedef struct ObjectStorage<API::WebsitePolicies> {
	type data;
} ObjectStorage<API::WebsitePolicies>;

typedef struct RetainPtr<_WKFrameHandle> {
	void m_ptr;
} RetainPtr<_WKFrameHandle>;

typedef struct RetainPtr<CGPDFDocument *> {
	void m_ptr;
} RetainPtr<CGPDFDocument *>;

typedef struct RetainPtr<__CFRunLoop *> {
	void m_ptr;
} RetainPtr<__CFRunLoop *>;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct RefPtr<WebKit::NetworkSessionCocoa, WTF::DumbPtrTraits<WebKit::NetworkSessionCocoa> > {
	NetworkSessionCocoa m_ptr;
} RefPtr<WebKit::NetworkSessionCocoa, WTF::DumbPtrTraits<WebKit::NetworkSessionCocoa> >;

typedef struct RefPtr<WebKit::WebEditCommandProxy, WTF::DumbPtrTraits<WebKit::WebEditCommandProxy> > {
	WebEditCommandProxy m_ptr;
} RefPtr<WebKit::WebEditCommandProxy, WTF::DumbPtrTraits<WebKit::WebEditCommandProxy> >;

typedef struct HashTable<WebKit::ProcessAssertionClient *, WebKit::ProcessAssertionClient *, WTF::IdentityExtractor, WTF::PtrHash<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *> > {
	ProcessAssertionClient m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebKit::ProcessAssertionClient *, WebKit::ProcessAssertionClient *, WTF::IdentityExtractor, WTF::PtrHash<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *> >;

typedef struct HashSet<WebKit::ProcessAssertionClient *, WTF::PtrHash<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *> > {
	HashTable<WebKit::ProcessAssertionClient *, WebKit::ProcessAssertionClient *, WTF::IdentityExtractor, WTF::PtrHash<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *> > m_impl;
} HashSet<WebKit::ProcessAssertionClient *, WTF::PtrHash<WebKit::ProcessAssertionClient *>, WTF::HashTraits<WebKit::ProcessAssertionClient *> >;

typedef struct RetainPtr<NSItemProvider> {
	void m_ptr;
} RetainPtr<NSItemProvider>;

typedef struct RetainPtr<QLItem> {
	void m_ptr;
} RetainPtr<QLItem>;

typedef struct IntPoint {
	int m_x;
	int m_y;
} IntPoint;

typedef struct IntSize {
	int m_width;
	int m_height;
} IntSize;

typedef struct IntRect {
	IntPoint m_location;
	IntSize m_size;
} IntRect;

typedef struct WeakObjCPtr<AVPlayerViewController> {
	id m_weakReference;
} WeakObjCPtr<AVPlayerViewController>;

typedef struct RetainPtr<_UINavigationInteractiveTransitionBase> {
	void m_ptr;
} RetainPtr<_UINavigationInteractiveTransitionBase>;

typedef struct WeakObjCPtr<UIView> {
	id m_weakReference;
} WeakObjCPtr<UIView>;

typedef struct RetainPtr<NSArray> {
	void m_ptr;
} RetainPtr<NSArray>;

typedef struct BlockPtr<void (PKPaymentMerchantSession *, NSError *)> {
	/*^block*/id m_block;
} BlockPtr<void (PKPaymentMerchantSession *, NSError *)>;

typedef struct BlockPtr<void (PKPaymentAuthorizationResult *)> {
	/*^block*/id m_block;
} BlockPtr<void (PKPaymentAuthorizationResult *)>;

typedef struct BlockPtr<void (PKPaymentRequestPaymentMethodUpdate *)> {
	/*^block*/id m_block;
} BlockPtr<void (PKPaymentRequestPaymentMethodUpdate *)>;

typedef struct BlockPtr<void (PKPaymentRequestShippingMethodUpdate *)> {
	/*^block*/id m_block;
} BlockPtr<void (PKPaymentRequestShippingMethodUpdate *)>;

typedef struct BlockPtr<void (PKPaymentRequestShippingContactUpdate *)> {
	/*^block*/id m_block;
} BlockPtr<void (PKPaymentRequestShippingContactUpdate *)>;

typedef struct RetainPtr<UIViewController> {
	void m_ptr;
} RetainPtr<UIViewController>;

typedef struct RetainPtr<id<UIPopoverPresentationControllerDelegate> > {
	void m_ptr;
} RetainPtr<id<UIPopoverPresentationControllerDelegate> >;

typedef struct WeakObjCPtr<id<WKActionSheetAssistantDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKActionSheetAssistantDelegate> >;

typedef struct RetainPtr<WKActionSheet> {
	void m_ptr;
} RetainPtr<WKActionSheet>;

typedef struct RetainPtr<_WKActivatedElementInfo> {
	void m_ptr;
} RetainPtr<_WKActivatedElementInfo>;

typedef struct FloatPoint {
	float m_x;
	float m_y;
} FloatPoint;

typedef struct FloatSize {
	float m_width;
	float m_height;
} FloatSize;

typedef struct Color {
	/*function pointer*/void* m_colorData;
	unsigned long long rgbaAndFlags;
	ExtendedColor) extendedColor;
} Color;

typedef struct RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > {
	Image m_ptr;
} RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> >;

typedef struct Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16> {
	FloatRect m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16>;

typedef struct FloatRect {
	FloatPoint m_location;
	FloatSize m_size;
} FloatRect;

typedef struct TextIndicatorData {
	FloatRect selectionRectInRootViewCoordinates;
	FloatRect textBoundingRectInRootViewCoordinates;
	FloatRect contentImageWithoutSelectionRectInRootViewCoordinates;
	Vector<WebCore::FloatRect, 0, WTF::CrashOnOverflow, 16> textRectsInBoundingRectCoordinates;
	float contentImageScaleFactor;
	RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > contentImageWithHighlight;
	RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > contentImageWithoutSelection;
	RefPtr<WebCore::Image, WTF::DumbPtrTraits<WebCore::Image> > contentImage;
	Color estimatedBackgroundColor;
	unsigned char presentationTransition;
	unsigned short options;
} TextIndicatorData;

typedef struct InteractionInformationRequest {
	IntPoint point;
	BOOL includeSnapshot;
	BOOL includeLinkIndicator;
} InteractionInformationRequest;

typedef struct InteractionInformationAtPosition {
	InteractionInformationRequest request;
	BOOL nodeAtPositionIsAssistedNode;
	BOOL hasSelectionAtPosition;
	BOOL isSelectable;
	BOOL isNearMarkedText;
	BOOL touchCalloutEnabled;
	BOOL isLink;
	BOOL isImage;
	BOOL isAttachment;
	BOOL isAnimatedImage;
	BOOL isElement;
	BOOL isDataDetectorLink;
	FloatPoint adjustedPointForNodeRespondingToClickEvents;
	URL url;
	URL imageURL;
	String title;
	String idAttribute;
	IntRect bounds;
	RefPtr<WebKit::ShareableBitmap, WTF::DumbPtrTraits<WebKit::ShareableBitmap> > image;
	String textBefore;
	String textAfter;
	TextIndicatorData linkIndicator;
	String dataDetectorIdentifier;
	RetainPtr<NSArray> dataDetectorResults;
} InteractionInformationAtPosition;

typedef struct optional<WebKit::InteractionInformationAtPosition> {
	BOOL init_;
	storage_t<WebKit::InteractionInformationAtPosition> storage_;
	unsigned char dummy_;
	InteractionInformationAtPosition) value_;
} optional<WebKit::InteractionInformationAtPosition>;

typedef struct RetainPtr<MPMediaControlsViewController> {
	void m_ptr;
} RetainPtr<MPMediaControlsViewController>;

typedef struct WeakObjCPtr<WKWebView> {
	id m_weakReference;
} WeakObjCPtr<WKWebView>;

typedef struct _compressed_pair<WebKit::ApplicationStateTracker *, std::__1::default_delete<WebKit::ApplicationStateTracker> > {
	ApplicationStateTracker __value_;
} compressed_pair<WebKit::ApplicationStateTracker *, std::__1::default_delete<WebKit::ApplicationStateTracker> >;

typedef struct unique_ptr<WebKit::ApplicationStateTracker, std::__1::default_delete<WebKit::ApplicationStateTracker> > {
	compressed_pair<WebKit::ApplicationStateTracker *, std::__1::default_delete<WebKit::ApplicationStateTracker> > __ptr_;
} unique_ptr<WebKit::ApplicationStateTracker, std::__1::default_delete<WebKit::ApplicationStateTracker> >;

typedef struct ObjectStorage<WebKit::WebBackForwardList> {
	type data;
} ObjectStorage<WebKit::WebBackForwardList>;

typedef struct ObjectStorage<WebKit::WebBackForwardListItem> {
	type data;
} ObjectStorage<WebKit::WebBackForwardListItem>;

typedef struct CGImage* CGImageRef;

typedef struct WeakObjCPtr<id<WKBrowsingContextHistoryDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKBrowsingContextHistoryDelegate> >;

typedef struct RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> > {
	WebPageProxy m_ptr;
} RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> >;

typedef struct _compressed_pair<WebKit::PageLoadStateObserver *, std::__1::default_delete<WebKit::PageLoadStateObserver> > {
	PageLoadStateObserver __value_;
} compressed_pair<WebKit::PageLoadStateObserver *, std::__1::default_delete<WebKit::PageLoadStateObserver> >;

typedef struct unique_ptr<WebKit::PageLoadStateObserver, std::__1::default_delete<WebKit::PageLoadStateObserver> > {
	compressed_pair<WebKit::PageLoadStateObserver *, std::__1::default_delete<WebKit::PageLoadStateObserver> > __ptr_;
} unique_ptr<WebKit::PageLoadStateObserver, std::__1::default_delete<WebKit::PageLoadStateObserver> >;

typedef struct WeakObjCPtr<id<WKBrowsingContextLoadDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKBrowsingContextLoadDelegate> >;

typedef struct WeakObjCPtr<id<WKBrowsingContextPolicyDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKBrowsingContextPolicyDelegate> >;

typedef struct OpaqueWKPage* OpaqueWKPageRef;

typedef struct ObjectStorage<WebKit::WebPageGroup> {
	type data;
} ObjectStorage<WebKit::WebPageGroup>;

typedef struct OpaqueWKPageGroup* OpaqueWKPageGroupRef;

typedef struct WeakObjCPtr<id<WKConnectionDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKConnectionDelegate> >;

typedef struct ObjectStorage<API::ContentRuleList> {
	type data;
} ObjectStorage<API::ContentRuleList>;

typedef struct ObjectStorage<API::ContentRuleListStore> {
	type data;
} ObjectStorage<API::ContentRuleListStore>;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct RetainPtr<UIWebTouchEventsGestureRecognizer> {
	void m_ptr;
} RetainPtr<UIWebTouchEventsGestureRecognizer>;

typedef struct RetainPtr<WKSyntheticClickTapGestureRecognizer> {
	void m_ptr;
} RetainPtr<WKSyntheticClickTapGestureRecognizer>;

typedef struct RetainPtr<_UIWebHighlightLongPressGestureRecognizer> {
	void m_ptr;
} RetainPtr<_UIWebHighlightLongPressGestureRecognizer>;

typedef struct RetainPtr<UILongPressGestureRecognizer> {
	void m_ptr;
} RetainPtr<UILongPressGestureRecognizer>;

typedef struct RetainPtr<UITapGestureRecognizer> {
	void m_ptr;
} RetainPtr<UITapGestureRecognizer>;

typedef struct RetainPtr<WKInspectorNodeSearchGestureRecognizer> {
	void m_ptr;
} RetainPtr<WKInspectorNodeSearchGestureRecognizer>;

typedef struct RetainPtr<UIWKTextInteractionAssistant> {
	void m_ptr;
} RetainPtr<UIWKTextInteractionAssistant>;

typedef struct RetainPtr<UIWKSelectionAssistant> {
	void m_ptr;
} RetainPtr<UIWKSelectionAssistant>;

typedef struct RetainPtr<UITextInputTraits> {
	void m_ptr;
} RetainPtr<UITextInputTraits>;

typedef struct RetainPtr<UIWebFormAccessory> {
	void m_ptr;
} RetainPtr<UIWebFormAccessory>;

typedef struct RetainPtr<_UIHighlightView> {
	void m_ptr;
} RetainPtr<_UIHighlightView>;

typedef struct RetainPtr<UIView> {
	void m_ptr;
} RetainPtr<UIView>;

typedef struct RetainPtr<WKActionSheetAssistant> {
	void m_ptr;
} RetainPtr<WKActionSheetAssistant>;

typedef struct RetainPtr<WKAirPlayRoutePicker> {
	void m_ptr;
} RetainPtr<WKAirPlayRoutePicker>;

typedef struct RetainPtr<WKFormInputSession> {
	void m_ptr;
} RetainPtr<WKFormInputSession>;

typedef struct RetainPtr<WKFileUploadPanel> {
	void m_ptr;
} RetainPtr<WKFileUploadPanel>;

typedef struct RetainPtr<UIGestureRecognizer> {
	void m_ptr;
} RetainPtr<UIGestureRecognizer>;

typedef struct Vector<bool, 0, WTF::CrashOnOverflow, 16> {
	BOOL m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<bool, 0, WTF::CrashOnOverflow, 16>;

typedef struct RetainPtr<UIPreviewItemController> {
	void m_ptr;
} RetainPtr<UIPreviewItemController>;

typedef struct _compressed_pair<WebKit::SmartMagnificationController *, std::__1::default_delete<WebKit::SmartMagnificationController> > {
	SmartMagnificationController __value_;
} compressed_pair<WebKit::SmartMagnificationController *, std::__1::default_delete<WebKit::SmartMagnificationController> >;

typedef struct unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController> > {
	compressed_pair<WebKit::SmartMagnificationController *, std::__1::default_delete<WebKit::SmartMagnificationController> > __ptr_;
} unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController> >;

typedef struct WeakObjCPtr<id<UITextInputDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<UITextInputDelegate> >;

typedef struct Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16> {
	FloatQuad m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16>;

typedef struct TapHighlightInformation {
	Color color;
	Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16> quads;
	IntSize topLeftRadius;
	IntSize topRightRadius;
	IntSize bottomLeftRadius;
	IntSize bottomRightRadius;
} TapHighlightInformation;

typedef struct WKAutoCorrectionData {
	String fontName;
	double fontSize;
	unsigned long long fontTraits;
	CGRect textFirstRect;
	CGRect textLastRect;
	/*^block*/id autocorrectionHandler;
	/*^block*/id autocorrectionContextHandler;
} WKAutoCorrectionData;

typedef struct Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16> {
	OptionItem m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16>;

typedef struct AssistedNodeInformation {
	IntRect elementRect;
	IntRect selectionRect;
	double minimumScaleFactor;
	double maximumScaleFactor;
	double maximumScaleFactorIgnoringAlwaysScalable;
	double nodeFontSize;
	BOOL hasNextNode;
	IntRect nextNodeRect;
	BOOL hasPreviousNode;
	IntRect previousNodeRect;
	BOOL isAutocorrect;
	BOOL isRTL;
	BOOL isMultiSelect;
	BOOL isReadOnly;
	BOOL allowsUserScaling;
	BOOL allowsUserScalingIgnoringAlwaysScalable;
	BOOL insideFixedPosition;
	int autocapitalizeType;
	int elementType;
	String formAction;
	Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16> selectOptions;
	int selectedIndex;
	String value;
	double valueAsNumber;
	String title;
	BOOL acceptsAutofilledLoginCredentials;
	BOOL isAutofillableUsernameField;
	URL representingPageURL;
	int autofillFieldName;
	String placeholder;
	String label;
	String ariaLabel;
	unsigned long long assistedNodeIdentifier;
} AssistedNodeInformation;

typedef struct RetainPtr<NSObject<WKFormPeripheral> > {
	void m_ptr;
} RetainPtr<NSObject<WKFormPeripheral> >;

typedef struct RetainPtr<UIEvent> {
	void m_ptr;
} RetainPtr<UIEvent>;

typedef struct BlockPtr<void (WebEvent *, bool)> {
	/*^block*/id m_block;
} BlockPtr<void (WebEvent *, bool)>;

typedef struct Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16> {
	SelectionRect m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16>;

typedef struct WKSelectionDrawingInfo {
	int type;
	IntRect caretRect;
	Vector<WebCore::SelectionRect, 0, WTF::CrashOnOverflow, 16> selectionRects;
} WKSelectionDrawingInfo;

typedef struct optional<WebKit::InteractionInformationRequest> {
	BOOL init_;
	constexpr_storage_t<WebKit::InteractionInformationRequest> storage_;
	unsigned char dummy_;
	InteractionInformationRequest) value_;
} optional<WebKit::InteractionInformationRequest>;

typedef struct Vector<std::optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > >, 0, WTF::CrashOnOverflow, 16> {
	optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > > m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<std::optional<std::__1::pair<WebKit::InteractionInformationRequest, WTF::BlockPtr<void (WebKit::InteractionInformationAtPosition)> > >, 0, WTF::CrashOnOverflow, 16>;

typedef struct _compressed_pair<WebKit::InputViewUpdateDeferrer *, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> > {
	InputViewUpdateDeferrer __value_;
} compressed_pair<WebKit::InputViewUpdateDeferrer *, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> >;

typedef struct unique_ptr<WebKit::InputViewUpdateDeferrer, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> > {
	compressed_pair<WebKit::InputViewUpdateDeferrer *, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> > __ptr_;
} unique_ptr<WebKit::InputViewUpdateDeferrer, std::__1::default_delete<WebKit::InputViewUpdateDeferrer> >;

typedef struct RetainPtr<id<UIDragSession> > {
	void m_ptr;
} RetainPtr<id<UIDragSession> >;

typedef struct RetainPtr<id<UIDropSession> > {
	void m_ptr;
} RetainPtr<id<UIDropSession> >;

typedef struct BlockPtr<void ()> {
	/*^block*/id m_block;
} BlockPtr<void ()>;

typedef struct BlockPtr<void (NSArray<UIDragItem *> *)> {
	/*^block*/id m_block;
} BlockPtr<void (NSArray<UIDragItem *> *)>;

typedef struct Vector<WebKit::DragSourceState, 0, WTF::CrashOnOverflow, 16> {
	DragSourceState m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WebKit::DragSourceState, 0, WTF::CrashOnOverflow, 16>;

typedef struct optional<WebCore::TextIndicatorData> {
	BOOL init_;
	storage_t<WebCore::TextIndicatorData> storage_;
	unsigned char dummy_;
	TextIndicatorData) value_;
} optional<WebCore::TextIndicatorData>;

typedef struct DragSourceState {
	int action;
	CGPoint adjustedOrigin;
	CGRect dragPreviewFrameInRootViewCoordinates;
	RetainPtr<UIImage> image;
	optional<WebCore::TextIndicatorData> indicatorData;
	String linkTitle;
	URL linkURL;
	BOOL possiblyNeedsDragPreviewUpdate;
	long long itemIdentifier;
} DragSourceState;

typedef struct optional<WebKit::DragSourceState> {
	BOOL init_;
	storage_t<WebKit::DragSourceState> storage_;
	unsigned char dummy_;
	DragSourceState) value_;
} optional<WebKit::DragSourceState>;

typedef struct DragDropInteractionState {
	CGPoint m_lastGlobalPosition;
	CGPoint m_adjustedPositionForDragEnd;
	BOOL m_didBeginDragging;
	BOOL m_isPerformingDrop;
	RetainPtr<id<UIDragSession> > m_dragSession;
	RetainPtr<id<UIDropSession> > m_dropSession;
	BlockPtr<void ()> m_dragStartCompletionBlock;
	BlockPtr<void ()> m_dragCancelSetDownBlock;
	BlockPtr<void (NSArray<UIDragItem *> *)> m_addDragItemCompletionBlock;
	optional<WebKit::DragSourceState> m_stagedDragSource;
	Vector<WebKit::DragSourceState, 0, WTF::CrashOnOverflow, 16> m_activeDragSources;
} DragDropInteractionState;

typedef struct RetainPtr<UIDragInteraction> {
	void m_ptr;
} RetainPtr<UIDragInteraction>;

typedef struct RetainPtr<UIDropInteraction> {
	void m_ptr;
} RetainPtr<UIDropInteraction>;

typedef struct RetainPtr<_UITextDragCaretView> {
	void m_ptr;
} RetainPtr<_UITextDragCaretView>;

typedef struct _compressed_pair<WebKit::PageClientImpl *, std::__1::default_delete<WebKit::PageClientImpl> > {
	PageClientImpl __value_;
} compressed_pair<WebKit::PageClientImpl *, std::__1::default_delete<WebKit::PageClientImpl> >;

typedef struct unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl> > {
	compressed_pair<WebKit::PageClientImpl *, std::__1::default_delete<WebKit::PageClientImpl> > __ptr_;
} unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl> >;

typedef struct RetainPtr<WKBrowsingContextController> {
	void m_ptr;
} RetainPtr<WKBrowsingContextController>;

typedef struct RetainPtr<WKInspectorIndicationView> {
	void m_ptr;
} RetainPtr<WKInspectorIndicationView>;

typedef struct RetainPtr<WKInspectorHighlightView> {
	void m_ptr;
} RetainPtr<WKInspectorHighlightView>;

typedef struct MonotonicTime {
	double m_value;
} MonotonicTime;

typedef struct Data {
	MonotonicTime timestamp;
	CGPoint position;
	double scale;
} Data;

typedef struct HistoricalVelocityData {
	unsigned m_historySize;
	unsigned m_latestDataIndex;
	MonotonicTime m_lastAppendTimestamp;
	Data m_history[3];
} HistoricalVelocityData;

typedef struct RetainPtr<NSUndoManager> {
	void m_ptr;
} RetainPtr<NSUndoManager>;

typedef struct __CFCharacterSet* CFCharacterSetRef;

typedef struct OpenPanelParameters* OpenPanelParametersRef;

typedef struct WebOpenPanelResultListenerProxy* WebOpenPanelResultListenerProxyRef;

typedef struct WeakObjCPtr<WKContentView> {
	id m_weakReference;
} WeakObjCPtr<WKContentView>;

typedef struct RetainPtr<WKFocusedElementInfo> {
	void m_ptr;
} RetainPtr<WKFocusedElementInfo>;

typedef struct RetainPtr<NSArray<UITextSuggestion *> > {
	void m_ptr;
} RetainPtr<NSArray<UITextSuggestion *> >;

typedef struct RetainPtr<NSObject<NSSecureCoding> > {
	void m_ptr;
} RetainPtr<NSObject<NSSecureCoding> >;

typedef struct RetainPtr<NSMutableArray> {
	void m_ptr;
} RetainPtr<NSMutableArray>;

typedef struct _compressed_pair<WebCore::DocumentParserYieldToken *, std::__1::default_delete<WebCore::DocumentParserYieldToken> > {
	DocumentParserYieldToken __value_;
} compressed_pair<WebCore::DocumentParserYieldToken *, std::__1::default_delete<WebCore::DocumentParserYieldToken> >;

typedef struct unique_ptr<WebCore::DocumentParserYieldToken, std::__1::default_delete<WebCore::DocumentParserYieldToken> > {
	compressed_pair<WebCore::DocumentParserYieldToken *, std::__1::default_delete<WebCore::DocumentParserYieldToken> > __ptr_;
} unique_ptr<WebCore::DocumentParserYieldToken, std::__1::default_delete<WebCore::DocumentParserYieldToken> >;

typedef struct RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> > {
	Node m_ptr;
} RefPtr<WebCore::Node, WTF::DumbPtrTraits<WebCore::Node> >;

typedef struct OpaqueWKBundleNodeHandle* OpaqueWKBundleNodeHandleRef;

typedef struct RefPtr<WebCore::Range, WTF::DumbPtrTraits<WebCore::Range> > {
	Range m_ptr;
} RefPtr<WebCore::Range, WTF::DumbPtrTraits<WebCore::Range> >;

typedef struct OpaqueWKBundleRangeHandle* OpaqueWKBundleRangeHandleRef;

typedef struct _compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> > {
	TextIterator __value_;
} compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> >;

typedef struct unique_ptr<WebCore::TextIterator, std::__1::default_delete<WebCore::TextIterator> > {
	compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> > __ptr_;
} unique_ptr<WebCore::TextIterator, std::__1::default_delete<WebCore::TextIterator> >;

typedef struct Vector<unsigned short, 0, WTF::CrashOnOverflow, 16> {
	unsigned short m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<unsigned short, 0, WTF::CrashOnOverflow, 16>;

typedef struct RefPtr<WebKit::WebOpenPanelResultListenerProxy, WTF::DumbPtrTraits<WebKit::WebOpenPanelResultListenerProxy> > {
	WebOpenPanelResultListenerProxy m_ptr;
} RefPtr<WebKit::WebOpenPanelResultListenerProxy, WTF::DumbPtrTraits<WebKit::WebOpenPanelResultListenerProxy> >;

typedef struct RetainPtr<UIImagePickerController> {
	void m_ptr;
} RetainPtr<UIImagePickerController>;

typedef struct RetainPtr<UIPopoverController> {
	void m_ptr;
} RetainPtr<UIPopoverController>;

typedef struct RetainPtr<UIDocumentMenuViewController> {
	void m_ptr;
} RetainPtr<UIDocumentMenuViewController>;

typedef struct RetainPtr<UIDatePicker> {
	void m_ptr;
} RetainPtr<UIDatePicker>;

typedef struct RetainPtr<id<WKFormControl> > {
	void m_ptr;
} RetainPtr<id<WKFormControl> >;

typedef struct RetainPtr<NSObject<WKFormControl> > {
	void m_ptr;
} RetainPtr<NSObject<WKFormControl> >;

typedef struct RetainPtr<WKDateTimePopoverViewController> {
	void m_ptr;
} RetainPtr<WKDateTimePopoverViewController>;

typedef struct RetainPtr<WKSelectTableViewController> {
	void m_ptr;
} RetainPtr<WKSelectTableViewController>;

typedef struct ObjectStorage<API::FrameInfo> {
	type data;
} ObjectStorage<API::FrameInfo>;

typedef struct RetainPtr<AVBackgroundView> {
	void m_ptr;
} RetainPtr<AVBackgroundView>;

typedef struct RetainPtr<WKFullscreenStackView> {
	void m_ptr;
} RetainPtr<WKFullscreenStackView>;

typedef struct RetainPtr<_WKExtrinsicButton> {
	void m_ptr;
} RetainPtr<_WKExtrinsicButton>;

typedef struct RetainPtr<UIButton> {
	void m_ptr;
} RetainPtr<UIButton>;

typedef struct RetainPtr<UILayoutGuide> {
	void m_ptr;
} RetainPtr<UILayoutGuide>;

typedef struct RetainPtr<NSLayoutConstraint> {
	void m_ptr;
} RetainPtr<NSLayoutConstraint>;

typedef struct Seconds {
	double m_value;
} Seconds;

typedef struct FullscreenTouchSecheuristic {
	double m_weight;
	Seconds m_rampUpSpeed;
	Seconds m_rampDownSpeed;
	double m_xWeight;
	double m_yWeight;
	double m_gamma;
	double m_cutoff;
	CGSize m_size;
	Seconds m_lastTouchTime;
	CGPoint m_lastTouchLocation;
	double m_lastScore;
} FullscreenTouchSecheuristic;

typedef struct RefPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::DumbPtrTraits<WebCore::PlaybackSessionInterfaceAVKit> > {
	PlaybackSessionInterfaceAVKit m_ptr;
} RefPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::DumbPtrTraits<WebCore::PlaybackSessionInterfaceAVKit> >;

typedef struct WKFullScreenViewControllerPlaybackSessionModelClient {
	/*function pointer*/void* _vptr$PlaybackSessionModelClient;
	WKFullScreenViewController* m_parent;
	RefPtr<WebCore::PlaybackSessionInterfaceAVKit, WTF::DumbPtrTraits<WebCore::PlaybackSessionInterfaceAVKit> > m_interface;
} WKFullScreenViewControllerPlaybackSessionModelClient;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct RetainPtr<id<UIViewControllerContextTransitioning> > {
	void m_ptr;
} RetainPtr<id<UIViewControllerContextTransitioning> >;

typedef struct RetainPtr<WKFullscreenAnimationController> {
	void m_ptr;
} RetainPtr<WKFullscreenAnimationController>;

typedef struct RetainPtr<WKFullScreenPlaceholderView> {
	void m_ptr;
} RetainPtr<WKFullScreenPlaceholderView>;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct WKWebViewState {
	float _savedTopContentInset;
	double _savedPageScale;
	double _savedViewScale;
	double _savedZoomScale;
	UIEdgeInsets _savedEdgeInset;
	UIEdgeInsets _savedObscuredInsets;
	UIEdgeInsets _savedScrollIndicatorInsets;
	CGPoint _savedContentOffset;
	double _savedMinimumZoomScale;
	double _savedMaximumZoomScale;
	BOOL _savedBouncesZoom;
	BOOL _savedForceAlwaysUserScalable;
} WKWebViewState;

typedef struct RetainPtr<UIWindow> {
	void m_ptr;
} RetainPtr<UIWindow>;

typedef struct RefPtr<WebKit::GenericCallback<>, WTF::DumbPtrTraits<WebKit::GenericCallback<> > > {
	GenericCallback<> m_ptr;
} RefPtr<WebKit::GenericCallback<>, WTF::DumbPtrTraits<WebKit::GenericCallback<> > >;

typedef struct RetainPtr<WKFullScreenViewController> {
	void m_ptr;
} RetainPtr<WKFullScreenViewController>;

typedef struct RetainPtr<UISwipeGestureRecognizer> {
	void m_ptr;
} RetainPtr<UISwipeGestureRecognizer>;

typedef struct RetainPtr<UIPanGestureRecognizer> {
	void m_ptr;
} RetainPtr<UIPanGestureRecognizer>;

typedef struct RetainPtr<UIPinchGestureRecognizer> {
	void m_ptr;
} RetainPtr<UIPinchGestureRecognizer>;

typedef struct RetainPtr<WKFullScreenInteractiveTransition> {
	void m_ptr;
} RetainPtr<WKFullScreenInteractiveTransition>;

typedef struct RetainPtr<id> {
	void m_ptr;
} RetainPtr<id>;

typedef struct __SecTrust* SecTrustRef;

typedef struct RefPtr<WebKit::WebGeolocationManagerProxy, WTF::DumbPtrTraits<WebKit::WebGeolocationManagerProxy> > {
	WebGeolocationManagerProxy m_ptr;
} RefPtr<WebKit::WebGeolocationManagerProxy, WTF::DumbPtrTraits<WebKit::WebGeolocationManagerProxy> >;

typedef struct RetainPtr<id<_WKGeolocationCoreLocationProvider> > {
	void m_ptr;
} RetainPtr<id<_WKGeolocationCoreLocationProvider> >;

typedef struct RefPtr<WebKit::WebGeolocationPosition, WTF::DumbPtrTraits<WebKit::WebGeolocationPosition> > {
	WebGeolocationPosition m_ptr;
} RefPtr<WebKit::WebGeolocationPosition, WTF::DumbPtrTraits<WebKit::WebGeolocationPosition> >;

typedef struct Vector<GeolocationRequestData, 0, WTF::CrashOnOverflow, 16> {
	GeolocationRequestData m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<GeolocationRequestData, 0, WTF::CrashOnOverflow, 16>;

typedef struct RetainPtr<WebGeolocationCoreLocationProvider> {
	void m_ptr;
} RetainPtr<WebGeolocationCoreLocationProvider>;

typedef struct _compressed_pair<WTF::Function<void (bool)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> > {
	CallableWrapperBase __value_;
} compressed_pair<WTF::Function<void (bool)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> >;

typedef struct unique_ptr<WTF::Function<void (bool)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> > {
	compressed_pair<WTF::Function<void (bool)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> > __ptr_;
} unique_ptr<WTF::Function<void (bool)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> >;

typedef struct Function<void (bool)> {
	unique_ptr<WTF::Function<void (bool)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (bool)>::CallableWrapperBase> > m_callableWrapper;
} Function<void (bool)>;

typedef struct ObjectStorage<API::HTTPCookieStore> {
	type data;
} ObjectStorage<API::HTTPCookieStore>;

typedef struct HashTable<id<WKHTTPCookieStoreObserver>, WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashMap<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >::KeyValuePairTraits, WTF::HashTraits<id<WKHTTPCookieStoreObserver> > > {
	KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<id<WKHTTPCookieStoreObserver>, WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashMap<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >::KeyValuePairTraits, WTF::HashTraits<id<WKHTTPCookieStoreObserver> > >;

typedef struct HashMap<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > > {
	HashTable<id<WKHTTPCookieStoreObserver>, WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashMap<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >::KeyValuePairTraits, WTF::HashTraits<id<WKHTTPCookieStoreObserver> > > m_impl;
} HashMap<id<WKHTTPCookieStoreObserver>, std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> >, WTF::PtrHash<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<id<WKHTTPCookieStoreObserver> >, WTF::HashTraits<std::__1::unique_ptr<WKHTTPCookieStoreObserver, std::__1::default_delete<WKHTTPCookieStoreObserver> > > >;

typedef struct RetainPtr<CGImage *> {
	void m_ptr;
} RetainPtr<CGImage *>;

typedef struct RetainPtr<UIImageView> {
	void m_ptr;
} RetainPtr<UIImageView>;

typedef struct RetainPtr<UITouch> {
	void m_ptr;
} RetainPtr<UITouch>;

typedef struct ObjectStorage<API::Navigation> {
	type data;
} ObjectStorage<API::Navigation>;

typedef struct ObjectStorage<API::NavigationAction> {
	type data;
} ObjectStorage<API::NavigationAction>;

typedef struct ObjectStorage<API::NavigationData> {
	type data;
} ObjectStorage<API::NavigationData>;

typedef struct ObjectStorage<API::NavigationResponse> {
	type data;
} ObjectStorage<API::NavigationResponse>;

typedef struct ObjectStorage<API::Array> {
	type data;
} ObjectStorage<API::Array>;

typedef struct ObjectStorage<API::Data> {
	type data;
} ObjectStorage<API::Data>;

typedef struct ObjectStorage<API::Dictionary> {
	type data;
} ObjectStorage<API::Dictionary>;

typedef struct ObjectStorage<API::Number<bool, API::Object::Type::Boolean> > {
	type data;
} ObjectStorage<API::Number<bool, API::Object::Type::Boolean> >;

typedef struct ObjectStorage<API::Number<double, API::Object::Type::Double> > {
	type data;
} ObjectStorage<API::Number<double, API::Object::Type::Double> >;

typedef struct ObjectStorage<API::Number<unsigned long long, API::Object::Type::UInt64> > {
	type data;
} ObjectStorage<API::Number<unsigned long long, API::Object::Type::UInt64> >;

typedef union {
	ObjectStorage<API::Number<bool, API::Object::Type::Boolean> > _boolean;
	ObjectStorage<API::Number<double, API::Object::Type::Double> > _double;
	ObjectStorage<API::Number<unsigned long long, API::Object::Type::UInt64> > _uint64;
} SCD_Union_WK244;

typedef struct RetainPtr<UIScrollView> {
	void m_ptr;
} RetainPtr<UIScrollView>;

typedef struct RetainPtr<UIDocumentPasswordView> {
	void m_ptr;
} RetainPtr<UIDocumentPasswordView>;

typedef struct RetainPtr<UIColor> {
	void m_ptr;
} RetainPtr<UIColor>;

typedef struct RetainPtr<UILabel> {
	void m_ptr;
} RetainPtr<UILabel>;

typedef struct RetainPtr<_UIBackdropView> {
	void m_ptr;
} RetainPtr<_UIBackdropView>;

typedef struct RetainPtr<NSTimer> {
	void m_ptr;
} RetainPtr<NSTimer>;

typedef struct optional<unsigned long> {
	BOOL init_;
	constexpr_storage_t<unsigned long> storage_;
	unsigned char dummy_;
	Q) value_;
} optional<unsigned long>;

typedef struct RetainPtr<PDFHostViewController> {
	void m_ptr;
} RetainPtr<PDFHostViewController>;

typedef struct ObjectStorage<WebKit::WebPreferences> {
	type data;
} ObjectStorage<WebKit::WebPreferences>;

typedef struct RefPtr<WebKit::WebProcessPool, WTF::DumbPtrTraits<WebKit::WebProcessPool> > {
	WebProcessPool m_ptr;
} RefPtr<WebKit::WebProcessPool, WTF::DumbPtrTraits<WebKit::WebProcessPool> >;

typedef struct WeakObjCPtr<id<WKProcessGroupDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKProcessGroupDelegate> >;

typedef struct RetainPtr<WKGeolocationProviderIOS> {
	void m_ptr;
} RetainPtr<WKGeolocationProviderIOS>;

typedef struct OpaqueWKContext* OpaqueWKContextRef;

typedef struct ObjectStorage<WebKit::WebProcessPool> {
	type data;
} ObjectStorage<WebKit::WebProcessPool>;

typedef struct WeakObjCPtr<id<_WKAutomationDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<_WKAutomationDelegate> >;

typedef struct WeakObjCPtr<id<_WKDownloadDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<_WKDownloadDelegate> >;

typedef struct RetainPtr<_WKAutomationSession> {
	void m_ptr;
} RetainPtr<_WKAutomationSession>;

typedef struct RetainPtr<_WKRemoteObjectRegistry> {
	void m_ptr;
} RetainPtr<_WKRemoteObjectRegistry>;

typedef struct RetainPtr<_WKRemoteObjectInterface> {
	void m_ptr;
} RetainPtr<_WKRemoteObjectInterface>;

typedef struct RefPtr<API::Dictionary, WTF::DumbPtrTraits<API::Dictionary> > {
	Dictionary m_ptr;
} RefPtr<API::Dictionary, WTF::DumbPtrTraits<API::Dictionary> >;

typedef struct RetainPtr<WKFrameInfo> {
	void m_ptr;
} RetainPtr<WKFrameInfo>;

typedef struct WeakObjCPtr<id<UIScrollViewDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<UIScrollViewDelegate> >;

typedef struct ObjectStorage<API::SecurityOrigin> {
	type data;
} ObjectStorage<API::SecurityOrigin>;

typedef struct RetainPtr<ASVThumbnailView> {
	void m_ptr;
} RetainPtr<ASVThumbnailView>;

typedef struct WKRetainPtr<const void *> {
	void m_ptr;
} WKRetainPtr<const void *>;

typedef struct ObjectStorage<API::URLSchemeTask> {
	type data;
} ObjectStorage<API::URLSchemeTask>;

typedef struct ObjectStorage<WebKit::WebUserContentControllerProxy> {
	type data;
} ObjectStorage<WebKit::WebUserContentControllerProxy>;

typedef struct ObjectStorage<API::UserScript> {
	type data;
} ObjectStorage<API::UserScript>;

typedef struct ObjectStorage<WebKit::InjectedBundle> {
	type data;
} ObjectStorage<WebKit::InjectedBundle>;

typedef struct RetainPtr<id<WKWebProcessPlugIn> > {
	void m_ptr;
} RetainPtr<id<WKWebProcessPlugIn> >;

typedef struct OpaqueWKBundle* OpaqueWKBundleRef;

typedef struct ObjectStorage<WebKit::WebPage> {
	type data;
} ObjectStorage<WebKit::WebPage>;

typedef struct WeakObjCPtr<id<WKWebProcessPlugInLoadDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKWebProcessPlugInLoadDelegate> >;

typedef struct WeakObjCPtr<id<WKWebProcessPlugInFormDelegatePrivate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKWebProcessPlugInFormDelegatePrivate> >;

typedef struct WeakObjCPtr<id<WKWebProcessPlugInEditingDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<WKWebProcessPlugInEditingDelegate> >;

typedef struct OpaqueWKBundlePage* OpaqueWKBundlePageRef;

typedef struct ObjectStorage<WebKit::WebFrame> {
	type data;
} ObjectStorage<WebKit::WebFrame>;

typedef struct ObjectStorage<WebKit::InjectedBundleHitTestResult> {
	type data;
} ObjectStorage<WebKit::InjectedBundleHitTestResult>;

typedef struct ObjectStorage<WebKit::InjectedBundleNodeHandle> {
	type data;
} ObjectStorage<WebKit::InjectedBundleNodeHandle>;

typedef struct ObjectStorage<WebKit::WebPageGroupProxy> {
	type data;
} ObjectStorage<WebKit::WebPageGroupProxy>;

typedef struct ObjectStorage<WebKit::InjectedBundleRangeHandle> {
	type data;
} ObjectStorage<WebKit::InjectedBundleRangeHandle>;

typedef struct ObjectStorage<WebKit::InjectedBundleScriptWorld> {
	type data;
} ObjectStorage<WebKit::InjectedBundleScriptWorld>;

typedef struct ObjectStorage<API::WebsiteDataRecord> {
	type data;
} ObjectStorage<API::WebsiteDataRecord>;

typedef struct ObjectStorage<API::WebsiteDataStore> {
	type data;
} ObjectStorage<API::WebsiteDataStore>;

typedef struct RetainPtr<WKWebViewConfiguration> {
	void m_ptr;
} RetainPtr<WKWebViewConfiguration>;

typedef struct _compressed_pair<WebKit::NavigationState *, std::__1::default_delete<WebKit::NavigationState> > {
	NavigationState __value_;
} compressed_pair<WebKit::NavigationState *, std::__1::default_delete<WebKit::NavigationState> >;

typedef struct unique_ptr<WebKit::NavigationState, std::__1::default_delete<WebKit::NavigationState> > {
	compressed_pair<WebKit::NavigationState *, std::__1::default_delete<WebKit::NavigationState> > __ptr_;
} unique_ptr<WebKit::NavigationState, std::__1::default_delete<WebKit::NavigationState> >;

typedef struct _compressed_pair<WebKit::UIDelegate *, std::__1::default_delete<WebKit::UIDelegate> > {
	UIDelegate __value_;
} compressed_pair<WebKit::UIDelegate *, std::__1::default_delete<WebKit::UIDelegate> >;

typedef struct unique_ptr<WebKit::UIDelegate, std::__1::default_delete<WebKit::UIDelegate> > {
	compressed_pair<WebKit::UIDelegate *, std::__1::default_delete<WebKit::UIDelegate> > __ptr_;
} unique_ptr<WebKit::UIDelegate, std::__1::default_delete<WebKit::UIDelegate> >;

typedef struct _compressed_pair<WebKit::IconLoadingDelegate *, std::__1::default_delete<WebKit::IconLoadingDelegate> > {
	IconLoadingDelegate __value_;
} compressed_pair<WebKit::IconLoadingDelegate *, std::__1::default_delete<WebKit::IconLoadingDelegate> >;

typedef struct unique_ptr<WebKit::IconLoadingDelegate, std::__1::default_delete<WebKit::IconLoadingDelegate> > {
	compressed_pair<WebKit::IconLoadingDelegate *, std::__1::default_delete<WebKit::IconLoadingDelegate> > __ptr_;
} unique_ptr<WebKit::IconLoadingDelegate, std::__1::default_delete<WebKit::IconLoadingDelegate> >;

typedef struct WeakObjCPtr<id<_WKInputDelegate> > {
	id m_weakReference;
} WeakObjCPtr<id<_WKInputDelegate> >;

typedef struct RetainPtr<WKScrollView> {
	void m_ptr;
} RetainPtr<WKScrollView>;

typedef struct RetainPtr<WKContentView> {
	void m_ptr;
} RetainPtr<WKContentView>;

typedef struct RetainPtr<WKFullScreenWindowController> {
	void m_ptr;
} RetainPtr<WKFullScreenWindowController>;

typedef struct optional<WebCore::FloatSize> {
	BOOL init_;
	constexpr_storage_t<WebCore::FloatSize> storage_;
	unsigned char dummy_;
	FloatSize) value_;
} optional<WebCore::FloatSize>;

typedef struct optional<int> {
	BOOL init_;
	constexpr_storage_t<int> storage_;
	unsigned char dummy_;
	i) value_;
} optional<int>;

typedef struct CATransform3D {
	double m11;
	double m12;
	double m13;
	double m14;
	double m21;
	double m22;
	double m23;
	double m24;
	double m31;
	double m32;
	double m33;
	double m34;
	double m41;
	double m42;
	double m43;
	double m44;
} CATransform3D;

typedef struct optional<CGRect> {
	BOOL init_;
	constexpr_storage_t<CGRect> storage_;
	unsigned char dummy_;
	CGRect) value_;
} optional<CGRect>;

typedef struct optional<WebCore::FloatPoint> {
	BOOL init_;
	constexpr_storage_t<WebCore::FloatPoint> storage_;
	unsigned char dummy_;
	FloatPoint) value_;
} optional<WebCore::FloatPoint>;

typedef struct array<float, 4> {
	float __elems_[4];
} array<float, 4>;

typedef struct RectEdges<float> {
	array<float, 4> m_sides;
} RectEdges<float>;

typedef struct optional<unsigned long long> {
	BOOL init_;
	constexpr_storage_t<unsigned long long> storage_;
	unsigned char dummy_;
	Q) value_;
} optional<unsigned long long>;

typedef struct _compressed_pair<WebKit::ViewGestureController *, std::__1::default_delete<WebKit::ViewGestureController> > {
	ViewGestureController __value_;
} compressed_pair<WebKit::ViewGestureController *, std::__1::default_delete<WebKit::ViewGestureController> >;

typedef struct unique_ptr<WebKit::ViewGestureController, std::__1::default_delete<WebKit::ViewGestureController> > {
	compressed_pair<WebKit::ViewGestureController *, std::__1::default_delete<WebKit::ViewGestureController> > __ptr_;
} unique_ptr<WebKit::ViewGestureController, std::__1::default_delete<WebKit::ViewGestureController> >;

typedef struct RetainPtr<UIView<WKWebViewContentProvider> > {
	void m_ptr;
} RetainPtr<UIView<WKWebViewContentProvider> >;

typedef struct Vector<WTF::Function<void ()>, 0, WTF::CrashOnOverflow, 16> {
	Function<void ()> m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WTF::Function<void ()>, 0, WTF::CrashOnOverflow, 16>;

typedef struct RetainPtr<WKPasswordView> {
	void m_ptr;
} RetainPtr<WKPasswordView>;

typedef struct Vector<WTF::BlockPtr<void ()>, 0, WTF::CrashOnOverflow, 16> {
	BlockPtr<void ()> m_buffer;
	unsigned m_capacity;
	unsigned m_size;
} Vector<WTF::BlockPtr<void ()>, 0, WTF::CrashOnOverflow, 16>;

typedef struct RetainPtr<WKProcessPool> {
	void m_ptr;
} RetainPtr<WKProcessPool>;

typedef struct LazyInitialized<WTF::RetainPtr<WKProcessPool> > {
	BOOL m_isInitialized;
	RetainPtr<WKProcessPool> m_value;
} LazyInitialized<WTF::RetainPtr<WKProcessPool> >;

typedef struct RetainPtr<WKPreferences> {
	void m_ptr;
} RetainPtr<WKPreferences>;

typedef struct LazyInitialized<WTF::RetainPtr<WKPreferences> > {
	BOOL m_isInitialized;
	RetainPtr<WKPreferences> m_value;
} LazyInitialized<WTF::RetainPtr<WKPreferences> >;

typedef struct RetainPtr<WKUserContentController> {
	void m_ptr;
} RetainPtr<WKUserContentController>;

typedef struct LazyInitialized<WTF::RetainPtr<WKUserContentController> > {
	BOOL m_isInitialized;
	RetainPtr<WKUserContentController> m_value;
} LazyInitialized<WTF::RetainPtr<WKUserContentController> >;

typedef struct RetainPtr<_WKVisitedLinkStore> {
	void m_ptr;
} RetainPtr<_WKVisitedLinkStore>;

typedef struct LazyInitialized<WTF::RetainPtr<_WKVisitedLinkStore> > {
	BOOL m_isInitialized;
	RetainPtr<_WKVisitedLinkStore> m_value;
} LazyInitialized<WTF::RetainPtr<_WKVisitedLinkStore> >;

typedef struct LazyInitialized<WTF::RetainPtr<WKWebsiteDataStore> > {
	BOOL m_isInitialized;
	RetainPtr<WKWebsiteDataStore> m_value;
} LazyInitialized<WTF::RetainPtr<WKWebsiteDataStore> >;

typedef struct LazyInitialized<WTF::RetainPtr<NSString> > {
	BOOL m_isInitialized;
	RetainPtr<NSString> m_value;
} LazyInitialized<WTF::RetainPtr<NSString> >;

typedef struct RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > {
	void m_ptr;
} RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> >;

typedef struct LazyInitialized<WTF::RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > > {
	BOOL m_isInitialized;
	RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > m_value;
} LazyInitialized<WTF::RetainPtr<NSMutableDictionary<NSString *,id<WKURLSchemeHandler>> > >;

typedef struct RetainPtr<WKWebViewContentProviderRegistry> {
	void m_ptr;
} RetainPtr<WKWebViewContentProviderRegistry>;

typedef struct LazyInitialized<WTF::RetainPtr<WKWebViewContentProviderRegistry> > {
	BOOL m_isInitialized;
	RetainPtr<WKWebViewContentProviderRegistry> m_value;
} LazyInitialized<WTF::RetainPtr<WKWebViewContentProviderRegistry> >;

typedef struct RetainPtr<_WKApplicationManifest> {
	void m_ptr;
} RetainPtr<_WKApplicationManifest>;

typedef struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> > >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider> > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > {
	KeyValuePair<WTF::String, Class<WKWebViewContentProvider> > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::String, WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> > >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider> > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> >;

typedef struct HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider> > > {
	HashTable<WTF::String, WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, Class<WKWebViewContentProvider> > >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider> > >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > m_impl;
} HashMap<WTF::String, Class<WKWebViewContentProvider>, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<Class<WKWebViewContentProvider> > >;

typedef struct HashTable<WebKit::WebPageProxy *, WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int> >, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> >::KeyValuePairTraits, WTF::HashTraits<WebKit::WebPageProxy *> > {
	KeyValuePair<WebKit::WebPageProxy *, unsigned int> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebKit::WebPageProxy *, WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int> >, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> >::KeyValuePairTraits, WTF::HashTraits<WebKit::WebPageProxy *> >;

typedef struct HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> > {
	HashTable<WebKit::WebPageProxy *, WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebKit::WebPageProxy *, unsigned int> >, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> >::KeyValuePairTraits, WTF::HashTraits<WebKit::WebPageProxy *> > m_impl;
} HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> >;

typedef struct HashCountedSet<WebKit::WebPageProxy *, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *> > {
	HashMap<WebKit::WebPageProxy *, unsigned int, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *>, WTF::HashTraits<unsigned int> > m_impl;
} HashCountedSet<WebKit::WebPageProxy *, WTF::PtrHash<WebKit::WebPageProxy *>, WTF::HashTraits<WebKit::WebPageProxy *> >;

typedef struct ObjectStorage<API::WindowFeatures> {
	type data;
} ObjectStorage<API::WindowFeatures>;

