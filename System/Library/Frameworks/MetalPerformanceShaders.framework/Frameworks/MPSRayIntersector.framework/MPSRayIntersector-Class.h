/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:21 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/MPSRayIntersector
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MPSRayIntersector/MPSRayIntersector-Structs.h>
#import <MPSCore/MPSKernel.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol MTLBuffer, MTLComputePipelineState;
@interface MPSRayIntersector : MPSKernel <NSSecureCoding, NSCopying> {

	unsigned long long _cullMode;
	unsigned long long _frontFacingWinding;
	unsigned long long _triangleIntersectionTestType;
	unsigned long long _boundingBoxIntersectionTestType;
	unsigned long long _rayMaskOptions;
	unsigned long long _rayDataType;
	unsigned long long _intersectionDataType;
	BOOL _proRender;
	id<MTLBuffer> _dispatchIndirectBuffer;
	id<MTLComputePipelineState> _dispatchIndirectPipeline;
	unsigned long long _proRenderOptions;
	id<MTLBuffer> _shapeIndexBuffer;
	unsigned long long _shapeIndexBufferOffset;
	id<MTLBuffer> _shapeDataBuffer;
	unsigned long long _shapeDataBufferOffset;
	id<MTLBuffer> _rayIndexBuffer;
	unsigned long long _rayIndexBufferOffset;
	id<MTLBuffer> _rayMaskBuffer;
	unsigned long long _rayMaskBufferOffset;
	unsigned long long _multiHitCount;
	unsigned long long _renderLayerMask;
	 _clippingPlane;
	unsigned long long _globalRayMask;
	unsigned long long _shapeDataStride;
	unsigned long long _shapeDataMaskOffset;
	unsigned long long _shapeDataRenderLayerOffset;
	unsigned long long _rayStride;
	unsigned long long _intersectionStride;

}

@property (assign,nonatomic) unsigned long long cullMode; 
@property (assign,nonatomic) unsigned long long frontFacingWinding; 
@property (assign,nonatomic) unsigned long long triangleIntersectionTestType; 
@property (assign,nonatomic) unsigned long long boundingBoxIntersectionTestType; 
@property (assign,nonatomic) unsigned long long rayMaskOptions; 
@property (assign,nonatomic) unsigned long long rayStride;                                    //@synthesize rayStride=_rayStride - In the implementation block
@property (assign,nonatomic) unsigned long long intersectionStride;                           //@synthesize intersectionStride=_intersectionStride - In the implementation block
@property (assign,nonatomic) unsigned long long rayDataType; 
@property (assign,nonatomic) unsigned long long intersectionDataType; 
+(const MPSLibraryInfo*)libraryInfo;
+(BOOL)supportsSecureCoding;
-(id)initWithCoder:(id)arg1 device:(id)arg2 ;
-(void)setFrontFacingWinding:(unsigned long long)arg1 ;
-(void)setCullMode:(unsigned long long)arg1 ;
-(unsigned long long)cullMode;
-(id)copyWithZone:(NSZone*)arg1 device:(id)arg2 ;
-(id)initWithDevice:(id)arg1 ;
-(unsigned long long)frontFacingWinding;
-(void)sharedInitRaytracer;
-(/*function pointer*/void*)getHashForIntersectionType:(unsigned long long)arg1 indexing:(BOOL)arg2 indexType:(unsigned)arg3 instancing:(BOOL)arg4 vertexStride:(unsigned long long)arg5 transformType:(unsigned long long)arg6 rootNodeType:(int)arg7 ;
-(id)getPipelineForIntersectionType:(unsigned long long)arg1 accelerationStructure:(id)arg2 commandBuffer:(id)arg3 ;
-(unsigned long long)rayMaskOptions;
-(void)setRayMaskOptions:(unsigned long long)arg1 ;
-(unsigned long long)rayDataType;
-(void)setRayDataType:(unsigned long long)arg1 ;
-(unsigned long long)intersectionDataType;
-(void)setIntersectionDataType:(unsigned long long)arg1 ;
-(unsigned long long)triangleIntersectionTestType;
-(void)setTriangleIntersectionTestType:(unsigned long long)arg1 ;
-(unsigned long long)boundingBoxIntersectionTestType;
-(void)setBoundingBoxIntersectionTestType:(unsigned long long)arg1 ;
-(unsigned long long)proRenderOptions;
-(void)setProRenderOptions:(unsigned long long)arg1 ;
-(id)shapeIndexBuffer;
-(void)setShapeIndexBuffer:(id)arg1 ;
-(unsigned long long)shapeIndexBufferOffset;
-(void)setShapeIndexBufferOffset:(unsigned long long)arg1 ;
-(id)shapeDataBuffer;
-(void)setShapeDataBuffer:(id)arg1 ;
-(unsigned long long)shapeDataBufferOffset;
-(void)setShapeDataBufferOffset:(unsigned long long)arg1 ;
-(id)rayIndexBuffer;
-(void)setRayIndexBuffer:(id)arg1 ;
-(unsigned long long)rayIndexBufferOffset;
-(void)setRayIndexBufferOffset:(unsigned long long)arg1 ;
-(id)rayMaskBuffer;
-(void)setRayMaskBuffer:(id)arg1 ;
-(unsigned long long)rayMaskBufferOffset;
-(void)setRayMaskBufferOffset:(unsigned long long)arg1 ;
-(unsigned long long)multiHitCount;
-(void)setMultiHitCount:(unsigned long long)arg1 ;
-(unsigned long long)renderLayerMask;
-(void)setRenderLayerMask:(unsigned long long)arg1 ;
-(1)clippingPlane;
-(void)setClippingPlane:;
-(unsigned long long)globalRayMask;
-(void)setGlobalRayMask:(unsigned long long)arg1 ;
-(unsigned long long)shapeDataStride;
-(void)setShapeDataStride:(unsigned long long)arg1 ;
-(unsigned long long)shapeDataMaskOffset;
-(void)setShapeDataMaskOffset:(unsigned long long)arg1 ;
-(unsigned long long)shapeDataRenderLayerOffset;
-(void)setShapeDataRenderLayerOffset:(unsigned long long)arg1 ;
-(unsigned long long)recommendedMinimumRayBatchSizeForRayCount:(unsigned long long)arg1 ;
-(void)encodeIntersectionToCommandBuffer:(id)arg1 intersectionType:(unsigned long long)arg2 rayBuffer:(id)arg3 rayBufferOffset:(unsigned long long)arg4 intersectionBuffer:(id)arg5 intersectionBufferOffset:(unsigned long long)arg6 rayCount:(unsigned long long)arg7 accelerationStructure:(id)arg8 ;
-(void)encodeIntersectionToCommandBuffer:(id)arg1 intersectionType:(unsigned long long)arg2 rayBuffer:(id)arg3 rayBufferOffset:(unsigned long long)arg4 intersectionBuffer:(id)arg5 intersectionBufferOffset:(unsigned long long)arg6 rayCountBuffer:(id)arg7 rayCountBufferOffset:(unsigned long long)arg8 accelerationStructure:(id)arg9 ;
-(unsigned long long)rayStride;
-(void)setRayStride:(unsigned long long)arg1 ;
-(unsigned long long)intersectionStride;
-(void)setIntersectionStride:(unsigned long long)arg1 ;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)description;
@end

