/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:43:18 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/AVFAudio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVFAudio/AVFAudio-Structs.h>
#import <AVFAudio/AVEndpointVADEventHandler.h>

@class AVAudioFormat, NSArray, NSString;

@interface AVAudioEndpointDetector : NSObject <AVEndpointVADEventHandler> {

	void* _impl;

}

@property (nonatomic,readonly) AudioTimeStamp currentTime; 
@property (nonatomic,readonly) AVAudioFormat * audioFormat; 
@property (nonatomic,readonly) unsigned long long maximumSamplesPerBuffer; 
@property (nonatomic,readonly) BOOL VADConfigurationIsInitialized; 
@property (nonatomic,readonly) unsigned numCategories; 
@property (nonatomic,readonly) NSArray * categoryDimensions; 
@property (nonatomic,readonly) NSArray * timingDimensions; 
@property (nonatomic,readonly) NSArray * interleavedCategoryAndTimingDimensions; 
@property (nonatomic,readonly) unsigned fullCategoryDimension; 
@property (nonatomic,readonly) unsigned fullTimingDimension; 
@property (nonatomic,readonly) unsigned fullInterleavedDimension; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)populateFloat32StdVector:(vector<float, std::__1::allocator<float> >*)arg1 withFloatValuesFromNSArray:(id)arg2 ;
-(const VAD3ConfigurationRef)VAD3ConfigurationFromHost;
-(id)createNSMutableArrayFromStdVectorOfUInt32:(const vector<unsigned int, std::__1::allocator<unsigned int> >*)arg1 ;
-(void)populateUInt32StdVector:(vector<unsigned int, std::__1::allocator<unsigned int> >*)arg1 withUnsignedIntValuesFromNSArray:(id)arg2 ;
-(int)processAudioFileNamed:(id)arg1 andSaveInOutputObsFeatFilename:(id)arg2 andSaveInOutputULDATFeatFilename:(id)arg3 andSaveInOutputULDATAudioFilename:(id)arg4 andSaveInOutputASAFeatFilename:(id)arg5 andSaveInOutputASAAudioFilename:(id)arg6 accordingToEPFilenamePrefix:(id)arg7 accordingToRawStateFilenamePrefix:(id)arg8 accordingToPostDistFilenamePrefix:(id)arg9 ;
-(void)resetTimerToZero;
-(int)resetAudioUnit;
-(void)registerAUForOSXDevelopment;
-(int)convertToAVVADStateValueThisEDLDecision:(int)arg1 ;
-(void)printToConsoleEventType:(int)arg1 AVVADStateValue:(int)arg2 eventTimeStampSeconds:(double)arg3 categoryName:(id)arg4 callToAUTime:(double)arg5 ;
-(OpaqueExtAudioFileRef)openAudioFile:(id)arg1 ;
-(unsigned long long)maximumSamplesPerBuffer;
-(void)printAndLogMessage:(id)arg1 ;
-(long long)numberFramesInAudioFile:(const OpaqueExtAudioFileRef)arg1 ;
-(void)saveToEndpointerEventLogThis:(int)arg1 ofCategoryNum:(unsigned)arg2 withTimeStamp:(double)arg3 withCallToAUTime:(double)arg4 ;
-(void)saveToRecurrentEventLogThis:(int)arg1 ofCategoryNum:(unsigned)arg2 withTimeStamp:(double)arg3 withCallToAUTime:(double)arg4 ;
-(void)saveToRawStatesLogThis:(const unsigned*)arg1 ofCategoryNum:(unsigned)arg2 withTimeStamp:(double)arg3 ;
-(void)saveToPosteriorDistributionsLogThisMarginalPosterior:(id)arg1 ofCategoryNum:(unsigned)arg2 withTimeStamp:(double)arg3 ;
-(BOOL)VADConfigurationIsInitialized;
-(unsigned)numCategories;
-(unsigned)numCategoryValuesFromCategoryNum:(unsigned)arg1 ;
-(id)categoryValueNameForCategoryNum:(unsigned)arg1 categoryValue:(unsigned)arg2 ;
-(unsigned)timingModelOrderForCategoryNum:(unsigned)arg1 ;
-(NSArray *)categoryDimensions;
-(NSArray *)timingDimensions;
-(NSArray *)interleavedCategoryAndTimingDimensions;
-(unsigned)fullCategoryDimension;
-(unsigned)fullTimingDimension;
-(unsigned)fullInterleavedDimension;
-(unsigned)encodeStateAndTimingValuesInterleaved:(id)arg1 ;
-(id)decodeStateAndTimingInterleaved:(id)arg1 fullCode:(unsigned)arg2 ;
-(unsigned)encodeStateAndTimingDeinterleaved:(id)arg1 timingValues:(id)arg2 ;
-(void)decodeStateAndTimingDeinterleaved:(id*)arg1 timingValues:(id*)arg2 fullCode:(unsigned)arg3 ;
-(unsigned)encodeState:(id)arg1 ;
-(id)decodeState:(unsigned)arg1 ;
-(unsigned)encodeTiming:(id)arg1 ;
-(id)decodeTiming:(unsigned)arg1 ;
-(unsigned)encodeFullWithStateCode:(unsigned)arg1 timingCode:(unsigned)arg2 ;
-(void)decodeFullWithStateCode:(unsigned*)arg1 timingCode:(unsigned*)arg2 fullCode:(unsigned)arg3 ;
-(id)createNSMutableArrayFromStdVectorOfFloat64:(const vector<double, std::__1::allocator<double> >*)arg1 ;
-(void)populateFloat64StdVector:(vector<double, std::__1::allocator<double> >*)arg1 withDoubleValuesFromNSArray:(id)arg2 ;
-(id)createNSMutableArrayFromStdVectorOfFloat32:(const vector<float, std::__1::allocator<float> >*)arg1 ;
-(id)categoryNameWhichCorrespondToCategoryNum:(unsigned)arg1 ;
-(int)decodeOffline;
-(void)handleVADEventOfType:(int)arg1 andOfCategoryNum:(unsigned)arg2 havingTimeStamp:(double)arg3 andHavingValue:(const void*)arg4 ;
-(int)tearDownAudioUnit;
-(int)setupAudioUnitWithAPListFilename:(id)arg1 anAudioBufferSizeMilliseconds:(double)arg2 aRealtimeOperationMode:(BOOL)arg3 aDecoderLatencyInSecs:(float)arg4 anEndpointerInterspeechWaitTimeSec:(float)arg5 aSmoothingWindowMinSpeechSec:(float)arg6 aSmoothingWindowMinNonspeechSec:(float)arg7 ;
-(int)processAudioBufferList:(AudioBufferList*)arg1 ofMaximumCapacity:(unsigned)arg2 containingPayloadOf:(unsigned)arg3 ;
-(AVAudioFormat *)audioFormat;
-(id)init;
-(void)dealloc;
-(AudioTimeStamp)currentTime;
-(EndpointVAD3Host*)host;
@end

