/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:43:01 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/CoreImage.framework/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol RedEyeInspector;
#import <CoreImage/CoreImage-Structs.h>
@class NSArray, NSMutableArray;

@interface CIRedEyeRepair2 : NSObject {

	id<RedEyeInspector> inspector;
	SCD_Struct_CI0 fullBitmap;
	SCD_Struct_CI1 subRectangle;
	float xf;
	float yf;
	float xfi;
	float yfi;
	float ify;
	int cameraType;
	int orientation;
	int computeType;
	BOOL forceFail;
	BOOL debugSyntheticPupils;
	BOOL showSpecularShine;
	int syntheticPupilChannel;
	int syntheticRepairTag;
	float syntheticPupilShade;
	float syntheticPupilSoftness;
	float syntheticPupilReach;
	float syntheticPupilSampling;
	float syntheticSpecularShineSoftness;
	float syntheticSpecularShineAlpha;
	float sharpeningEdgeExtractRadius;
	float sharpeningEdgeExtractThreshold;
	BOOL syntheticEyelidOcclusion;
	BOOL syntheticIrisInfill;
	CGRect inputImageExtent;
	BOOL printPupilSummary;
	BOOL printIODEtc;
	BOOL printRepairsSaved;
	BOOL printRepairsApplied;
	BOOL printFaceStatistics;
	BOOL printProminenceContainment;
	BOOL printProminenceAlternatives;
	BOOL printEyeOpenness;
	BOOL printConfidenceLog;
	int printImproveBitmaskLevel;
	BOOL printImproveBitmaskConsistencyCheck;
	int printIrisRingLevel;
	BOOL printNeededOcclusions;
	int printFaceArrayLevel;
	CGRect ROIRect;
	int faceIndex;
	float avgLuminance;
	float minLuminance;
	float maxLuminance;
	float skinval;
	NSArray* faceArray;
	SCD_Struct_CI5 FC;
	int ioffx;
	int ioffy;
	SCD_Struct_CI0 faceBitmap;
	NSMutableArray* syntheticRepairs;
	SCD_Struct_CI6 DCS;
	int erError;
	SCD_Struct_CI1 repairRect;
	SCD_Struct_CI0 repairMap;
	NSMutableArray* failureCauses;

}
+(SCD_Struct_CI7)faceContextWithFaceArray:(id)arg1 index:(int)arg2 ;
+(CGRect)supportRectangleWithRepair:(id)arg1 imageSize:(CGSize)arg2 ;
+(CGRect)supportRectangleWithFaceArray:(id)arg1 options:(id)arg2 ;
+(CGPoint)ovalOutlinePointWithT:(float)arg1 OC:(SCD_Struct_CI9*)arg2 ;
+(double)circleRadiusAndCenter:(CGPoint*)arg1 withPoint1:(CGPoint)arg2 point2:(CGPoint)arg3 andPoint3:(CGPoint)arg4 ;
+(BOOL)LHSpoint:(CGPoint)arg1 isToLeftOfLineFromPoint:(CGPoint)arg2 toPoint:(CGPoint)arg3 ;
+(void)start12BitRandom:(int)arg1 ;
+(float)radiusOfEllipseInDirection:(CGPoint)arg1 a:(float)arg2 b:(float)arg3 angle:(float)arg4 ;
+(double)next12BitRandom;
+(double)applyFalloffFunction:(int)arg1 toAlpha:(double)arg2 discFactor:(double)arg3 ;
+(int)adjacencyScoreInBitmask:(SCD_Struct_CI10*)arg1 atColumn:(int)arg2 row:(int)arg3 radius:(int)arg4 ;
+(void)summarizeBitmap:(SCD_Struct_CI0*)arg1 withBitmask:(SCD_Struct_CI10*)arg2 radius:(int)arg3 rect:(SCD_Struct_CI1)arg4 returningInsideSummary:(SCD_Struct_CI11*)arg5 outsideBorderSummary:(SCD_Struct_CI11*)arg6 ;
+(BOOL)computeBorderPoints:(SCD_Struct_CI10*)arg1 rect:(SCD_Struct_CI1)arg2 inside:(SCD_Struct_CI12*)arg3 outside:(SCD_Struct_CI12*)arg4 ;
+(double)averageDifferenceBetweenInsideSummary:(SCD_Struct_CI11*)arg1 andOutsideBorderSummary:(SCD_Struct_CI11*)arg2 ;
+(void)printBorder:(SCD_Struct_CI12*)arg1 name:(char*)arg2 ;
+(int)countOfAdjacentValues:(SCD_Struct_CI13)arg1 in:(SCD_Struct_CI10*)arg2 ofValue:(int)arg3 atCol:(int)arg4 row:(int)arg5 radius:(int)arg6 addingTo:(int)arg7 ;
+(BOOL)verifyBorderPoints:(SCD_Struct_CI10*)arg1 rect:(SCD_Struct_CI1)arg2 inside:(SCD_Struct_CI12*)arg3 outside:(SCD_Struct_CI12*)arg4 error:(char)arg5 ;
+(void)analyzeCoarseGrowBitmaskData:(SCD_Struct_CI14*)arg1 dataSize:(int)arg2 context:(SCD_Struct_CI15*)arg3 ;
+(void)graphBitmaskGrowData:(SCD_Struct_CI14*)arg1 size:(int)arg2 index:(int)arg3 debugComments:(SCD_Struct_CI6*)arg4 ;
+(void)analyzeFineGrowBitmaskData:(SCD_Struct_CI14*)arg1 dataSize:(int)arg2 context:(SCD_Struct_CI15*)arg3 ;
+(void)drawBitmask:(SCD_Struct_CI10*)arg1 index:(int)arg2 debugComments:(SCD_Struct_CI6*)arg3 ;
+(void)insertIntoProminenceVettingHopper:(SCD_Struct_CI17*)arg1 measure:(float)arg2 max:(int)arg3 outside:(int)arg4 confidence:(float)arg5 distance:(float)arg6 area:(int)arg7 borderMax:(int)arg8 borderMin:(int)arg9 row:(int)arg10 column:(int)arg11 ;
+(id)imageWithREDEYEFORMATBitmap:(SCD_Struct_CI0*)arg1 ;
+(void)printProminenceSearchResultsWithTitle:(char*)arg1 hopperElement:(SCD_Struct_CI16*)arg2 maxData:(SCD_Struct_CI14*)arg3 toLine:(char*)arg4 maxLength:(int)arg5 ;
+(float)bitmask:(SCD_Struct_CI10*)arg1 debugComments:(SCD_Struct_CI6*)arg2 toOval:(SCD_Struct_CI9*)arg3 ;
+(SCD_Struct_CI1)ovalBoundsWithOC:(SCD_Struct_CI9*)arg1 ;
+(float)intersectRayOrigin:(CGPoint)arg1 unitVector:(CGPoint)arg2 withEllipseOrigin:(CGPoint)arg3 a:(float)arg4 b:(float)arg5 angle:(float)arg6 ;
+(id)pathWithDirectory:(id)arg1 file:(id)arg2 ;
+(void)drawBitmask:(SCD_Struct_CI10*)arg1 withOval:(SCD_Struct_CI9*)arg2 index:(int)arg3 comparison:(BOOL)arg4 salientMode:(int)arg5 debugComments:(SCD_Struct_CI6*)arg6 ;
+(void)initAdjustmentData:(SCD_Struct_CI18*)arg1 ;
+(void)processAdjustmentData:(SCD_Struct_CI18*)arg1 intoRadiusChange:(float*)arg2 andShift:(float*)arg3 whichRadius:(int)arg4 radiusValue:(float)arg5 debugComments:(SCD_Struct_CI6*)arg6 ;
+(void)createDirectoryAtPath:(id)arg1 ;
+(id)directoryContents:(id)arg1 ;
+(void)deleteAtPath:(id)arg1 ;
+(void)renameFile:(id)arg1 toFile:(id)arg2 inDirectory:(id)arg3 ;
+(BOOL)directoryExistsAtPath:(id)arg1 ;
+(BOOL)fileExistsAtPath:(id)arg1 ;
-(id)stringOption:(id)arg1 in:(id)arg2 theDefault:(id)arg3 ;
-(int)intOption:(id)arg1 in:(id)arg2 theDefault:(int)arg3 ;
-(BOOL)boolOption:(id)arg1 in:(id)arg2 theDefault:(BOOL)arg3 ;
-(float)floatOption:(id)arg1 in:(id)arg2 theDefault:(float)arg3 ;
-(CGRect)extentOption:(id)arg1 in:(id)arg2 theDefault:(CGRect)arg3 ;
-(void)setUpWithOptions:(id)arg1 ;
-(SCD_Struct_CI1)bitmapRectWithImageSubRectangle:(CGRect)arg1 ;
-(void)printFaceArray;
-(void)updateWithFaceIndex:(int)arg1 ;
-(void)characterizePupilAndSpecularShine;
-(void)alignPupils;
-(void)doRepairExtraction;
-(CGAffineTransform)inverseImageTransformForOrientation:(int)arg1 ;
-(void)transformRepairArray:(CGAffineTransform)arg1 ;
-(CGPoint)globalBitmapPointWithDictionaryPoint:(CGPoint)arg1 ;
-(SCD_Struct_CI1)globalBitmapRectWithDictionaryRectArray:(id)arg1 ;
-(SCD_Struct_CI10*)bitmaskWithDictionary:(id)arg1 ;
-(SCD_Struct_CI20*)unpackGlobalRepairDictionary:(id)arg1 ;
-(CGPoint)dictionaryPointWithGlobalBitmapPoint:(CGPoint)arg1 ;
-(id)dictionaryRectArrayWithGlobalBitmapRect:(SCD_Struct_CI1)arg1 ;
-(id)dictionaryWithBitmask:(SCD_Struct_CI10*)arg1 print:(BOOL)arg2 ;
-(id)packGlobalRepairDictionary:(SCD_Struct_CI20*)arg1 print:(BOOL)arg2 ;
-(id)packRepairDictionary:(SCD_Struct_CI20*)arg1 print:(BOOL)arg2 ;
-(CGPoint)leftHandedTransform:(CGAffineTransform)arg1 ofPoint:(CGPoint)arg2 ;
-(SCD_Struct_CI20*)transformGlobalRepairRecord:(SCD_Struct_CI20*)arg1 transform:(CGAffineTransform)arg2 ;
-(id)mutableCopyOfArray:(id)arg1 ;
-(SCD_Struct_CI20*)unpackRepairDictionary:(id)arg1 ;
-(int)validateRepair:(id)arg1 ;
-(BOOL)computeSyntheticPupilBitmapWithRepair:(id)arg1 returningBitmap:(SCD_Struct_CI0*)arg2 atImageLocation:(SCD_Struct_CI1*)arg3 ;
-(BOOL)computeFilteredOvalBitmapWithRepair:(id)arg1 returningBitmap:(SCD_Struct_CI0*)arg2 atImageLocation:(SCD_Struct_CI1*)arg3 ;
-(BOOL)computeFilteredArbitraryBitmapWithRepair:(id)arg1 returningBitmap:(SCD_Struct_CI0*)arg2 atImageLocation:(SCD_Struct_CI1*)arg3 ;
-(void)setInspector:(id)arg1 ;
-(void)repairExternalBuffer;
-(SCD_Struct_CI0*)repairMap;
-(SCD_Struct_CI1)repairRect;
-(CGPoint)bitmapPointWithDictionaryPoint:(CGPoint)arg1 ;
-(CGPoint)dictionaryPointWithBitmapPoint:(CGPoint)arg1 ;
-(SCD_Struct_CI1)bitmapRectWithDictionaryRectArray:(id)arg1 ;
-(id)dictionaryRectArrayWithBitmapRect:(SCD_Struct_CI1)arg1 ;
-(id)initWithExternalBuffer:(char*)arg1 subRectangle:(CGRect)arg2 rowBytes:(unsigned long long)arg3 options:(id)arg4 ;
-(void)autoRepairWithFaceArray:(id)arg1 ;
-(id)repairWithSide:(int)arg1 ;
-(id)packRepairDictionary:(SCD_Struct_CI20*)arg1 ;
-(id)repairArray;
-(void)printExecuteRepairError:(int)arg1 ;
-(void)executeRepair:(id)arg1 ;
-(id)failureCauses;
-(char*)falloffFunctionName:(int)arg1 ;
-(void)printRepair:(SCD_Struct_CI20*)arg1 ;
-(SCD_Struct_CI10*)localComputeBitmaskWithChannel:(SCD_Struct_CI0*)arg1 x:(int)arg2 y:(int)arg3 options:(SCD_Struct_CI21*)arg4 eyeCase:(int)arg5 returningMaxData:(SCD_Struct_CI14*)arg6 isSpecularData:(BOOL*)arg7 maxSpecularData:(SCD_Struct_CI14*)arg8 specularBitmask:(/*function pointer*/void**)arg9 ;
-(SCD_Struct_CI22)improveBitmask:(SCD_Struct_CI10*)arg1 radius:(int)arg2 inChannel:(SCD_Struct_CI0*)arg3 rect:(SCD_Struct_CI1)arg4 ;
-(float)facePoseYawAngle;
-(BOOL)findProminenceWithSide:(int)arg1 record:(SCD_Struct_CI24*)arg2 ;
-(SCD_Struct_CI19)averageColorUnderBitmask:(SCD_Struct_CI10*)arg1 rect:(SCD_Struct_CI1)arg2 eye:(int)arg3 HSV:(SCD_Struct_CI19*)arg4 minSE:(int*)arg5 avgSE:(int*)arg6 maxSE:(int*)arg7 satSE:(int*)arg8 satSEFraction:(float*)arg9 satSERect:(SCD_Struct_CI1*)arg10 ;
-(BOOL)gatherFaceStatistics;
-(void)allocateAndPopulateBitmaps;
-(float)eyeOpennessWithEyeIndex:(int)arg1 ;
-(void)initChoiceRecord:(SCD_Struct_CI24*)arg1 type:(int)arg2 title:(char*)arg3 plusWhiteTitle:(char*)arg4 name:(char*)arg5 canPlusWhite:(BOOL)arg6 canSpecular:(BOOL)arg7 metrics:(SCD_Struct_CI23)arg8 ;
-(SCD_Struct_CI10*)bitmaskWithSharpeningEdgeInRect:(SCD_Struct_CI1)arg1 ;
-(void)acquireProminences:(SCD_Struct_CI25*)arg1 onSide:(int)arg2 metrics:(SCD_Struct_CI23)arg3 ;
-(SCD_Struct_CI24*)winningProminence:(SCD_Struct_CI25*)arg1 metrics:(SCD_Struct_CI23)arg2 ;
-(SCD_Struct_CI20*)repairWithProminence:(SCD_Struct_CI24*)arg1 white:(SCD_Struct_CI24*)arg2 onSide:(int)arg3 metrics:(SCD_Struct_CI23)arg4 rect:(SCD_Struct_CI1)arg5 ;
-(void)freeChoiceRecord:(SCD_Struct_CI24*)arg1 ;
-(void)freeBitmaps;
-(float)pupilFractionWithEyeIndex:(int)arg1 andPupilCenter:(CGPoint)arg2 ;
-(float)pupilAspectWithEyeIndex:(int)arg1 andPupilCenter:(CGPoint)arg2 ;
-(BOOL)is2MImageWithBase:(char*)arg1 ;
-(BOOL)needsEyelidOcclusionWithBase:(char*)arg1 side:(int)arg2 upper:(int)arg3 ;
-(BOOL)hasBeautyMarkWithBase:(char*)arg1 side:(int)arg2 ;
-(void)extractIrisColors:(SCD_Struct_CI20*)arg1 ;
-(BOOL)analyzeIrisColors:(SCD_Struct_CI20*)arg1 side:(int)arg2 ;
-(void)dealloc;
@end

