/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:52:23 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/Network.framework/Network
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Network/Network-Structs.h>
#import <libobjc.A.dylib/NWPrettyDescription.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol OS_nw_parameters;
@class NSObject, NSSet, NSUUID, NSString, NSURL, NSDictionary, NWAddressEndpoint, NWInterface, NSData, NSArray;

@interface NWParameters : NSObject <NWPrettyDescription, NSSecureCoding, NSCopying> {

	BOOL _enableSFO;
	NSObject*<OS_nw_parameters> _internalParameters;
	NSSet* _SSLCipherSuitesInternal;
	unsigned long long _minimumSSLProtocolVersionInternal;
	unsigned long long _maximumSSLProtocolVersionInternal;

}

@property (retain) NSObject*<OS_nw_parameters> internalParameters;                                       //@synthesize internalParameters=_internalParameters - In the implementation block
@property (assign,nonatomic) BOOL indefinite; 
@property (assign,nonatomic) BOOL noProxy; 
@property (getter=isValid,nonatomic,readonly) BOOL valid; 
@property (getter=isDryRun,nonatomic,readonly) BOOL dryRun; 
@property (nonatomic,readonly) BOOL prohibitCellular; 
@property (assign,nonatomic) BOOL prohibitFallback; 
@property (assign,getter=isDiscretionary,nonatomic) BOOL discretionary; 
@property (assign,nonatomic) BOOL allowSocketAccess; 
@property (nonatomic,retain) NSUUID * parentID; 
@property (setter=SLCipherSuitesInternal,nonatomic,retain) NSSet * SSLCipherSuitesInternal;              //@synthesize SSLCipherSuitesInternal=_SSLCipherSuitesInternal - In the implementation block
@property (assign,nonatomic) unsigned long long minimumSSLProtocolVersionInternal;                       //@synthesize minimumSSLProtocolVersionInternal=_minimumSSLProtocolVersionInternal - In the implementation block
@property (assign,nonatomic) unsigned long long maximumSSLProtocolVersionInternal;                       //@synthesize maximumSSLProtocolVersionInternal=_maximumSSLProtocolVersionInternal - In the implementation block
@property (assign,nonatomic) BOOL keepAlive; 
@property (assign,nonatomic) unsigned long long keepAliveIdleTime; 
@property (assign,nonatomic) unsigned long long keepAliveInterval; 
@property (assign,nonatomic) BOOL keepAliveOffload; 
@property (assign,nonatomic) BOOL httpsProxyIsOpaque; 
@property (assign,nonatomic) BOOL httpsProxyOverTLS; 
@property (assign,nonatomic) BOOL trustInvalidCertificates; 
@property (nonatomic,copy,readonly) NSString * privateDescription; 
@property (nonatomic,readonly) unsigned char ipProtocol; 
@property (assign,nonatomic) int pid; 
@property (assign,nonatomic) unsigned uid; 
@property (nonatomic,copy) NSUUID * processUUID; 
@property (nonatomic,copy) NSUUID * effectiveProcessUUID; 
@property (nonatomic,copy) NSString * effectiveBundleID; 
@property (assign,nonatomic) BOOL useLongOutstandingQueries; 
@property (assign,nonatomic) BOOL useAWDL; 
@property (assign,nonatomic) BOOL useP2P; 
@property (assign,nonatomic) BOOL resolvePTR; 
@property (assign,nonatomic) BOOL multipath; 
@property (assign,nonatomic) int multipathService; 
@property (assign,nonatomic) unsigned char requiredAddressFamily; 
@property (nonatomic,copy) NSURL * url; 
@property (nonatomic,readonly) NSURL * sanitizedURL; 
@property (nonatomic,copy) NSDictionary * proxyConfiguration; 
@property (nonatomic,retain) NWAddressEndpoint * localAddress; 
@property (assign,nonatomic) BOOL reuseLocalAddress; 
@property (nonatomic,retain) NWInterface * requiredInterface; 
@property (assign,nonatomic) long long requiredInterfaceType; 
@property (assign,nonatomic) long long requiredInterfaceSubtype; 
@property (assign,nonatomic) BOOL enableTFO; 
@property (assign,nonatomic) BOOL enableTFONoCookie; 
@property (assign,nonatomic) BOOL useTFOHeuristics; 
@property (assign,nonatomic) BOOL enableSFO;                                                             //@synthesize enableSFO=_enableSFO - In the implementation block
@property (assign,nonatomic) NSData * metadata; 
@property (assign,nonatomic) BOOL prohibitRoaming; 
@property (nonatomic,copy) NSArray * protocolTransforms; 
@property (assign,nonatomic) BOOL allowUnusableAddresses; 
@property (assign,nonatomic) BOOL preferNoProxy; 
@property (nonatomic,copy) NSString * account; 
@property (assign,nonatomic) unsigned long long dataMode; 
@property (assign,nonatomic) unsigned long long trafficClass; 
@property (assign,nonatomic) BOOL prohibitExpensivePaths; 
@property (assign,nonatomic) BOOL reduceBuffering; 
@property (assign,nonatomic) BOOL disableNagleAlgorithm; 
@property (assign,nonatomic) BOOL enableTLS; 
@property (nonatomic,copy) NSData * TLSSessionID; 
@property (nonatomic,copy) NSSet * SSLCipherSuites; 
@property (assign,nonatomic) unsigned long long minimumSSLProtocolVersion; 
@property (assign,nonatomic) unsigned long long maximumSSLProtocolVersion; 
+(id)parametersWithCParameters:(id)arg1 ;
+(id)parametersWithProtocolBufferData:(id)arg1 ;
+(BOOL)supportsSecureCoding;
-(void)setTrafficClass:(unsigned long long)arg1 ;
-(unsigned long long)trafficClass;
-(unsigned char)ipProtocol;
-(void)setPid:(int)arg1 ;
-(void)setUid:(unsigned)arg1 ;
-(void)setMetadata:(NSData *)arg1 ;
-(void)setDiscretionary:(BOOL)arg1 ;
-(BOOL)isDiscretionary;
-(BOOL)keepAlive;
-(id)initWithParameters:(id)arg1 ;
-(NSURL *)sanitizedURL;
-(NSString *)effectiveBundleID;
-(void)setEffectiveBundleID:(NSString *)arg1 ;
-(NSUUID *)parentID;
-(void)setParentID:(NSUUID *)arg1 ;
-(void)setLocalAddress:(NWAddressEndpoint *)arg1 ;
-(NSString *)account;
-(int)pid;
-(void)setAccount:(NSString *)arg1 ;
-(NSString *)privateDescription;
-(NWAddressEndpoint *)localAddress;
-(unsigned long long)dataMode;
-(void)setDataMode:(unsigned long long)arg1 ;
-(void)setKeepAlive:(BOOL)arg1 ;
-(void)setRequiredInterfaceType:(long long)arg1 ;
-(void)prohibitNetworkAgentsWithDomain:(id)arg1 type:(id)arg2 ;
-(id)descriptionWithIndent:(int)arg1 showFullContent:(BOOL)arg2 ;
-(id)createProtocolBufferObject;
-(long long)requiredInterfaceType;
-(void)setReduceBuffering:(BOOL)arg1 ;
-(void)setUseAWDL:(BOOL)arg1 ;
-(void)setUseP2P:(BOOL)arg1 ;
-(void)setReuseLocalAddress:(BOOL)arg1 ;
-(void)setMultipathService:(int)arg1 ;
-(NSUUID *)effectiveProcessUUID;
-(void)setEffectiveProcessUUID:(NSUUID *)arg1 ;
-(BOOL)reduceBuffering;
-(BOOL)useAWDL;
-(BOOL)useP2P;
-(BOOL)reuseLocalAddress;
-(int)multipathService;
-(NWInterface *)requiredInterface;
-(void)setRequiredInterface:(NWInterface *)arg1 ;
-(id)copyCParameters;
-(BOOL)trustInvalidCertificates;
-(void)setTrustInvalidCertificates:(BOOL)arg1 ;
-(void)setAllowSocketAccess:(BOOL)arg1 ;
-(BOOL)allowSocketAccess;
-(BOOL)hasDelegatedPIDForOriginatingPID:(int)arg1 ;
-(NSUUID *)processUUID;
-(void)setProcessUUID:(NSUUID *)arg1 ;
-(BOOL)hasDelegatedProcessUUID;
-(BOOL)copyEffectiveAuditToken:(SCD_Struct_NW21*)arg1 ;
-(unsigned char)requiredAddressFamily;
-(void)setRequiredAddressFamily:(unsigned char)arg1 ;
-(NSDictionary *)proxyConfiguration;
-(void)setProxyConfiguration:(NSDictionary *)arg1 ;
-(BOOL)prohibitExpensivePaths;
-(void)setProhibitExpensivePaths:(BOOL)arg1 ;
-(BOOL)prohibitRoaming;
-(void)setProhibitRoaming:(BOOL)arg1 ;
-(BOOL)prohibitCellular;
-(void)prohibitInterfaceType:(long long)arg1 ;
-(void)prohibitInterfaceSubtype:(long long)arg1 ;
-(void)prohibitInterface:(id)arg1 ;
-(void)prohibitNetworkAgentWithUUID:(id)arg1 ;
-(long long)requiredInterfaceSubtype;
-(void)setRequiredInterfaceSubtype:(long long)arg1 ;
-(void)requireNetworkAgentWithUUID:(id)arg1 ;
-(void)requireNetworkAgentWithDomain:(id)arg1 type:(id)arg2 ;
-(void)preferNetworkAgentWithUUID:(id)arg1 ;
-(void)preferNetworkAgentWithDomain:(id)arg1 type:(id)arg2 ;
-(void)avoidNetworkAgentWithUUID:(id)arg1 ;
-(void)avoidNetworkAgentWithDomain:(id)arg1 type:(id)arg2 ;
-(BOOL)enableTFO;
-(void)setEnableTFO:(BOOL)arg1 ;
-(BOOL)enableTFONoCookie;
-(void)setEnableTFONoCookie:(BOOL)arg1 ;
-(BOOL)useTFOHeuristics;
-(void)setUseTFOHeuristics:(BOOL)arg1 ;
-(BOOL)disableNagleAlgorithm;
-(void)setDisableNagleAlgorithm:(BOOL)arg1 ;
-(BOOL)useLongOutstandingQueries;
-(void)setUseLongOutstandingQueries:(BOOL)arg1 ;
-(BOOL)resolvePTR;
-(void)setResolvePTR:(BOOL)arg1 ;
-(BOOL)multipath;
-(void)setMultipath:(BOOL)arg1 ;
-(BOOL)indefinite;
-(void)setIndefinite:(BOOL)arg1 ;
-(BOOL)noProxy;
-(void)setNoProxy:(BOOL)arg1 ;
-(BOOL)enableTLS;
-(void)setEnableTLS:(BOOL)arg1 ;
-(NSData *)TLSSessionID;
-(void)setTLSSessionID:(NSData *)arg1 ;
-(NSSet *)SSLCipherSuites;
-(void)setSSLCipherSuites:(NSSet *)arg1 ;
-(unsigned long long)keepAliveIdleTime;
-(void)setKeepAliveIdleTime:(unsigned long long)arg1 ;
-(unsigned long long)keepAliveInterval;
-(void)setKeepAliveInterval:(unsigned long long)arg1 ;
-(BOOL)keepAliveOffload;
-(void)setKeepAliveOffload:(BOOL)arg1 ;
-(unsigned short)tlsVersionWithSSLProtocol:(int)arg1 ;
-(int)sslProtocolWithTLSVersion:(unsigned short)arg1 ;
-(void)setMinimumSSLProtocolVersion:(unsigned long long)arg1 ;
-(unsigned long long)minimumSSLProtocolVersion;
-(void)setMaximumSSLProtocolVersion:(unsigned long long)arg1 ;
-(unsigned long long)maximumSSLProtocolVersion;
-(void)setSourceApplicationWithToken:(SCD_Struct_NW21)arg1 ;
-(void)setSourceApplicationWithBundleID:(id)arg1 ;
-(void)setInitialDataPayload:(id)arg1 ;
-(void)setProtocolTransforms:(NSArray *)arg1 ;
-(NSArray *)protocolTransforms;
-(BOOL)prohibitFallback;
-(void)setProhibitFallback:(BOOL)arg1 ;
-(BOOL)hasRequiredNetworkAgents;
-(BOOL)hasPreferredNetworkAgents;
-(BOOL)hasProhibitedNetworkAgents;
-(BOOL)hasNonEmptyProxyConfiguration;
-(BOOL)isDryRun;
-(id)copyRequiredAgentsDescription;
-(void)setProtocolAtLevel:(unsigned long long)arg1 protocol:(nw_protocol_identifier*)arg2 ;
-(void)setAllowUnusableAddresses:(BOOL)arg1 ;
-(BOOL)allowUnusableAddresses;
-(void)setPreferNoProxy:(BOOL)arg1 ;
-(BOOL)preferNoProxy;
-(void)setHttpsProxyIsOpaque:(BOOL)arg1 ;
-(BOOL)httpsProxyIsOpaque;
-(void)setHttpsProxyOverTLS:(BOOL)arg1 ;
-(BOOL)httpsProxyOverTLS;
-(NSObject*<OS_nw_parameters>)internalParameters;
-(void)setInternalParameters:(NSObject*<OS_nw_parameters>)arg1 ;
-(NSSet *)SSLCipherSuitesInternal;
-(void)setSSLCipherSuitesInternal:(NSSet *)arg1 ;
-(unsigned long long)minimumSSLProtocolVersionInternal;
-(void)setMinimumSSLProtocolVersionInternal:(unsigned long long)arg1 ;
-(unsigned long long)maximumSSLProtocolVersionInternal;
-(void)setMaximumSSLProtocolVersionInternal:(unsigned long long)arg1 ;
-(BOOL)enableSFO;
-(void)setEnableSFO:(BOOL)arg1 ;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSURL *)url;
-(void)setUrl:(NSURL *)arg1 ;
-(NSData *)metadata;
-(unsigned)uid;
-(BOOL)isValid;
@end

