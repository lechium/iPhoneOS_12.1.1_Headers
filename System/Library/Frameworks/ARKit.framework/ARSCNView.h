/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:48:53 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/ARKit.framework/ARKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ARKit/ARKit-Structs.h>
#import <SceneKit/SCNView.h>
#import <ARKit/ARInternalSessionObserver.h>
#import <libobjc.A.dylib/_SCNSceneRendererDelegate.h>

@protocol SCNCaptureDeviceOutputConsumer, OS_dispatch_semaphore;
@class ARSession, SCNNode, NSMutableDictionary, NSObject, NSMutableArray, ARPointCloud, UIView, CIWarpKernel, SCNScene, NSString;

@interface ARSCNView : SCNView <ARInternalSessionObserver, _SCNSceneRendererDelegate> {

	ARSession* _session;
	double _lastFrameTimestamp;
	id<SCNCaptureDeviceOutputConsumer> _captureDeviceOutputConsumer;
	SCNNode* _lightNode;
	SCNNode* _cameraNode;
	NSMutableDictionary* _nodesByAnchorIdentifier;
	NSMutableDictionary* _occlusionGeometryNodesByAnchorIdentifier;
	NSObject*<OS_dispatch_semaphore> _nodesSemaphore;
	NSMutableArray* _addedAnchors;
	NSMutableArray* _updatedAnchors;
	NSMutableArray* _removedAnchors;
	NSObject*<OS_dispatch_semaphore> _anchorsSemaphore;
	SCNNode* _worldOriginNode;
	SCNNode* _featurePointNode;
	ARPointCloud* _currentlyVisibleDebugPointerCloud;
	id _originalBackgroundContents;
	unsigned long long _arDebugOptions;
	long long _interfaceOrientation;
	long long _lastInterfaceOrientation;
	CGSize _viewportSize;
	double _contentsScale;
	UIView* _rotationSnapshot;
	CIWarpKernel* _warpKernel;
	unsigned long long _warpKernelLensType;
	NSMutableArray* _environmentProbeNodes;
	NSMutableArray* _environmentProbeNodesToRemove;
	BOOL _renderThreadFixed;
	BOOL _automaticallyUpdatesLighting;
	BOOL _providesOcclusionGeometry;
	BOOL _shouldRestrictFrameRate;
	BOOL _drawsCameraImage;
	long long _targetFramesPerSecond;
	long long _developerPreferredFramesPerSecond;
	long long _frameToRemoveRotationSnapshotOn;
	long long _rotationSnapshotState;

}

@property (assign,nonatomic) BOOL providesOcclusionGeometry;                        //@synthesize providesOcclusionGeometry=_providesOcclusionGeometry - In the implementation block
@property (assign) BOOL shouldRestrictFrameRate;                                    //@synthesize shouldRestrictFrameRate=_shouldRestrictFrameRate - In the implementation block
@property (assign) long long targetFramesPerSecond;                                 //@synthesize targetFramesPerSecond=_targetFramesPerSecond - In the implementation block
@property (assign) long long developerPreferredFramesPerSecond;                     //@synthesize developerPreferredFramesPerSecond=_developerPreferredFramesPerSecond - In the implementation block
@property (assign) BOOL drawsCameraImage;                                           //@synthesize drawsCameraImage=_drawsCameraImage - In the implementation block
@property (assign) long long frameToRemoveRotationSnapshotOn;                       //@synthesize frameToRemoveRotationSnapshotOn=_frameToRemoveRotationSnapshotOn - In the implementation block
@property (assign) long long rotationSnapshotState;                                 //@synthesize rotationSnapshotState=_rotationSnapshotState - In the implementation block
@property (assign,nonatomic) long long actualPreferredFramesPerSecond; 
@property (assign,nonatomic,__weak) id<ARSCNViewDelegate> delegate; 
@property (nonatomic,retain) ARSession * session; 
@property (nonatomic,retain) SCNScene * scene; 
@property (assign,nonatomic) BOOL automaticallyUpdatesLighting;                     //@synthesize automaticallyUpdatesLighting=_automaticallyUpdatesLighting - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(unsigned long long)debugOptions;
-(long long)preferredFramesPerSecond;
-(void)setDebugOptions:(unsigned long long)arg1 ;
-(void)_renderer:(id)arg1 updateAtTime:(double)arg2 ;
-(void)_updateBackingSize;
-(id)hitTest:(CGPoint)arg1 types:(unsigned long long)arg2 ;
-(id)_anchorForNode:(id)arg1 inFrame:(id)arg2 ;
-(void)session:(id)arg1 didChangeState:(unsigned long long)arg2 ;
-(void)sessionShouldAttemptRelocalization:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)session:(id)arg1 willRunWithConfiguration:(id)arg2 ;
-(id)anchorForNode:(id)arg1 ;
-(id)nodeForAnchor:(id)arg1 ;
-(BOOL)shouldRestrictFrameRate;
-(void)setShouldRestrictFrameRate:(BOOL)arg1 ;
-(void)_updateCamera:(id)arg1 ;
-(void)_forceUpdateCamera;
-(id)_hitTest:(CGPoint)arg1 frame:(id)arg2 types:(unsigned long long)arg3 ;
-(void)setDrawsCameraImage:(BOOL)arg1 ;
-(BOOL)drawsCameraImage;
-(void)setDeveloperPreferredFramesPerSecond:(long long)arg1 ;
-(void)_updatePreferredFramesPerSecond;
-(long long)rotationSnapshotState;
-(CVBufferRef)_warpPixelBuffer:(CVBufferRef)arg1 withCamera:(id)arg2 ;
-(void)_renderCapturedPixelBuffer:(CVBufferRef)arg1 ;
-(void)_updateProbesWithFrame:(id)arg1 ;
-(BOOL)automaticallyUpdatesLighting;
-(void)_updateLighting:(id)arg1 ;
-(long long)frameToRemoveRotationSnapshotOn;
-(void)setRotationSnapshotState:(long long)arg1 ;
-(void)setFrameToRemoveRotationSnapshotOn:(long long)arg1 ;
-(void)_removeAnchors:(id)arg1 ;
-(void)_addAnchors:(id)arg1 ;
-(void)_updateAnchors:(id)arg1 frame:(id)arg2 ;
-(void)_updateDebugVisualization:(id)arg1 ;
-(void)_updateFramesPerSecondWithTarget:(long long)arg1 shouldRestrictFrameRate:(BOOL)arg2 ;
-(BOOL)providesOcclusionGeometry;
-(void)_addOcclusionGeometryForAnchor:(id)arg1 ;
-(void)_updateNode:(id)arg1 forAnchor:(id)arg2 frame:(id)arg3 ;
-(void)setTargetFramesPerSecond:(long long)arg1 ;
-(long long)developerPreferredFramesPerSecond;
-(long long)targetFramesPerSecond;
-(void)_loadWarpKernalForLensType:(unsigned long long)arg1 ;
-(void)setAutomaticallyUpdatesLighting:(BOOL)arg1 ;
-(id)occlusionGeometryNodeForAnchor:(id)arg1 ;
-(9)unprojectPoint:(CGPoint)arg1 ontoPlaneWithTransform:(SCD_Struct_AR16)arg2 ;
-(void)setActualPreferredFramesPerSecond:(long long)arg1 ;
-(long long)actualPreferredFramesPerSecond;
-(void)setProvidesOcclusionGeometry:(BOOL)arg1 ;
-(id)initWithFrame:(CGRect)arg1 options:(id)arg2 ;
-(void)setScene:(SCNScene *)arg1 ;
-(void)setPointOfView:(id)arg1 ;
-(void)session:(id)arg1 didFailWithError:(id)arg2 ;
-(void)session:(id)arg1 cameraDidChangeTrackingState:(id)arg2 ;
-(void)sessionWasInterrupted:(id)arg1 ;
-(void)sessionInterruptionEnded:(id)arg1 ;
-(void)session:(id)arg1 didOutputAudioSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)session:(id)arg1 didUpdateFrame:(id)arg2 ;
-(void)session:(id)arg1 didAddAnchors:(id)arg2 ;
-(void)session:(id)arg1 didUpdateAnchors:(id)arg2 ;
-(void)session:(id)arg1 didRemoveAnchors:(id)arg2 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)description;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)didMoveToWindow;
-(void)_commonInit;
-(ARSession *)session;
-(void)setPreferredFramesPerSecond:(long long)arg1 ;
-(void)setSession:(ARSession *)arg1 ;
-(void)windowWillRotateNotification:(id)arg1 ;
-(void)windowWillAnimateRotateNotification:(id)arg1 ;
-(void)windowDidRotateNotification:(id)arg1 ;
-(void)cleanupLingeringRotationState;
@end

