/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:48:53 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/ARKit.framework/ARKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ARKit/ARKit-Structs.h>
#import <ARKit/ARTechnique.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore, ARRecordingTechniqueDelegate;
@class NSObject, AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, AVAssetWriterInputMetadataAdaptor, NSDictionary, NSSet, NSMutableArray, NSMutableDictionary, NSURL;

@interface ARRecordingTechnique : ARTechnique {

	NSObject*<OS_dispatch_queue> _processingQueue;
	AVAssetWriter* _assetWriter;
	AVAssetWriterInput* _videoInput;
	AVAssetWriterInput* _videoMetadataInput;
	AVAssetWriterInput* _videoMetadataInput_CV3D;
	AVAssetWriterInput* _audioInput;
	AVAssetWriterInput* _accelInput;
	AVAssetWriterInput* _gyroInput;
	AVAssetWriterInput* _accelInput_CV3D;
	AVAssetWriterInput* _gyroInput_CV3D;
	AVAssetWriterInput* _deviceOrientationInput;
	AVAssetWriterInput* _customDataInput;
	AVAssetWriterInputPixelBufferAdaptor* _videoInputAdaptor;
	AVAssetWriterInput* _depthInput;
	AVAssetWriterInputPixelBufferAdaptor* _depthInputAdaptor;
	AVAssetWriterInputMetadataAdaptor* _accelInputAdaptor;
	AVAssetWriterInputMetadataAdaptor* _gyroInputAdaptor;
	AVAssetWriterInputMetadataAdaptor* _accelInputAdaptor_CV3D;
	AVAssetWriterInputMetadataAdaptor* _gyroInputAdaptor_CV3D;
	AVAssetWriterInputMetadataAdaptor* _videoMetadataInputAdaptor;
	AVAssetWriterInputMetadataAdaptor* _videoMetadataInputAdaptor_CV3D;
	AVAssetWriterInputMetadataAdaptor* _deviceOrientationInputAdaptor;
	AVAssetWriterInputMetadataAdaptor* _customDataInputAdaptor;
	NSDictionary* _resultAdaptors;
	NSDictionary* _resultInputs;
	NSObject*<OS_dispatch_semaphore> _inputIsReadySemaphore;
	BOOL _isWaitingUntilInputIsReady;
	unsigned long long _sensorDataTypes;
	NSSet* _recordableResultClasses;
	NSMutableArray* _sensorDataCache;
	NSMutableArray* _gyroDataQueue;
	NSMutableArray* _accelDataQueue;
	double _imuTemperature;
	double _sessionSourceTime;
	NSMutableDictionary* _lastRecordedTimestamps;
	BOOL _sessionStarted;
	BOOL _stopRecordingRequested;
	BOOL _expectDepthData;
	BOOL _expectAudioData;
	BOOL _expectCustomData;
	BOOL _shouldSaveVideoInPhotosLibrary;
	NSURL* _outputFileURL;
	id<ARRecordingTechniqueDelegate> _recordingTechniqueDelegate;

}

@property (nonatomic,readonly) NSURL * outputFileURL;                                                         //@synthesize outputFileURL=_outputFileURL - In the implementation block
@property (assign,nonatomic) BOOL expectDepthData;                                                            //@synthesize expectDepthData=_expectDepthData - In the implementation block
@property (assign,nonatomic) BOOL expectAudioData;                                                            //@synthesize expectAudioData=_expectAudioData - In the implementation block
@property (assign,nonatomic) BOOL expectCustomData;                                                           //@synthesize expectCustomData=_expectCustomData - In the implementation block
@property (assign,nonatomic) BOOL shouldSaveVideoInPhotosLibrary;                                             //@synthesize shouldSaveVideoInPhotosLibrary=_shouldSaveVideoInPhotosLibrary - In the implementation block
@property (assign,nonatomic,__weak) id<ARRecordingTechniqueDelegate> recordingTechniqueDelegate;              //@synthesize recordingTechniqueDelegate=_recordingTechniqueDelegate - In the implementation block
@property (nonatomic,readonly) unsigned long long recordingSensorDataTypes; 
@property (nonatomic,readonly) NSSet * recordingResultDataClasses; 
+(id)metadataIdentifierForARRecordableResultsClass:(Class)arg1 ;
-(NSURL *)outputFileURL;
-(void)requestResultDataAtTimestamp:(double)arg1 context:(id)arg2 ;
-(unsigned long long)recordingSensorDataTypes;
-(NSSet *)recordingResultDataClasses;
-(id)initWithFileURL:(id)arg1 recordingSensorDataTypes:(unsigned long long)arg2 recordingResultDataClasses:(id)arg3 ;
-(id)initWithFileURL:(id)arg1 sensorDataTypes:(unsigned long long)arg2 ;
-(void)finishRecording;
-(void)writeImageData:(id)arg1 ;
-(void)writeOutCachedSensorDataIfPresent;
-(void)writeAccelerometerMetadata:(id)arg1 ;
-(void)writeGyroscopeMetadata:(id)arg1 ;
-(void)writeDeviceOrientationMetadata:(id)arg1 ;
-(void)writeAudioData:(id)arg1 ;
-(void)writeMetadata:(id)arg1 withTimestamp:(double)arg2 toInputAdaptor:(id)arg3 withIdentifier:(id)arg4 ;
-(void)copyVideoToPhotoLibrary;
-(void)removeTemporaryVideoFile;
-(id)createFileMetadata;
-(CGAffineTransform)computeVideoTransformForDeviceOrientationWithCameraPosition:(long long)arg1 ;
-(BOOL)expectAudioData;
-(BOOL)expectDepthData;
-(void)createAssetWriter;
-(void)setupSensorTracksWithImageData:(id)arg1 ;
-(void)setupCustomTrack;
-(void)setupResultTracks;
-(void)startAssetWriterAtTimestamp:(double)arg1 ;
-(void)initAssetWriterIfRequiredWithImageData:(id)arg1 ;
-(void)writePixelBuffer:(CVBufferRef)arg1 withTimestamp:(SCD_Struct_AR6)arg2 ;
-(id)getMetadataForBuffer:(CVBufferRef)arg1 additionalMetadata:(id)arg2 ;
-(void)writeMetadata2:(id)arg1 withTimestamp:(double)arg2 toInputAdaptor:(id)arg3 withIdentifier:(id)arg4 withMetaItems:(id)arg5 ;
-(void)writeDepthMap:(id)arg1 withTimestamp:(SCD_Struct_AR6)arg2 ;
-(void)writeImageMetadata:(id)arg1 ;
-(id)makeMetaDataDictionaryItems:(id)arg1 withIdentifier:(id)arg2 ;
-(id)getJsonFriendlyCopy:(id)arg1 ;
-(BOOL)isValidJSONObject:(id)arg1 path:(id)arg2 ;
-(void)recordCustomData:(id)arg1 forTimestamp:(double)arg2 ;
-(void)setExpectDepthData:(BOOL)arg1 ;
-(void)setExpectAudioData:(BOOL)arg1 ;
-(BOOL)expectCustomData;
-(void)setExpectCustomData:(BOOL)arg1 ;
-(BOOL)shouldSaveVideoInPhotosLibrary;
-(void)setShouldSaveVideoInPhotosLibrary:(BOOL)arg1 ;
-(id<ARRecordingTechniqueDelegate>)recordingTechniqueDelegate;
-(void)setRecordingTechniqueDelegate:(id<ARRecordingTechniqueDelegate>)arg1 ;
-(id)processData:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
@end

