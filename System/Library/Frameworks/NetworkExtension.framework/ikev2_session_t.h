/*
* This header is generated by classdump-dyld 1.0
* on Saturday, June 1, 2019 at 6:44:19 PM Mountain Standard Time
* Operating System: Version 12.1.1 (Build 16C5050a)
* Image Source: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NetworkExtension/NetworkExtension-Structs.h>
#import <libobjc.A.dylib/NEIPSecSASessionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source, OS_dispatch_semaphore;
@class NSString, NSObject, NSDictionary, NEIPSecSASession, NSMutableDictionary, NSMutableArray;

@interface ikev2_session_t : NSObject <NEIPSecSASessionDelegate> {

	BOOL _isListening;
	BOOL _ownsIPSecInterface;
	BOOL _isAborted;
	BOOL _isInvalidated;
	unsigned short _initiatorFragmentCount;
	unsigned short _responderFragmentCount;
	int _lastSentMessageID;
	int _lastReceivedMessageID;
	int _previousMOBIKEMessageID;
	int _initiatorSemaphoreWaitingMessageID;
	int _responderSemaphoreWaitingMessageID;
	NSString* _clientName;
	/*function pointer*/void* _clientCallback;
	void* _clientCallbackInfo;
	NSObject*<OS_dispatch_queue> _clientQueue;
	/*function pointer*/void* _ikeSocketHandler;
	/*function pointer*/void* _pfkeySocketHandler;
	NSDictionary* _listenChildSAUserConfig;
	NEIPSecSASession* _databaseSession;
	NSMutableDictionary* _databaseLarvalSAs;
	NSMutableDictionary* _databaseSAs;
	NEVirtualInterface_sRef _ipsecInterface;
	ikev2_packet_sRef _previousMOBIKERequest;
	NSMutableDictionary* _sentRequests;
	NSMutableDictionary* _sentReplies;
	NSMutableDictionary* _receivedRequests;
	NSMutableDictionary* _receivedReplies;
	NSMutableDictionary* _receivedInitiatorFragments;
	NSMutableDictionary* _receivedResponderFragments;
	NSObject*<OS_dispatch_source> _ikeLifetimeTimer;
	NSObject*<OS_dispatch_source> _dpdTimer;
	NSObject*<OS_dispatch_queue> _initiatorQueue;
	NSObject*<OS_dispatch_queue> _responderQueue;
	ikev2_ike_sa_sRef _ikeSA;
	NSMutableArray* _childSAs;
	NSObject*<OS_dispatch_source> _sendTimer;
	NSObject*<OS_dispatch_semaphore> _initiatorSemaphore;
	NSObject*<OS_dispatch_semaphore> _responderSemaphore;
	NEIKEPacketDelegateCallbacks* _ikePacketDelegate;

}

@property (retain) NSString * clientName;                                            //@synthesize clientName=_clientName - In the implementation block
@property (assign) /*function pointer*/void* clientCallback;                         //@synthesize clientCallback=_clientCallback - In the implementation block
@property (assign) void* clientCallbackInfo;                                         //@synthesize clientCallbackInfo=_clientCallbackInfo - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> clientQueue;                         //@synthesize clientQueue=_clientQueue - In the implementation block
@property (assign) /*function pointer*/void* ikeSocketHandler;                       //@synthesize ikeSocketHandler=_ikeSocketHandler - In the implementation block
@property (assign) NEIKEPacketDelegateCallbacks* ikePacketDelegate;                  //@synthesize ikePacketDelegate=_ikePacketDelegate - In the implementation block
@property (assign) /*function pointer*/void* pfkeySocketHandler;                     //@synthesize pfkeySocketHandler=_pfkeySocketHandler - In the implementation block
@property (assign) BOOL isListening;                                                 //@synthesize isListening=_isListening - In the implementation block
@property (retain) NSDictionary * listenChildSAUserConfig;                           //@synthesize listenChildSAUserConfig=_listenChildSAUserConfig - In the implementation block
@property (retain) NEIPSecSASession * databaseSession;                               //@synthesize databaseSession=_databaseSession - In the implementation block
@property (retain) NSMutableDictionary * databaseLarvalSAs;                          //@synthesize databaseLarvalSAs=_databaseLarvalSAs - In the implementation block
@property (retain) NSMutableDictionary * databaseSAs;                                //@synthesize databaseSAs=_databaseSAs - In the implementation block
@property (assign) NEVirtualInterface_sRef ipsecInterface;                           //@synthesize ipsecInterface=_ipsecInterface - In the implementation block
@property (assign) BOOL ownsIPSecInterface;                                          //@synthesize ownsIPSecInterface=_ownsIPSecInterface - In the implementation block
@property (assign) int lastSentMessageID;                                            //@synthesize lastSentMessageID=_lastSentMessageID - In the implementation block
@property (assign) int lastReceivedMessageID;                                        //@synthesize lastReceivedMessageID=_lastReceivedMessageID - In the implementation block
@property (assign) int previousMOBIKEMessageID;                                      //@synthesize previousMOBIKEMessageID=_previousMOBIKEMessageID - In the implementation block
@property (assign) ikev2_packet_sRef previousMOBIKERequest;                          //@synthesize previousMOBIKERequest=_previousMOBIKERequest - In the implementation block
@property (retain) NSMutableDictionary * sentRequests;                               //@synthesize sentRequests=_sentRequests - In the implementation block
@property (retain) NSMutableDictionary * sentReplies;                                //@synthesize sentReplies=_sentReplies - In the implementation block
@property (retain) NSMutableDictionary * receivedRequests;                           //@synthesize receivedRequests=_receivedRequests - In the implementation block
@property (retain) NSMutableDictionary * receivedReplies;                            //@synthesize receivedReplies=_receivedReplies - In the implementation block
@property (retain) NSMutableDictionary * receivedInitiatorFragments;                 //@synthesize receivedInitiatorFragments=_receivedInitiatorFragments - In the implementation block
@property (retain) NSMutableDictionary * receivedResponderFragments;                 //@synthesize receivedResponderFragments=_receivedResponderFragments - In the implementation block
@property (assign) unsigned short initiatorFragmentCount;                            //@synthesize initiatorFragmentCount=_initiatorFragmentCount - In the implementation block
@property (assign) unsigned short responderFragmentCount;                            //@synthesize responderFragmentCount=_responderFragmentCount - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> ikeLifetimeTimer;                   //@synthesize ikeLifetimeTimer=_ikeLifetimeTimer - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> dpdTimer;                           //@synthesize dpdTimer=_dpdTimer - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> initiatorQueue;                      //@synthesize initiatorQueue=_initiatorQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> responderQueue;                      //@synthesize responderQueue=_responderQueue - In the implementation block
@property (assign) ikev2_ike_sa_sRef ikeSA;                                          //@synthesize ikeSA=_ikeSA - In the implementation block
@property (retain) NSMutableArray * childSAs;                                        //@synthesize childSAs=_childSAs - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> sendTimer;                          //@synthesize sendTimer=_sendTimer - In the implementation block
@property (assign) int initiatorSemaphoreWaitingMessageID;                           //@synthesize initiatorSemaphoreWaitingMessageID=_initiatorSemaphoreWaitingMessageID - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> initiatorSemaphore;              //@synthesize initiatorSemaphore=_initiatorSemaphore - In the implementation block
@property (assign) int responderSemaphoreWaitingMessageID;                           //@synthesize responderSemaphoreWaitingMessageID=_responderSemaphoreWaitingMessageID - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> responderSemaphore;              //@synthesize responderSemaphore=_responderSemaphore - In the implementation block
@property (assign) BOOL isAborted;                                                   //@synthesize isAborted=_isAborted - In the implementation block
@property (assign) BOOL isInvalidated;                                               //@synthesize isInvalidated=_isInvalidated - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(ikev2_ike_sa_sRef)ikeSA;
-(void)setIkeSA:(ikev2_ike_sa_sRef)arg1 ;
-(NEVirtualInterface_sRef)ipsecInterface;
-(void)setIpsecInterface:(NEVirtualInterface_sRef)arg1 ;
-(NEIPSecSASession *)databaseSession;
-(NSObject*<OS_dispatch_source>)ikeLifetimeTimer;
-(void)setIkeLifetimeTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)dpdTimer;
-(void)setDpdTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)sendTimer;
-(void)setSendTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSMutableDictionary *)databaseSAs;
-(BOOL)isAborted;
-(void)setClientCallback:(/*function pointer*/void*)arg1 ;
-(void)setClientCallbackInfo:(void*)arg1 ;
-(void)setLastSentMessageID:(int)arg1 ;
-(void)setLastReceivedMessageID:(int)arg1 ;
-(void)setPreviousMOBIKEMessageID:(int)arg1 ;
-(void)setInitiatorSemaphoreWaitingMessageID:(int)arg1 ;
-(void)setResponderSemaphoreWaitingMessageID:(int)arg1 ;
-(void)setIkeSocketHandler:(/*function pointer*/void*)arg1 ;
-(void)setIkePacketDelegate:(NEIKEPacketDelegateCallbacks*)arg1 ;
-(int)lastSentMessageID;
-(NSMutableDictionary *)receivedReplies;
-(/*function pointer*/void*)ikeSocketHandler;
-(NEIKEPacketDelegateCallbacks*)ikePacketDelegate;
-(void*)clientCallbackInfo;
-(void)setChildSAs:(NSMutableArray *)arg1 ;
-(NSMutableArray *)childSAs;
-(void)setDatabaseLarvalSAs:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)databaseLarvalSAs;
-(void)setDatabaseSAs:(NSMutableDictionary *)arg1 ;
-(void)setSentRequests:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)sentRequests;
-(void)setSentReplies:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)sentReplies;
-(void)setReceivedRequests:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)receivedRequests;
-(void)setReceivedReplies:(NSMutableDictionary *)arg1 ;
-(void)setReceivedInitiatorFragments:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)receivedInitiatorFragments;
-(void)setReceivedResponderFragments:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)receivedResponderFragments;
-(void)setPreviousMOBIKERequest:(ikev2_packet_sRef)arg1 ;
-(void)setDatabaseSession:(NEIPSecSASession *)arg1 ;
-(void)setListenChildSAUserConfig:(NSDictionary *)arg1 ;
-(int)lastReceivedMessageID;
-(void)setOwnsIPSecInterface:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)initiatorQueue;
-(void)setInitiatorQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)responderQueue;
-(void)setResponderQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(ikev2_packet_sRef)previousMOBIKERequest;
-(int)previousMOBIKEMessageID;
-(void)setIsAborted:(BOOL)arg1 ;
-(int)initiatorSemaphoreWaitingMessageID;
-(int)responderSemaphoreWaitingMessageID;
-(BOOL)ownsIPSecInterface;
-(void)setIsInvalidated:(BOOL)arg1 ;
-(void)expireSA:(id)arg1 ;
-(void)deleteSA:(id)arg1 ;
-(void)idleTimeoutSA:(id)arg1 ;
-(void)blackholeDetectedSA:(id)arg1 ;
-(/*function pointer*/void*)clientCallback;
-(/*function pointer*/void*)pfkeySocketHandler;
-(void)setPfkeySocketHandler:(/*function pointer*/void*)arg1 ;
-(NSDictionary *)listenChildSAUserConfig;
-(unsigned short)initiatorFragmentCount;
-(void)setInitiatorFragmentCount:(unsigned short)arg1 ;
-(unsigned short)responderFragmentCount;
-(void)setResponderFragmentCount:(unsigned short)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)initiatorSemaphore;
-(void)setInitiatorSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)responderSemaphore;
-(void)setResponderSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(void)setIsListening:(BOOL)arg1 ;
-(BOOL)isListening;
-(void)setClientQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(NSString *)clientName;
-(void)setClientName:(NSString *)arg1 ;
-(void)dealloc;
-(BOOL)isInvalidated;
@end

