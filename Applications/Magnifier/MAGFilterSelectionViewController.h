//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "MAGFilterSelectionControlPanelDelegate.h"
#import "MAGFilterSelectionPreviewDelegate.h"

@class CALayer, MAGFilterSelectionControlPanel, MAGFilterSelectionPreviewView, NSArray, NSString;

__attribute__((visibility("hidden")))
@interface MAGFilterSelectionViewController : UIViewController <MAGFilterSelectionPreviewDelegate, MAGFilterSelectionControlPanelDelegate>
{
    _Bool _imageLayerRequiresOrientationCompensation;	// 8 = 0x8
    id <MAGFilterSelectionViewControllerDelegate> _delegate;	// 16 = 0x10
    CALayer *_imageLayer;	// 24 = 0x18
    MAGFilterSelectionPreviewView *_previewView;	// 32 = 0x20
    MAGFilterSelectionControlPanel *_controlPanel;	// 40 = 0x28
    NSArray *_normalLayoutConstraints;	// 48 = 0x30
    NSArray *_transitioningLayoutConstraints;	// 56 = 0x38
}

@property(retain, nonatomic) NSArray *transitioningLayoutConstraints; // @synthesize transitioningLayoutConstraints=_transitioningLayoutConstraints;
@property(retain, nonatomic) NSArray *normalLayoutConstraints; // @synthesize normalLayoutConstraints=_normalLayoutConstraints;
@property(nonatomic) _Bool imageLayerRequiresOrientationCompensation; // @synthesize imageLayerRequiresOrientationCompensation=_imageLayerRequiresOrientationCompensation;
@property(retain, nonatomic) MAGFilterSelectionControlPanel *controlPanel; // @synthesize controlPanel=_controlPanel;
@property(retain, nonatomic) MAGFilterSelectionPreviewView *previewView; // @synthesize previewView=_previewView;
@property(retain, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
@property(nonatomic) __weak id <MAGFilterSelectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;	// IMP=0x00000001000150a0
- (id)contrastSliderForUnitTesting;	// IMP=0x0000000100014f44
- (id)brightnessSliderForUnitTesting;	// IMP=0x0000000100014ef0
- (id)invertButtonForUnitTesting;	// IMP=0x0000000100014e9c
- (void)updateBrightnessAndContrastForAmbientLightChange;	// IMP=0x0000000100014d8c
- (_Bool)accessibilityPerformEscape;	// IMP=0x0000000100014d3c
- (_Bool)prefersStatusBarHidden;	// IMP=0x0000000100014d34
- (double)contrastValueFromSliderValue:(double)arg1;	// IMP=0x0000000100014d10
- (double)sliderValueFromContrastValue:(double)arg1;	// IMP=0x0000000100014ce4
- (double)brightnessValueFromSliderValue:(double)arg1;	// IMP=0x0000000100014cd8
- (double)sliderValueFromBrightnessValue:(double)arg1;	// IMP=0x0000000100014ccc
- (void)brightnessSliderDraggedToValue:(double)arg1 forControlPanel:(id)arg2;	// IMP=0x0000000100014c68
- (void)contrastSliderDraggedToValue:(double)arg1 forControlPanel:(id)arg2;	// IMP=0x0000000100014c04
- (void)filtersButtonTappedForControlPanel:(id)arg1;	// IMP=0x0000000100014b88
- (void)invertButtonTappedForControlPanel:(id)arg1;	// IMP=0x0000000100014a94
- (_Bool)imageLayerForPreviewRequiresOrientationCompensation:(id)arg1;	// IMP=0x0000000100014a88
- (void)userDidScrollToFilterSet:(id)arg1 inPreview:(id)arg2;	// IMP=0x0000000100014904
- (void)compensateForCurrentInterfaceOrientation;	// IMP=0x0000000100014840
- (void)positionSelectedFilterSetAnimated:(_Bool)arg1;	// IMP=0x00000001000147a0
- (void)dialChangedToFilterSet:(id)arg1 forControlPanel:(id)arg2;	// IMP=0x00000001000146ac
- (void)resumeFromTransitionWithRootVCAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000142b4
- (void)prepForTransitionWithRootVCWithControlPanelFrame:(struct CGRect)arg1 filtersButtonFrameInControlPanel:(struct CGRect)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000100013c18
- (void)loadView;	// IMP=0x00000001000134cc
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;	// IMP=0x0000000100013284
- (void)connectImageLayer;	// IMP=0x0000000100013204
- (id)initWithImageLayer:(id)arg1 imageLayerRequiresOrientationCompensation:(_Bool)arg2;	// IMP=0x0000000100013170

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

