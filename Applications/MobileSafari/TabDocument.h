//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AppBannerMetaTagContentObserver.h"
#import "BCSActionDelegate.h"
#import "LoadingControllerDelegate.h"
#import "MergeableItem.h"
#import "QuickWebsiteSearchEventListener.h"
#import "ReadingListMetadataProvider.h"
#import "SFFormAutoFillControllerDelegate.h"
#import "StoreBannerDelegate.h"
#import "WBSFluidProgressControllerWindowDelegate.h"
#import "WBSFluidProgressStateSource.h"
#import "WBSTabItemSearchSupport.h"
#import "WKNavigationDelegatePrivate.h"
#import "WKUIDelegatePrivate.h"
#import "_SFAppleConnectExtensionUIDelegate.h"
#import "_SFAutomaticBugCaptureObserver.h"
#import "_SFDialogControllerDelegate.h"
#import "_SFDialogPresenting.h"
#import "_SFDialogViewControllerPresenting.h"
#import "_SFDownloadDelegate.h"
#import "_SFFindOnPageViewDelegate.h"
#import "_SFPageLoadErrorControllerDelegate.h"
#import "_SFPrintControllerDelegate.h"
#import "_SFQuickLookDocumentSource.h"
#import "_SFReaderControllerDelegate.h"
#import "_SFSafeBrowsingControllerDelegate.h"
#import "_SFWebViewDelegate.h"
#import "_WKDiagnosticLoggingDelegate.h"
#import "_WKFullscreenDelegate.h"
#import "_WKIconLoadingDelegate.h"
#import "_WKInputDelegate.h"

@class BrowserController, CSSearchableItemAttributeSet, FALockOutViewController, FindOnPageCompletionProvider, FindOnPageView, LinkPreviewViewController, LoadingController, NSArray, NSDictionary, NSError, NSMutableArray, NSNumber, NSPointerArray, NSString, NSTimer, NSURL, NSUUID, NSUserActivity, PageLoadTest, PageLoadTestStatistics, PinnableBanner, StoreBanner, TabBarItem, TabOverviewItem, TiltedTabItem, TouchIconFetcher, UIImage, UIView, WBSFluidProgressController, WBSFluidProgressState, WBSHistoryContextController, WBSHistoryVisit, WBSSameDocumentNavigationToHistoryVisitCorrelator, WKBackForwardListItem, WebBookmark, _SFAppleConnectExtensionPageController, _SFApplicationManifestFetcher, _SFBrowserConfiguration, _SFCalendarEventDetector, _SFDialogController, _SFDownload, _SFFluidProgressView, _SFFormAutoFillController, _SFInjectedJavaScriptController, _SFNavigationBarItem, _SFNavigationIntent, _SFPageLoadErrorController, _SFPrintController, _SFQuickLookDocument, _SFQuickLookDocumentController, _SFQuickLookDocumentWriter, _SFReaderController, _SFReloadOptionsController, _SFSafariSharingExtensionController, _SFSafeBrowsingController, _SFSecIdentityPreferencesController, _SFTabStateData, _SFTelephonyNavigationMitigationPolicy, _SFURLSpoofingMitigator, _SFWebClipMetadataFetcher, _SFWebView, _WKRemoteObjectInterface, _WKSessionState, _WKUserInitiatedAction;

@interface TabDocument : NSObject <BCSActionDelegate, AppBannerMetaTagContentObserver, LoadingControllerDelegate, QuickWebsiteSearchEventListener, _SFAutomaticBugCaptureObserver, SFFormAutoFillControllerDelegate, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _WKDiagnosticLoggingDelegate, _SFDialogControllerDelegate, _SFDialogViewControllerPresenting, _SFDownloadDelegate, _SFFindOnPageViewDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFReaderControllerDelegate, _SFSafeBrowsingControllerDelegate, _SFWebViewDelegate, _WKFullscreenDelegate, _WKInputDelegate, _SFQuickLookDocumentSource, _WKIconLoadingDelegate, _SFAppleConnectExtensionUIDelegate, ReadingListMetadataProvider, MergeableItem, _SFDialogPresenting, WBSTabItemSearchSupport>
{
    unsigned long long _progressAnimationSuppressedCount;	// 8 = 0x8
    _Bool _EVOrganizationNameIsValid;	// 16 = 0x10
    NSString *_EVOrganizationName;	// 24 = 0x18
    NSUserActivity *_userActivity;	// 32 = 0x20
    _Bool _forwardActivityToCoreSpotlight;	// 40 = 0x28
    NSError *_lastLoadError;	// 48 = 0x30
    _SFURLSpoofingMitigator *_URLSpoofingMitigator;	// 56 = 0x38
    _WKSessionState *_savedSessionState;	// 64 = 0x40
    _WKRemoteObjectInterface *_siteSpecificSearchEventListenerInterface;	// 72 = 0x48
    _WKRemoteObjectInterface *_appBannerMetaTagContentObserverInterface;	// 80 = 0x50
    _WKRemoteObjectInterface *_automaticBugCaptureObserverInterface;	// 88 = 0x58
    _SFSafariSharingExtensionController *_sharingExtensionController;	// 96 = 0x60
    _SFReloadOptionsController *_reloadOptionsController;	// 104 = 0x68
    _SFCalendarEventDetector *_calendarEventDetector;	// 112 = 0x70
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;	// 120 = 0x78
    _SFInjectedJavaScriptController *_activityJSController;	// 128 = 0x80
    _SFWebClipMetadataFetcher *_webClipMetadataFetcher;	// 136 = 0x88
    TouchIconFetcher *_touchIconFetcher;	// 144 = 0x90
    NSMutableArray *_fallbackURLs;	// 152 = 0x98
    _Bool _loadWasUserDriven;	// 160 = 0xa0
    _Bool _userDrivenLoadWasConsumed;	// 161 = 0xa1
    _Bool _shouldDismissReaderInReponseToSameDocumentNavigation;	// 162 = 0xa2
    unsigned long long _lastReaderDeactivationMode;	// 168 = 0xa8
    FindOnPageCompletionProvider *_findCompletionProvider;	// 176 = 0xb0
    _SFFormAutoFillController *_autoFillController;	// 184 = 0xb8
    CDUnknownBlockType _autoFillAuthenticationCompletionBlock;	// 192 = 0xc0
    _Bool _allowURLAsTitle;	// 200 = 0xc8
    LoadingController *_loadingController;	// 208 = 0xd0
    WBSFluidProgressController *_fluidProgressController;	// 216 = 0xd8
    _Bool _wasOpenedFromHistory;	// 224 = 0xe0
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;	// 232 = 0xe8
    NSURL *_overrideURLForHTTPAuthenticationDialog;	// 240 = 0xf0
    WKBackForwardListItem *_parentTabItem;	// 248 = 0xf8
    _SFApplicationManifestFetcher *_applicationManifestFetcher;	// 256 = 0x100
    _SFDownload *_activeDownload;	// 264 = 0x108
    _SFFluidProgressView *_progressView;	// 272 = 0x110
    _SFNavigationBarItem *_navigationBarItem;	// 280 = 0x118
    _Bool _displayingStandaloneImage;	// 288 = 0x120
    _Bool _displayingStandaloneMedia;	// 289 = 0x121
    _Bool _quickLookDocumentCheckCompleted;	// 290 = 0x122
    _Bool _didFirstPaint;	// 291 = 0x123
    _SFDialogController *_dialogController;	// 296 = 0x128
    _Bool _shouldSuppressDialogsThatBlockWebProcessForProvisionalNavigation;	// 304 = 0x130
    _Bool _shouldResetPrintSuppressionOnNextCommit;	// 305 = 0x131
    WebBookmark *_bookmarkForIconFetching;	// 312 = 0x138
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;	// 320 = 0x140
    StoreBanner *_storeBanner;	// 328 = 0x148
    PinnableBanner *_appBannerPendingFirstPaint;	// 336 = 0x150
    _Bool _sourceApplicationIsValid;	// 344 = 0x158
    _Bool _isDisplayingTelephonyPrompt;	// 345 = 0x159
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;	// 352 = 0x160
    _Bool _isEditingFormFieldOnCurrentPage;	// 360 = 0x168
    _Bool _hasFocusedInputFieldOnCurrentPage;	// 361 = 0x169
    _WKUserInitiatedAction *_lastUserInitiatedAction;	// 368 = 0x170
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;	// 376 = 0x178
    PageLoadTest *_pageLoadTest;	// 384 = 0x180
    NSTimer *_donateTextTimer;	// 392 = 0x188
    NSTimer *_unresponsiveWebProcessTimer;	// 400 = 0x190
    CDUnknownBlockType _unresponsiveWebProcessBlock;	// 408 = 0x198
    _Bool _suppressCrashBanner;	// 416 = 0x1a0
    _SFNavigationIntent *_deferredDropNavigationIntent;	// 424 = 0x1a8
    unsigned long long _deferredDropNavigationIntentGeneration;	// 432 = 0x1b0
    NSNumber *_deferredDropWasHandledByWebKit;	// 440 = 0x1b8
    id <UIDragSession> _webKitDragSession;	// 448 = 0x1c0
    unsigned long long _cachedMediaCaptureDeviceIcon;	// 456 = 0x1c8
    NSPointerArray *_spawnedTabDocuments;	// 464 = 0x1d0
    NSURL *_cachedCanonicalURL;	// 472 = 0x1d8
    _Bool _currentLoadIsEligibleForAutoFillAuthentication;	// 480 = 0x1e0
    _SFAppleConnectExtensionPageController *_appleConnectPageController;	// 488 = 0x1e8
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;	// 496 = 0x1f0
    NSURL *_cachedURL;	// 504 = 0x1f8
    id _faviconToken;	// 512 = 0x200
    NSURL *_originalURL;	// 520 = 0x208
    NSTimer *_updateFaviconTimer;	// 528 = 0x210
    unsigned long long _currentUsageState;	// 536 = 0x218
    NSURL *_lastURLForWhichUsageStateWasSet;	// 544 = 0x220
    NSString *_domainWhereUserDeclinedAutomaticStrongPassword;	// 552 = 0x228
    _Bool _needsSendTelemetryForProvisionalLoad;	// 560 = 0x230
    _Bool _hasDoneReaderAvailabilityDetection;	// 561 = 0x231
    _Bool _matchedLastSearch;	// 562 = 0x232
    _Bool _wasOpenedFromLink;	// 563 = 0x233
    _Bool _showingReader;	// 564 = 0x234
    _Bool _shouldRestoreReader;	// 565 = 0x235
    _Bool _shouldRevealAppLinkBannerForNextCommit;	// 566 = 0x236
    _Bool _storeBannersAreDisabled;	// 567 = 0x237
    _Bool _siteCustomIconPrecomposed;	// 568 = 0x238
    _Bool _suppressingProgressAnimationForNavigationGesture;	// 569 = 0x239
    _Bool _wantsReaderWhenActivated;	// 570 = 0x23a
    _Bool _hibernatedDueToMemoryWarning;	// 571 = 0x23b
    _Bool _webViewIsFullscreen;	// 572 = 0x23c
    _Bool _allowsProgrammaticFocusToBeginInputSession;	// 573 = 0x23d
    _Bool _showingContinuous;	// 574 = 0x23e
    _Bool _persistWhenHibernated;	// 575 = 0x23f
    _Bool _active;	// 576 = 0x240
    _Bool _blankDocument;	// 577 = 0x241
    _Bool _preparingForNewUserActivity;	// 578 = 0x242
    _Bool _hibernated;	// 579 = 0x243
    _Bool _closed;	// 580 = 0x244
    _Bool _didFinishDocumentLoad;	// 581 = 0x245
    _Bool _didFirstLayout;	// 582 = 0x246
    _Bool _contentIsReadyForSnapshot;	// 583 = 0x247
    _Bool _downloadedFileTypeIsQuickLookDocument;	// 584 = 0x248
    _Bool _shouldObscureForDigitalHealth;	// 585 = 0x249
    WBSFluidProgressState *_fluidProgressState;	// 592 = 0x250
    NSArray *_titleWords;	// 600 = 0x258
    NSString *_lastSearchTerm;	// 608 = 0x260
    NSString *_titleForLastSearch;	// 616 = 0x268
    NSString *_URLStringForLastSearch;	// 624 = 0x270
    NSArray *_URLStringComponents;	// 632 = 0x278
    WBSHistoryContextController *_contextController;	// 640 = 0x280
    BrowserController *_browserController;	// 648 = 0x288
    TabDocument *_parentTabDocument;	// 656 = 0x290
    FindOnPageView *_findOnPageView;	// 664 = 0x298
    _SFQuickLookDocument *_quickLookDocument;	// 672 = 0x2a0
    _SFQuickLookDocumentController *_quickLookDocumentController;	// 680 = 0x2a8
    long long _readerViewTopScrollOffset;	// 688 = 0x2b0
    PinnableBanner *_appBanner;	// 696 = 0x2b8
    NSString *_sourceApplicationBundleIdentifierForNextCommit;	// 704 = 0x2c0
    long long _externalAppRedirectState;	// 712 = 0x2c8
    UIImage *_siteCustomIcon;	// 720 = 0x2d0
    TabOverviewItem *_tabOverviewItem;	// 728 = 0x2d8
    TiltedTabItem *_tiltedTabItem;	// 736 = 0x2e0
    WebBookmark *_readingListBookmark;	// 744 = 0x2e8
    unsigned long long _sessionStateRestorationSource;	// 752 = 0x2f0
    id <TabDocumentDelegate> _delegate;	// 760 = 0x2f8
    _SFBrowserConfiguration *_configuration;	// 768 = 0x300
    PageLoadTestStatistics *_pageLoadStatistics;	// 776 = 0x308
    NSURL *_webFeedURL;	// 784 = 0x310
    NSURL *_URLFromExternalApplication;	// 792 = 0x318
    _SFPageLoadErrorController *_pageLoadErrorController;	// 800 = 0x320
    WBSSameDocumentNavigationToHistoryVisitCorrelator *_sameDocumentNavigationToHistoryVisitCorrelator;	// 808 = 0x328
    _SFWebView *_webView;	// 816 = 0x330
    TabBarItem *_tabBarItem;	// 824 = 0x338
    _SFSafeBrowsingController *_safeBrowsingController;	// 832 = 0x340
    NSURL *_tabReuseURL;	// 840 = 0x348
    NSUUID *_UUID;	// 848 = 0x350
    double _lastViewedTime;	// 856 = 0x358
    WBSHistoryVisit *_lastVisit;	// 864 = 0x360
    LinkPreviewViewController *_previewViewController;	// 872 = 0x368
    _SFPrintController *_printController;	// 880 = 0x370
    NSUUID *_ownerUUID;	// 888 = 0x378
    CSSearchableItemAttributeSet *_searchableItemAttributes;	// 896 = 0x380
    NSString *_sourceApplicationBundleIdentifier;	// 904 = 0x388
    _SFReaderController *_readerContext;	// 912 = 0x390
    _SFWebView *_readerWebView;	// 920 = 0x398
    FALockOutViewController *_associatedLockOutViewController;	// 928 = 0x3a0
    struct CGPoint _scrollPoint;	// 936 = 0x3a8
}

+ (id)contextClient;	// IMP=0x0000000100110604
+ (id)tabDocumentForWKWebView:(id)arg1;	// IMP=0x00000001000fa6c4
@property(nonatomic) __weak FALockOutViewController *associatedLockOutViewController; // @synthesize associatedLockOutViewController=_associatedLockOutViewController;
@property(nonatomic) _Bool shouldObscureForDigitalHealth; // @synthesize shouldObscureForDigitalHealth=_shouldObscureForDigitalHealth;
@property(readonly, nonatomic) _SFWebView *readerWebView; // @synthesize readerWebView=_readerWebView;
@property(readonly, nonatomic) _SFReaderController *readerContext; // @synthesize readerContext=_readerContext;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(retain, nonatomic) CSSearchableItemAttributeSet *searchableItemAttributes; // @synthesize searchableItemAttributes=_searchableItemAttributes;
@property(retain, nonatomic) NSUUID *ownerUUID; // @synthesize ownerUUID=_ownerUUID;
@property(readonly, nonatomic) _SFPrintController *printController; // @synthesize printController=_printController;
@property(nonatomic) _Bool downloadedFileTypeIsQuickLookDocument; // @synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument;
@property(retain, nonatomic) LinkPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(readonly, nonatomic) _Bool contentIsReadyForSnapshot; // @synthesize contentIsReadyForSnapshot=_contentIsReadyForSnapshot;
@property(readonly, nonatomic) _Bool didFirstLayout; // @synthesize didFirstLayout=_didFirstLayout;
@property(readonly, nonatomic) _Bool didFinishDocumentLoad; // @synthesize didFinishDocumentLoad=_didFinishDocumentLoad;
@property(retain, nonatomic) WBSHistoryVisit *lastVisit; // @synthesize lastVisit=_lastVisit;
@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=_closed;
@property(nonatomic) double lastViewedTime; // @synthesize lastViewedTime=_lastViewedTime;
@property(copy, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(copy, nonatomic) NSURL *tabReuseURL; // @synthesize tabReuseURL=_tabReuseURL;
@property(nonatomic) struct CGPoint scrollPoint; // @synthesize scrollPoint=_scrollPoint;
@property(readonly, nonatomic, getter=isHibernated) _Bool hibernated; // @synthesize hibernated=_hibernated;
@property(readonly, nonatomic) _SFSafeBrowsingController *safeBrowsingController; // @synthesize safeBrowsingController=_safeBrowsingController;
@property(readonly, nonatomic) TabBarItem *tabBarItem; // @synthesize tabBarItem=_tabBarItem;
@property(nonatomic, getter=isPreparingForNewUserActivity) _Bool preparingForNewUserActivity; // @synthesize preparingForNewUserActivity=_preparingForNewUserActivity;
@property(nonatomic, getter=isBlankDocument) _Bool blankDocument; // @synthesize blankDocument=_blankDocument;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) _Bool persistWhenHibernated; // @synthesize persistWhenHibernated=_persistWhenHibernated;
@property(readonly, nonatomic) WBSSameDocumentNavigationToHistoryVisitCorrelator *sameDocumentNavigationToHistoryVisitCorrelator; // @synthesize sameDocumentNavigationToHistoryVisitCorrelator=_sameDocumentNavigationToHistoryVisitCorrelator;
@property(readonly, nonatomic) _SFDialogController *dialogController; // @synthesize dialogController=_dialogController;
@property(readonly, nonatomic) _SFPageLoadErrorController *pageLoadErrorController; // @synthesize pageLoadErrorController=_pageLoadErrorController;
@property(retain, nonatomic) NSURL *URLFromExternalApplication; // @synthesize URLFromExternalApplication=_URLFromExternalApplication;
@property(retain, nonatomic) NSURL *webFeedURL; // @synthesize webFeedURL=_webFeedURL;
@property(nonatomic, getter=isShowingContinuous) _Bool showingContinuous; // @synthesize showingContinuous=_showingContinuous;
@property(nonatomic) _Bool allowsProgrammaticFocusToBeginInputSession; // @synthesize allowsProgrammaticFocusToBeginInputSession=_allowsProgrammaticFocusToBeginInputSession;
@property(retain, nonatomic) PageLoadTestStatistics *pageLoadStatistics; // @synthesize pageLoadStatistics=_pageLoadStatistics;
@property(readonly, nonatomic) _Bool webViewIsFullscreen; // @synthesize webViewIsFullscreen=_webViewIsFullscreen;
@property(readonly, nonatomic) _SFBrowserConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <TabDocumentDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long sessionStateRestorationSource; // @synthesize sessionStateRestorationSource=_sessionStateRestorationSource;
@property(nonatomic, getter=wasHibernatedDueToMemoryWarning) _Bool hibernatedDueToMemoryWarning; // @synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning;
@property(nonatomic, getter=isDisplayingStandaloneMedia) _Bool displayingStandaloneMedia; // @synthesize displayingStandaloneMedia=_displayingStandaloneMedia;
@property(nonatomic, getter=isDisplayingStandaloneImage) _Bool displayingStandaloneImage; // @synthesize displayingStandaloneImage=_displayingStandaloneImage;
@property(nonatomic) _Bool wantsReaderWhenActivated; // @synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated;
@property(nonatomic) _Bool suppressingProgressAnimationForNavigationGesture; // @synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture;
@property(retain, nonatomic) WebBookmark *readingListBookmark; // @synthesize readingListBookmark=_readingListBookmark;
@property(readonly, nonatomic) TiltedTabItem *tiltedTabItem; // @synthesize tiltedTabItem=_tiltedTabItem;
@property(readonly, nonatomic) TabOverviewItem *tabOverviewItem; // @synthesize tabOverviewItem=_tabOverviewItem;
@property(nonatomic) _Bool siteCustomIconPrecomposed; // @synthesize siteCustomIconPrecomposed=_siteCustomIconPrecomposed;
@property(retain, nonatomic) UIImage *siteCustomIcon; // @synthesize siteCustomIcon=_siteCustomIcon;
@property(nonatomic) long long externalAppRedirectState; // @synthesize externalAppRedirectState=_externalAppRedirectState;
@property(nonatomic) _Bool storeBannersAreDisabled; // @synthesize storeBannersAreDisabled=_storeBannersAreDisabled;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifierForNextCommit; // @synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit;
@property(nonatomic) _Bool shouldRevealAppLinkBannerForNextCommit; // @synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit;
@property(retain, nonatomic) PinnableBanner *appBanner; // @synthesize appBanner=_appBanner;
@property(nonatomic) long long readerViewTopScrollOffset; // @synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset;
@property(nonatomic) _Bool shouldRestoreReader; // @synthesize shouldRestoreReader=_shouldRestoreReader;
@property(nonatomic, getter=isShowingReader) _Bool showingReader; // @synthesize showingReader=_showingReader;
@property(readonly, retain, nonatomic) _SFQuickLookDocumentController *quickLookDocumentController; // @synthesize quickLookDocumentController=_quickLookDocumentController;
@property(nonatomic) _Bool wasOpenedFromLink; // @synthesize wasOpenedFromLink=_wasOpenedFromLink;
@property(retain, nonatomic) _SFQuickLookDocument *quickLookDocument; // @synthesize quickLookDocument=_quickLookDocument;
@property(readonly, nonatomic) FindOnPageView *findOnPageView; // @synthesize findOnPageView=_findOnPageView;
@property(readonly, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property(nonatomic) __weak TabDocument *parentTabDocument; // @synthesize parentTabDocument=_parentTabDocument;
@property(nonatomic) __weak BrowserController *browserController; // @synthesize browserController=_browserController;
@property(nonatomic) _Bool matchedLastSearch; // @synthesize matchedLastSearch=_matchedLastSearch;
@property(copy, nonatomic) NSArray *URLStringComponents; // @synthesize URLStringComponents=_URLStringComponents;
@property(copy, nonatomic) NSString *URLStringForLastSearch; // @synthesize URLStringForLastSearch=_URLStringForLastSearch;
@property(copy, nonatomic) NSString *titleForLastSearch; // @synthesize titleForLastSearch=_titleForLastSearch;
@property(copy, nonatomic) NSString *lastSearchTerm; // @synthesize lastSearchTerm=_lastSearchTerm;
@property(copy, nonatomic) NSArray *titleWords; // @synthesize titleWords=_titleWords;
@property(readonly, nonatomic) _Bool hasDoneReaderDetection; // @synthesize hasDoneReaderDetection=_hasDoneReaderAvailabilityDetection;
@property(readonly, nonatomic) WBSFluidProgressState *progressState; // @synthesize progressState=_fluidProgressState;
- (void).cxx_destruct;	// IMP=0x0000000100112a48
- (void)_webViewDidExitElementFullscreen:(id)arg1;	// IMP=0x00000001001123cc
- (void)appleConnectExtensionPageController:(id)arg1 dismissViewController:(id)arg2;	// IMP=0x0000000100112344
- (void)appleConnectExtensionPageController:(id)arg1 presentViewController:(id)arg2;	// IMP=0x00000001001122bc
- (void)updateUsageTrackingInformationIfNecessaryGivenDocumentIsCurrent:(_Bool)arg1;	// IMP=0x000000010011200c
- (id)_tabDocumentsSharingWebProcess;	// IMP=0x0000000100111cbc
- (void)_terminateWebProcessAndReloadIfActive:(_Bool)arg1;	// IMP=0x0000000100111c34
- (void)_terminateWebProcessThenDoUnresponsiveWebProcessBlock;	// IMP=0x00000001001118fc
- (void)_unresponsiveWebProcessTimerFired:(id)arg1;	// IMP=0x0000000100111864
- (void)_terminateWebProcessIfNeededAndShowCrashBanner:(_Bool)arg1 thenDo:(CDUnknownBlockType)arg2;	// IMP=0x0000000100111620
- (void)fetchMetadataForBookmark:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001111c4
- (void)presentDialog:(id)arg1 sender:(id)arg2;	// IMP=0x0000000100111164
- (void)createReaderWebViewForReaderController:(id)arg1;	// IMP=0x000000010011112c
- (id)readerURLForReaderController:(id)arg1;	// IMP=0x0000000100111074
- (void)collectReadingListItemInfo;	// IMP=0x0000000100110f28
- (void)clearReaderContext;	// IMP=0x0000000100110f1c
- (void)clearReaderView;	// IMP=0x0000000100110ee0
- (void)_createBrowserReaderViewIfNeeded;	// IMP=0x0000000100110a0c
- (void)createBrowserReaderViewIfNeeded;	// IMP=0x00000001001109d8
- (void)prepareToUseReader;	// IMP=0x0000000100110978
- (id)readerPageArchiveURL;	// IMP=0x0000000100110834
- (_Bool)isShowingReadingListArchive;	// IMP=0x00000001001107b0
@property(readonly, nonatomic) WBSHistoryContextController *contextController; // @synthesize contextController=_contextController;
- (void)readerController:(id)arg1 didExtractArticleText:(id)arg2 withMetadata:(id)arg3;	// IMP=0x0000000100110520
- (void)readerController:(id)arg1 didTwoFingerTapLinkInReaderWithContext:(id)arg2;	// IMP=0x0000000100110418
- (void)readerController:(id)arg1 didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg2;	// IMP=0x00000001001102a4
- (void)readerController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;	// IMP=0x0000000100110140
- (void)readerController:(id)arg1 didDeactivateReaderWithMode:(unsigned long long)arg2;	// IMP=0x0000000100110014
- (void)readerController:(id)arg1 contentDidBecomeReadyWithDetectedLanguage:(id)arg2;	// IMP=0x000000010010ffc0
- (void)readerController:(id)arg1 didDetermineReaderAvailability:(_Bool)arg2 dueToSameDocumentNavigation:(_Bool)arg3;	// IMP=0x000000010010f6e4
- (void)didActivateReader;	// IMP=0x000000010010f5e0
- (_Bool)isReaderAvailable;	// IMP=0x000000010010f5ac
- (void)updateReadingListItemPreviewText:(id)arg1;	// IMP=0x000000010010f450
- (void)clearReaderScrollInformation;	// IMP=0x000000010010f414
- (_Bool)shouldShowReaderOnActivate;	// IMP=0x000000010010f3bc
- (id)safeBrowsingControllerExpectedOrCurrentURL:(id)arg1;	// IMP=0x000000010010f398
- (void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1;	// IMP=0x000000010010f394
- (void)safeBrowsingControllerClosePage:(id)arg1;	// IMP=0x000000010010f374
- (void)safeBrowsingControllerGoBack:(id)arg1;	// IMP=0x000000010010f358
- (void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2;	// IMP=0x000000010010f32c
- (void)startCheckingFraudulentWebSitesWithURL:(id)arg1;	// IMP=0x000000010010f28c
- (void)cancelCheckForFraudulentWebsites;	// IMP=0x000000010010f274
- (_Bool)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;	// IMP=0x000000010010f254
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;	// IMP=0x000000010010f1cc
- (void)pageLoadErrorControllerClosePage:(id)arg1;	// IMP=0x000000010010f134
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;	// IMP=0x000000010010f078
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;	// IMP=0x000000010010efa0
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;	// IMP=0x000000010010ef00
- (_Bool)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;	// IMP=0x000000010010ee98
- (void)pageLoadErrorControllerDidAddAlert:(id)arg1;	// IMP=0x000000010010ee3c
- (void)dialogController:(id)arg1 dismissViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;	// IMP=0x000000010010ed78
- (void)dialogController:(id)arg1 presentViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;	// IMP=0x000000010010ecb4
- (void)dialogController:(id)arg1 didDismissDialog:(id)arg2;	// IMP=0x000000010010ec2c
- (void)dialogController:(id)arg1 willPresentDialog:(id)arg2;	// IMP=0x000000010010eb8c
- (long long)dialogController:(id)arg1 presentationPolicyForDialog:(id)arg2;	// IMP=0x000000010010ea84
- (id)loadingDialogPageTitleForPrintController:(id)arg1;	// IMP=0x000000010010ea60
- (id)pageTitleForPrintController:(id)arg1;	// IMP=0x000000010010ea3c
- (id)URLStringForPrintController:(id)arg1;	// IMP=0x000000010010ea18
- (_Bool)printControllerCanPresentPrintUI:(id)arg1;	// IMP=0x000000010010e998
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;	// IMP=0x000000010010e96c
- (_Bool)printControllerPageIsLoading:(id)arg1;	// IMP=0x000000010010e950
- (_Bool)printControllerShouldPrintReader:(id)arg1;	// IMP=0x000000010010e940
- (void)_getAuthenticationForAutoFillOnPageLoad:(_Bool)arg1 autoFillController:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000010010e48c
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)arg1 onPageLoad:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010010e334
- (void)formAutoFillControllerGetAuthenticationForAutoFillOnPageLoad:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010010e018
- (_Bool)formAutoFillControllerShouldShowIconsInPasswordPicker:(id)arg1;	// IMP=0x000000010010e010
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)arg1;	// IMP=0x000000010010dfb0
- (id)formAutoFillControllerOneTimeCodeMonitor:(id)arg1;	// IMP=0x000000010010df10
- (void)formAutoFillControllerUserChoseToUseGeneratedPassword:(id)arg1;	// IMP=0x000000010010def8
- (_Bool)formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:(id)arg1;	// IMP=0x000000010010de44
- (_Bool)formAutoFillControllerShouldDisableStreamlinedLogin:(id)arg1;	// IMP=0x000000010010de18
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;	// IMP=0x000000010010ddf4
- (_Bool)formAutoFillControllerCanPrefillForm:(id)arg1;	// IMP=0x000000010010ddb8
- (struct UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(struct CGPoint)arg3 targetContentOffset:(inout struct CGPoint *)arg4;	// IMP=0x000000010010dcec
- (void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2;	// IMP=0x000000010010dc3c
- (void)updateFindCompletionProviderWithMatchesCount:(unsigned long long)arg1 forString:(id)arg2 forFindOnPageView:(id)arg3;	// IMP=0x000000010010dad4
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;	// IMP=0x000000010010d9fc
- (id)webViewForFindOnPageView:(id)arg1;	// IMP=0x000000010010d9b4
- (void)deferredLoadingWatchdogTimerFired;	// IMP=0x000000010010d8e8
- (void)didFindAppBannerWithContent:(id)arg1;	// IMP=0x000000010010d6bc
- (void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2;	// IMP=0x000000010010d564
- (void)_webView:(id)arg1 logDiagnosticMessageWithEnhancedPrivacy:(id)arg2 description:(id)arg3;	// IMP=0x000000010010d518
- (void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4;	// IMP=0x000000010010d3ac
- (void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(long long)arg4;	// IMP=0x000000010010d274
- (void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3;	// IMP=0x000000010010d0a0
- (void)loadingControllerWillStartUserDrivenLoad:(id)arg1;	// IMP=0x000000010010d068
- (void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(_Bool)arg3;	// IMP=0x000000010010d040
- (long long)_webView:(id)arg1 decidePolicyForFocusedElement:(id)arg2;	// IMP=0x000000010010ceb8
- (void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3;	// IMP=0x000000010010ce58
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;	// IMP=0x000000010010ce3c
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010010cbf8
- (void)_webView:(id)arg1 didResignInputElementStrongPasswordAppearanceWithUserInfo:(id)arg2;	// IMP=0x000000010010cbd0
- (_Bool)_webView:(id)arg1 focusRequiresStrongPasswordAssistance:(id)arg2;	// IMP=0x000000010010cb08
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;	// IMP=0x000000010010ca4c
- (void)_webView:(id)arg1 willStartInputSession:(id)arg2;	// IMP=0x000000010010c978
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;	// IMP=0x000000010010c920
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;	// IMP=0x000000010010c8c8
- (void)_webView:(id)arg1 didChangeSafeAreaShouldAffectObscuredInsets:(_Bool)arg2;	// IMP=0x000000010010c86c
- (void)_webView:(id)arg1 requestGeolocationAuthorizationForURL:(id)arg2 frame:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010010c784
- (void)_attemptDeferredDropNavigation;	// IMP=0x000000010010c6c8
- (void)_webView:(id)arg1 dataInteractionOperationWasHandled:(_Bool)arg2 forSession:(id)arg3 itemProviders:(id)arg4;	// IMP=0x000000010010c664
- (_Bool)_webView:(id)arg1 performDataInteractionOperationWithItemProviders:(id)arg2;	// IMP=0x000000010010c538
- (unsigned long long)_webView:(id)arg1 willUpdateDataInteractionOperationToOperation:(unsigned long long)arg2 forSession:(id)arg3;	// IMP=0x000000010010c458
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 session:(id)arg3 didEndWithOperation:(unsigned long long)arg4;	// IMP=0x000000010010c444
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 sessionWillBegin:(id)arg3;	// IMP=0x000000010010c430
- (void)_webView:(id)arg1 imageOrMediaDocumentSizeChanged:(struct CGSize)arg2;	// IMP=0x000000010010c408
- (void)_webView:(id)arg1 printFrame:(id)arg2;	// IMP=0x000000010010c37c
- (void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000010010c158
- (void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(CDUnknownBlockType)arg7;	// IMP=0x000000010010bf18
- (id)_presentingViewControllerForWebView:(id)arg1;	// IMP=0x000000010010be24
- (id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3;	// IMP=0x000000010010bda8
- (_Bool)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;	// IMP=0x000000010010bda0
- (id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3;	// IMP=0x000000010010a488
- (id)actionPickerItemsForAction:(id)arg1 proposedItems:(id)arg2;	// IMP=0x000000010010a3e4
- (struct CGRect)sourceRectForPopoverActionPicker:(id)arg1;	// IMP=0x000000010010a2dc
- (id)presentingViewControllerForAction:(id)arg1;	// IMP=0x000000010010a268
- (id)_webView:(id)arg1 alternateURLFromImage:(id)arg2 userInfo:(id *)arg3;	// IMP=0x000000010010a188
- (void)_webView:(id)arg1 getAlternateURLFromImage:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100109e20
- (id)actionsForElement:(id)arg1 defaultActions:(id)arg2;	// IMP=0x0000000100109da0
- (id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2;	// IMP=0x00000001001098b0
- (id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2;	// IMP=0x0000000100109494
- (void)_animateElement:(id)arg1 toToolbarButton:(long long)arg2;	// IMP=0x000000010010921c
- (struct CGRect)_convertRectFromDocumentToWebView:(struct CGRect)arg1;	// IMP=0x00000001001090fc
- (void)_webViewDidExitFullscreen:(id)arg1;	// IMP=0x0000000100108fe0
- (void)_webViewDidEnterFullscreen:(id)arg1;	// IMP=0x0000000100108ec0
- (void)_webViewFullscreenMayReturnToInline:(id)arg1;	// IMP=0x0000000100108e64
- (void)webViewDidClose:(id)arg1;	// IMP=0x0000000100108d48
- (void)_webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100108674
- (void)_webView:(id)arg1 requestStorageAccessPanelForDomain:(id)arg2 underCurrentDomain:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100108530
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000001001083ec
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001082cc
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001081b0
- (void)_webView:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;	// IMP=0x00000001001080e4
- (void)_webView:(id)arg1 checkUserMediaPermissionForURL:(id)arg2 mainFrameURL:(id)arg3 frameIdentifier:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100107ffc
- (void)_webView:(id)arg1 requestUserMediaAuthorizationForDevices:(unsigned long long)arg2 url:(id)arg3 mainFrameURL:(id)arg4 decisionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100107f0c
- (void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2;	// IMP=0x0000000100107e7c
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;	// IMP=0x0000000100107d2c
- (void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;	// IMP=0x0000000100107ca4
- (void)_webViewDidBeginNavigationGesture:(id)arg1;	// IMP=0x0000000100107c48
- (void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;	// IMP=0x0000000100107b68
- (void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;	// IMP=0x0000000100107abc
- (id)_webCryptoMasterKeyForWebView:(id)arg1;	// IMP=0x0000000100107aa0
- (void)_webViewWebProcessDidCrash:(id)arg1;	// IMP=0x0000000100107748
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;	// IMP=0x00000001001075b4
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;	// IMP=0x0000000100106ff4
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100106ad4
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;	// IMP=0x0000000100106934
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;	// IMP=0x0000000100105c94
- (_Bool)_isLowMemoryDevice;	// IMP=0x0000000100105c60
- (void)getApplicationManifestWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100105bb4
- (id)touchIconFetcher;	// IMP=0x0000000100105b48
@property(readonly, nonatomic) _SFWebClipMetadataFetcher *webClipMetadataFetcher;
@property(readonly, nonatomic) _SFInjectedJavaScriptController *activityJSController;
- (void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2;	// IMP=0x00000001001059d0
- (void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2;	// IMP=0x00000001001058dc
- (void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2;	// IMP=0x00000001001057b4
- (void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2;	// IMP=0x0000000100105568
- (id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(struct CGSize)arg5;	// IMP=0x0000000100105454
- (id)_webView:(id)arg1 previewViewControllerForImage:(id)arg2 alternateURL:(id)arg3 defaultActions:(id)arg4 elementInfo:(id)arg5;	// IMP=0x000000010010534c
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;	// IMP=0x00000001001050d8
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2;	// IMP=0x0000000100105054
- (id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2;	// IMP=0x0000000100104e2c
- (void)_didCommitPreviewViewController:(id)arg1;	// IMP=0x0000000100104d8c
- (void)_willCommitPreviewViewController:(id)arg1;	// IMP=0x0000000100104bcc
- (void)userDeclinedAutomaticStrongPasswordForCurrentDomain;	// IMP=0x0000000100104b48
- (void)automaticPasswordSheetDismissed;	// IMP=0x0000000100104b30
- (void)removeAutomaticPasswordButton;	// IMP=0x0000000100104b14
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;	// IMP=0x0000000100104a58
- (void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4;	// IMP=0x0000000100104a2c
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;	// IMP=0x0000000100103d54
- (void)_donateTextAllowingDonationWithoutReaderText:(_Bool)arg1;	// IMP=0x000000010010371c
- (void)_donateTextSoon;	// IMP=0x000000010010359c
- (void)_clearNavigationSource;	// IMP=0x0000000100103540
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;	// IMP=0x00000001001032fc
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;	// IMP=0x00000001001032e0
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;	// IMP=0x0000000100102ffc
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001025d0
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001002b0
- (_Bool)_handleTwoFingerTapOnLinkWithContext:(id)arg1;	// IMP=0x00000001000ffe64
- (void)setMediaCaptureDeviceIcon:(unsigned long long)arg1;	// IMP=0x00000001000ffccc
@property(readonly, nonatomic) unsigned long long mediaCaptureDeviceIcon;
- (void)toggleMediaCaptureMuted;	// IMP=0x00000001000ffc70
@property(nonatomic) _Bool mediaCaptureEnabled;
- (void)sfWebViewDidEndFormControlInteraction:(id)arg1;	// IMP=0x00000001000ffb28
- (void)sfWebViewDidBecomeFirstResponder:(id)arg1;	// IMP=0x00000001000ffb00
- (void)sfWebViewDidChangeSafeAreaInsets:(id)arg1;	// IMP=0x00000001000ffaa4
- (void)_checkForAppLink;	// IMP=0x00000001000ff310
- (void)_openAppLinkInApp:(id)arg1 fromOriginalRequest:(id)arg2 updateAppLinkStrategy:(_Bool)arg3 webBrowserState:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000001000ff12c
- (id)tabStateDataForQuickUpdate;	// IMP=0x00000001000fef9c
@property(readonly, nonatomic) _SFTabStateData *tabStateData;
- (void)invalidateSourceApplication;	// IMP=0x00000001000fea38
- (void)saveWebArchiveToPath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fe6e4
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)arg1;	// IMP=0x00000001000fe618
- (id)quickLookDocumentForCurrentBackForwardListItem;	// IMP=0x00000001000fe568
- (void)_performSafeBrowsingCheckForURL:(id)arg1 isMainFrame:(_Bool)arg2;	// IMP=0x00000001000fe444
- (void)_performSafeBrowsingCheckForURLIfNecessary:(id)arg1 isMainFrame:(_Bool)arg2;	// IMP=0x00000001000fe3c8
@property(readonly, nonatomic) _SFSafariSharingExtensionController *sharingExtensionController;
- (void)loadTestURL:(id)arg1 withCallback:(CDUnknownBlockType)arg2 pagesNeedingMemoryWarningSent:(id)arg3;	// IMP=0x00000001000fe160
- (void)loadTestURL:(id)arg1 withCallback:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fe0f4
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;	// IMP=0x00000001000fe0c4
- (id)dataForQuickLookDocument:(id)arg1;	// IMP=0x00000001000fe094
- (id)suggestedFilenameForDisplayedPDF;	// IMP=0x00000001000fe07c
- (id)dataForDisplayedPDF;	// IMP=0x00000001000fe064
@property(copy, nonatomic) NSString *customUserAgent;
- (id)_addTitlePrefixToString:(id)arg1;	// IMP=0x00000001000fdd34
- (void)_forceStopLoading;	// IMP=0x00000001000fdcf0
- (void)_loadStartedDuringSimulatedClickForURL:(id)arg1;	// IMP=0x00000001000fdcec
- (void)_updateInitialZoomScaleForPPT;	// IMP=0x00000001000fdce8
- (id)_backForwardList;	// IMP=0x00000001000fdcd0
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;	// IMP=0x00000001000fdc3c
- (void)_destroyDocumentView;	// IMP=0x00000001000fd740
- (void)_createDocumentViewWithConfiguration:(id)arg1;	// IMP=0x00000001000fcdcc
- (void)_createDocumentViewRelatedTo:(id)arg1;	// IMP=0x00000001000fcd20
- (id)_webViewConfiguration;	// IMP=0x00000001000fc728
- (void)performAutoFillAction;	// IMP=0x00000001000fc710
- (void)_authenticateForAutoFillIfNeeded;	// IMP=0x00000001000fc65c
- (void)presentNextDialogIfNeeded;	// IMP=0x00000001000fc620
- (void)setAllowsRemoteInspection:(_Bool)arg1;	// IMP=0x00000001000fc608
- (_Bool)hasFailedURL;	// IMP=0x00000001000fc5c0
- (id)expectedOrCurrentURL;	// IMP=0x00000001000fc5a8
- (id)committedURL;	// IMP=0x00000001000fc590
- (void)becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fc4b0
- (struct __SecTrust *)_serverTrust;	// IMP=0x00000001000fc498
- (_Bool)mustShowBarsForBackForwardListItem:(id)arg1;	// IMP=0x00000001000fc420
- (void)restoreSessionState:(id)arg1 andNavigate:(_Bool)arg2 fromSafariViewService:(_Bool)arg3;	// IMP=0x00000001000fc26c
- (void)restoreSessionState:(id)arg1 andNavigate:(_Bool)arg2;	// IMP=0x00000001000fc24c
@property(readonly, nonatomic) _WKSessionState *sessionState;
@property(readonly, nonatomic, getter=isAlive) _Bool alive;
- (void)unhibernateWithRelatedWebView:(id)arg1;	// IMP=0x00000001000fbdd4
- (void)unhibernate;	// IMP=0x00000001000fbdc4
- (void)hibernate;	// IMP=0x00000001000fbb60
- (void)clearBackForwardList;	// IMP=0x00000001000fbafc
- (void)clearBackForwardListKeepingCurrentItem;	// IMP=0x00000001000fba98
- (void)goToBackForwardListItem:(id)arg1;	// IMP=0x00000001000fb828
- (id)_forwardListWithLimit:(unsigned long long)arg1;	// IMP=0x00000001000fb748
- (id)_backListWithLimit:(unsigned long long)arg1;	// IMP=0x00000001000fb66c
- (_Bool)isPDFDocument;	// IMP=0x00000001000035d0
- (void)stopLoading;	// IMP=0x000000010000a510
- (id)_loadNextFallbackURLWithWebClip:(id)arg1;	// IMP=0x00000001000fb3cc
- (id)loadWebClip:(id)arg1 userDriven:(_Bool)arg2;	// IMP=0x00000001000fb2e8
- (void)_updateFallbackURLsForUserTypedAddress:(id)arg1;	// IMP=0x00000001000fb164
- (id)loadSearchResultForQuery:(id)arg1;	// IMP=0x00000001000faf08
- (id)loadUserTypedAddress:(id)arg1;	// IMP=0x00000001000fae20
- (void)setOverlaidAccessoryViewsInset:(struct CGSize)arg1;	// IMP=0x00000001000fae08
- (id)pdfView;	// IMP=0x00000001000035e8
@property(readonly, nonatomic) NSString *URLString;
- (void)_loadingControllerDidStopLoadingWithError:(id)arg1;	// IMP=0x00000001000fad0c
- (void)_didFinishLoading;	// IMP=0x00000001000facc8
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00000001000fa89c
- (id)_initWithBrowserController:(id)arg1 configuration:(id)arg2;	// IMP=0x00000001000fa6f0
- (void)doneWaitingToContinueUserActivity;	// IMP=0x00000001000fa6a8
- (void)didFailToContinueUserActivity;	// IMP=0x00000001000fa688
- (void)prepareToContinueUserActivity;	// IMP=0x00000001000fa5ec
- (_Bool)shouldBlockStoreBanner:(id)arg1;	// IMP=0x00000001000fa58c
- (void)setStoreBanner:(id)arg1 isPinned:(_Bool)arg2;	// IMP=0x00000001000fa520
- (void)dismissStoreBanner:(id)arg1;	// IMP=0x00000001000fa4ac
- (void)setClosed:(_Bool)arg1 userDriven:(_Bool)arg2;	// IMP=0x00000001000fa408
- (void)userDidManipulateVisibleRegion;	// IMP=0x00000001000fa3e8
- (_Bool)canSubscribeToWebFeed;	// IMP=0x00000001000fa394
- (void)_showGenericDownloadAlert;	// IMP=0x00000001000fa378
- (void)downloadDidFinish:(id)arg1;	// IMP=0x00000001000fa0bc
- (void)downloadDidFail:(id)arg1;	// IMP=0x00000001000fa0a4
- (_Bool)_canShowDownloadWithoutPrompting:(id)arg1;	// IMP=0x00000001000f9f44
- (void)_showDownload:(id)arg1;	// IMP=0x00000001000f9700
- (_Bool)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2 beforeDismissHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000f95a8
- (void)_showPassBookControllerForPass:(id)arg1;	// IMP=0x00000001000f94dc
- (id)resultOfLoadingURL:(id)arg1;	// IMP=0x00000001000f944c
- (id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x00000001000f9240
- (id)_readingListArchiveNextPageLinkForRequest:(id)arg1 targetFrame:(id)arg2;	// IMP=0x00000001000f900c
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(_Bool)arg4 userAction:(id)arg5;	// IMP=0x00000001000f84e0
- (void)loadWindowDotOpenExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2;	// IMP=0x00000001000f846c
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(_Bool)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5;	// IMP=0x00000001000f7ee8
- (void)_addNoFeedAppSupportAlert;	// IMP=0x00000001000f7d80
- (void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 userCancelled:(_Bool)arg3;	// IMP=0x00000001000f7bb0
- (void)_cleanUpAfterRedirectToExternalApp;	// IMP=0x00000001000f7b5c
- (void)_stoppedLoadingResources;	// IMP=0x00000001000f7ad8
- (void)_startedLoadingResources;	// IMP=0x00000001000f7a54
- (void)_setAppBannerWhenPainted:(id)arg1;	// IMP=0x00000001000f793c
- (void)_clearAppBannerIfNotCurrentStoreBanner;	// IMP=0x00000001000f7874
- (id)_EVOrganizationName;	// IMP=0x00000001000f7620
- (void)_invalidateEVOrganizationName;	// IMP=0x00000001000f75e4
@property(readonly, nonatomic) _Bool canGoBackToParentTab;
- (_Bool)isSecure;	// IMP=0x0000000100003674
- (_Bool)isPageEligibileToShowNotSecureWarning;	// IMP=0x00000001000f7310
- (id)forwardListControllerWithLimit:(int)arg1;	// IMP=0x00000001000f725c
- (id)backListControllerWithLimit:(int)arg1;	// IMP=0x00000001000f7164
- (_Bool)canGoForward;	// IMP=0x0000000100003c3c
- (_Bool)canGoBack;	// IMP=0x0000000100003c24
- (void)_updateShowingContinuous;	// IMP=0x00000001000f70a0
- (int)readingListBookmarkID;	// IMP=0x0000000100003808
@property(readonly, nonatomic, getter=isShowingErrorPage) _Bool showingErrorPage;
- (_Bool)shouldActivateReaderWhenAvailable;	// IMP=0x00000001000f6ef8
- (_Bool)currentPageLoadedFromReadingList;	// IMP=0x0000000100003c68
- (void)userTappedReloadButton;	// IMP=0x00000001000f6ee4
- (void)reloadAllowingContentBlockers:(_Bool)arg1;	// IMP=0x00000001000f6e38
- (void)reload;	// IMP=0x00000001000f6e28
- (void)goForward;	// IMP=0x00000001000f6c30
- (void)goBackToParentTab;	// IMP=0x00000001000f6bd4
- (void)goBack;	// IMP=0x00000001000f69ac
- (void)restoreScrollPositionWithCloudTab:(id)arg1;	// IMP=0x00000001000f68bc
- (id)loadCloudTab:(id)arg1;	// IMP=0x00000001000f67f4
- (id)loadBookmark:(id)arg1;	// IMP=0x00000001000f6604
- (id)loadURL:(id)arg1 fromBookmark:(id)arg2;	// IMP=0x00000001000f647c
- (void)setNeedsSendTelemetryForProvisionalLoad;	// IMP=0x00000001000f6468
- (void)clearPageLoadStatistics;	// IMP=0x00000001000f6450
- (id)_loadURLInternal:(id)arg1 userDriven:(_Bool)arg2;	// IMP=0x00000001000f62cc
- (id)loadURL:(id)arg1 userDriven:(_Bool)arg2;	// IMP=0x00000001000072f4
- (void)snapshotWithSize:(struct CGSize)arg1 topBackdropHeight:(double)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001000f6214
- (void)snapshotWithSize:(struct CGSize)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000f6168
- (void)snapshotForWebClipIcon:(CDUnknownBlockType)arg1;	// IMP=0x00000001000f6084
- (void)_updateSnapshotForWebClip:(id)arg1;	// IMP=0x00000001000f5e80
- (id)_loadRequest:(id)arg1 userDriven:(_Bool)arg2 shouldOpenExternalURLs:(_Bool)arg3;	// IMP=0x00000001000f5c50
- (id)loadRequest:(id)arg1 userDriven:(_Bool)arg2;	// IMP=0x0000000100007384
@property(readonly, nonatomic) NSString *suggestedTitleForCurrentURL;
- (id)titleForSharing;	// IMP=0x00000001000f5b9c
- (id)titleForNewBookmark;	// IMP=0x00000001000f5b84
@property(readonly, copy, nonatomic) NSString *title;
- (_Bool)hasQuickLookContent;	// IMP=0x00000001000039f8
- (_Bool)isLoading;	// IMP=0x00000001000f5b30
- (void)clearBrowserController;	// IMP=0x00000001000f5abc
- (void)clearTabReuseURL;	// IMP=0x00000001000f5aa4
- (id)URLForStatePersisting;	// IMP=0x00000001000f5a8c
@property(readonly, nonatomic) NSURL *cachedCanonicalURLOrURLForSharing;
- (void)_clearCachedCanonicalURL;	// IMP=0x00000001000f5a34
- (void)fetchCanonicalURLWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000f57d4
- (id)URLForSharing;	// IMP=0x00000001000f56fc
- (id)URL;	// IMP=0x00000001000037e0
- (id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1;	// IMP=0x00000001000f55e4
@property(readonly, nonatomic) __weak id <WBSFluidProgressStateSource> currentFluidProgressStateSource;
- (void)fluidProgressRocketAnimationDidComplete;	// IMP=0x00000001000f5560
- (void)endSuppressingProgressAnimationAnimated:(_Bool)arg1;	// IMP=0x00000001000f54a8
- (void)endSuppressingProgressAnimation;	// IMP=0x00000001000f5498
- (void)beginSuppressingProgressAnimation;	// IMP=0x00000001000f5408
- (void)clearFluidProgressState;	// IMP=0x00000001000f53b8
- (_Bool)createFluidProgressState;	// IMP=0x00000001000f52b0
- (void)animateProgressForCompletedDocument;	// IMP=0x00000001000f524c
- (void)_loadingControllerEstimatedProgressChangedTo:(double)arg1;	// IMP=0x00000001000f5194
- (void)_loadingControllerDidStartLoading;	// IMP=0x00000001000f50f4
- (void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(_Bool)arg2;	// IMP=0x00000001000f4ef4
- (void)_hideQuickLookDocumentView;	// IMP=0x00000001000f4e14
- (void)_showQuickLookDocumentView;	// IMP=0x00000001000f4b00
- (void)reinsertQuickLookDocumentView;	// IMP=0x00000001000f4a18
- (_Bool)_shouldSuppressDialogsThatBlockWebProcess;	// IMP=0x00000001000f49e8
- (double)estimatedProgress;	// IMP=0x000000010000362c
- (void)willClose;	// IMP=0x00000001000f4834
- (void)_closeTabDocumentAnimated:(_Bool)arg1;	// IMP=0x00000001000f47c8
- (void)stopAdvertisingProactiveActivityContent;	// IMP=0x00000001000f4790
- (void)invalidateUserActivity;	// IMP=0x00000001000f467c
- (void)updateUserActivity;	// IMP=0x00000001000f4188
@property(readonly, nonatomic) UIView *frontView;
- (void)setNeedsNewTabSnapshot;	// IMP=0x00000001000f4010
- (void)unfreezeAfterNavigationGesture:(_Bool)arg1;	// IMP=0x00000001000f3ff8
- (void)freezeForNavigationGesture;	// IMP=0x00000001000f3fe8
- (void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;	// IMP=0x00000001000f3fc8
@property(readonly, nonatomic) _SFNavigationBarItem *navigationBarItem;
- (id)initWithTabStateData:(id)arg1 hibernated:(_Bool)arg2 browserController:(id)arg3;	// IMP=0x00000001000f3a9c
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8;	// IMP=0x00000001000f3864
- (void)_removeParentChildTabDocumentRelations;	// IMP=0x00000001000f36cc
- (id)_sessionStateWithoutParentItem;	// IMP=0x00000001000f3590
- (void)resetTabViewItems;	// IMP=0x00000001000f3078
- (id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(CDUnknownBlockType)arg7;	// IMP=0x00000001000f2af0
- (void)_updateNavigationBarItem;	// IMP=0x00000001000f24b0
- (void)_searchEngineControllerDidBecomeAvailable:(id)arg1;	// IMP=0x00000001000f2424
- (void)webView:(id)arg1 shouldLoadIconWithParameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000f1cb4
- (void)_setIcon:(id)arg1 isMonogram:(_Bool)arg2;	// IMP=0x00000001000f1c0c
- (void)updateTabIcon;	// IMP=0x00000001000f16e4
- (void)_cancelFaviconUpdate;	// IMP=0x00000001000f1634
- (void)_updateFaviconSoon;	// IMP=0x00000001000f14cc
- (void)updateTabTitle;	// IMP=0x00000001000f1304
- (id)tabBarTitle;	// IMP=0x0000000100003658
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2;	// IMP=0x0000000100003750
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2 allowUntitled:(_Bool)arg3;	// IMP=0x00000001000f10c8
@property(readonly, nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled;
- (void)dealloc;	// IMP=0x00000001000f0ef8
- (void)setInitialURLForStatePersisting:(id)arg1 title:(id)arg2;	// IMP=0x00000001000f0e5c
@property(readonly, copy) NSString *description;
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7;	// IMP=0x00000001000f0c04
- (id)initWithBrowserController:(id)arg1;	// IMP=0x00000001000f0b5c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

